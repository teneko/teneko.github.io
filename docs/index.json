{
  "index.html": {
    "href": "index.html",
    "title": "| Documentations",
    "keywords": "Hello world"
  },
  "Teronis.DotNet/Microsoft.Extensions.DependencyInjection.html": {
    "href": "Teronis.DotNet/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Documentations",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes IHostExtensions"
  },
  "Teronis.DotNet/Microsoft.Extensions.DependencyInjection.IHostExtensions.html": {
    "href": "Teronis.DotNet/Microsoft.Extensions.DependencyInjection.IHostExtensions.html",
    "title": "Class IHostExtensions | Documentations",
    "keywords": "Class IHostExtensions Inheritance System.Object IHostExtensions Namespace : Microsoft.Extensions.DependencyInjection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IHostExtensions : object Methods | Improve this Doc View Source CreateScope(IHost, Action<IServiceProvider>) Declaration public static IHost CreateScope(this IHost host, Action<IServiceProvider> handler) Parameters Type Name Description IHost host Action < IServiceProvider > handler Returns Type Description IHost | Improve this Doc View Source CreateScopeAsync(IHost, Func<IServiceProvider, Task>) Declaration public static Task<IHost> CreateScopeAsync(this IHost host, Func<IServiceProvider, Task> handler) Parameters Type Name Description IHost host Func < IServiceProvider , Task > handler Returns Type Description Task < IHost >"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.html",
    "title": "Namespace Teronis.AspNetCore.Components.NUnit | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Components.NUnit Classes NUnitTests NUnitTestsReport NUnitTestsReportDefaults"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTests.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTests.html",
    "title": "Class NUnitTests | Documentations",
    "keywords": "Class NUnitTests Inheritance System.Object NUnitTests Namespace : Teronis.AspNetCore.Components.NUnit Assembly : Teronis.AspNetCore.Components.NUnit.dll Syntax public class NUnitTests : ComponentBase Properties | Improve this Doc View Source BeforeRunningTests Declaration public EventCallback<IServiceProvider> BeforeRunningTests { get; set; } Property Value Type Description EventCallback < IServiceProvider > | Improve this Doc View Source IdentXmlReport Declaration public bool IdentXmlReport { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ServiceProvider Declaration protected IServiceProvider ServiceProvider { get; set; } Property Value Type Description IServiceProvider | Improve this Doc View Source TestExplorationAssembly The assembly where test fixtures are going to be searched. You must set either TestExplorationAssembly or TestExplorationAssemblyType . Parameter TestExplorationAssembly has precedence. Declaration public Assembly? TestExplorationAssembly { get; set; } Property Value Type Description System.Nullable < Assembly > | Improve this Doc View Source TestExplorationAssemblyType The assembly of specified type where test fixtures are going to be searched. You must set either TestExplorationAssembly or TestExplorationAssemblyType . Parameter TestExplorationAssembly has precedence. Declaration public Type? TestExplorationAssemblyType { get; set; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source TestFilter Declaration public ITestFilter? TestFilter { get; set; } Property Value Type Description System.Nullable < ITestFilter > | Improve this Doc View Source TestListener Declaration public ITestListener? TestListener { get; set; } Property Value Type Description System.Nullable < ITestListener > | Improve this Doc View Source XmlReportDivId Declaration public string XmlReportDivId { get; set; } Property Value Type Description System.String | Improve this Doc View Source XmlReportRenderedAttributeName The attribute gets passed through to NUnitTestsReport after the test XML report has been calculated. Declaration public string? XmlReportRenderedAttributeName { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder builder) Parameters Type Name Description RenderTreeBuilder builder | Improve this Doc View Source OnAfterRenderAsync(Boolean) Declaration protected override Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description System.Boolean firstRender Returns Type Description Task Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTestsReport.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTestsReport.html",
    "title": "Class NUnitTestsReport | Documentations",
    "keywords": "Class NUnitTestsReport Inheritance System.Object NUnitTestsReport Namespace : Teronis.AspNetCore.Components.NUnit Assembly : Teronis.AspNetCore.Components.NUnit.dll Syntax public class NUnitTestsReport : ComponentBase Properties | Improve this Doc View Source XmlReport Declaration public string? XmlReport { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source XmlReportDivId Declaration public string XmlReportDivId { get; set; } Property Value Type Description System.String | Improve this Doc View Source XmlReportRenderedAttributeName Declaration public string? XmlReportRenderedAttributeName { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source BuildRenderTree(RenderTreeBuilder) Declaration protected override void BuildRenderTree(RenderTreeBuilder builder) Parameters Type Name Description RenderTreeBuilder builder Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTestsReportDefaults.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Components.NUnit.NUnitTestsReportDefaults.html",
    "title": "Class NUnitTestsReportDefaults | Documentations",
    "keywords": "Class NUnitTestsReportDefaults Inheritance System.Object NUnitTestsReportDefaults Namespace : Teronis.AspNetCore.Components.NUnit Assembly : Teronis.AspNetCore.Components.NUnit.dll Syntax public class NUnitTestsReportDefaults : object Fields | Improve this Doc View Source NUnitXmlReportIdName Declaration public const string NUnitXmlReportIdName = null Field Value Type Description System.String | Improve this Doc View Source NUnitXmlReportIdSelector Declaration public const string NUnitXmlReportIdSelector = null Field Value Type Description System.String | Improve this Doc View Source NUnitXmlReportRenderedAttributeName Declaration public const string NUnitXmlReportRenderedAttributeName = null Field Value Type Description System.String | Improve this Doc View Source NUnitXmlReportRenderedAttributeSelector Declaration public const string NUnitXmlReportRenderedAttributeSelector = null Field Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.AccountManager-1.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.AccountManager-1.html",
    "title": "Class AccountManager<DbContextType> | Documentations",
    "keywords": "Class AccountManager<DbContextType> Inheritance System.Object AccountManager <DbContextType, UserEntity , RoleEntity > AccountManager<DbContextType> Implements IAccountManager < UserEntity , RoleEntity > Inherited Members AccountManager<DbContextType, UserEntity, RoleEntity>.GetRoleByNameAsync(String) AccountManager<DbContextType, UserEntity, RoleEntity>.CreateRoleAsync(RoleEntity) AccountManager<DbContextType, UserEntity, RoleEntity>.GetUserByNameAsync(String) AccountManager<DbContextType, UserEntity, RoleEntity>.CreateUserAsync(UserEntity, String, String[]) AccountManager<DbContextType, UserEntity, RoleEntity>.InvalidateSecurityStampAsync(String) Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.dll Syntax public class AccountManager<DbContextType> : AccountManager<DbContextType, UserEntity, RoleEntity>, IAccountManager<UserEntity, RoleEntity> where DbContextType : DbContext Type Parameters Name Description DbContextType Constructors | Improve this Doc View Source AccountManager(DbContextType, UserManager<UserEntity>, RoleManager<RoleEntity>, Nullable<ILogger<AccountManager<DbContextType, UserEntity, RoleEntity>>>) Declaration public AccountManager(DbContextType dbContext, UserManager<UserEntity> userManager, RoleManager<RoleEntity> roleManager, ILogger<AccountManager<DbContextType, UserEntity, RoleEntity>>? logger = null) Parameters Type Name Description DbContextType dbContext UserManager < UserEntity > userManager RoleManager < RoleEntity > roleManager System.Nullable < ILogger < AccountManager <DbContextType, UserEntity , RoleEntity >>> logger Implements IAccountManager<UserType, RoleType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.AccountManager-3.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.AccountManager-3.html",
    "title": "Class AccountManager<DbContextType, UserType, RoleType> | Documentations",
    "keywords": "Class AccountManager<DbContextType, UserType, RoleType> Inheritance System.Object AccountManager<DbContextType, UserType, RoleType> AccountManager<DbContextType> Implements IAccountManager <UserType, RoleType> Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.dll Syntax public class AccountManager<DbContextType, UserType, RoleType> : object, IAccountManager<UserType, RoleType> where DbContextType : DbContext where UserType : class, IAccountUserEntity where RoleType : class, IAccountRoleEntity Type Parameters Name Description DbContextType UserType RoleType Constructors | Improve this Doc View Source AccountManager(DbContextType, UserManager<UserType>, RoleManager<RoleType>, Nullable<ILogger<AccountManager<DbContextType, UserType, RoleType>>>) Declaration public AccountManager(DbContextType dbContext, UserManager<UserType> userManager, RoleManager<RoleType> roleManager, ILogger<AccountManager<DbContextType, UserType, RoleType>>? logger = null) Parameters Type Name Description DbContextType dbContext UserManager <UserType> userManager RoleManager <RoleType> roleManager System.Nullable < ILogger < AccountManager <DbContextType, UserType, RoleType>>> logger Methods | Improve this Doc View Source CreateRoleAsync(RoleType) Declaration public Task<RoleType> CreateRoleAsync(RoleType roleEntity) Parameters Type Name Description RoleType roleEntity Returns Type Description Task <RoleType> | Improve this Doc View Source CreateUserAsync(UserType, String, String[]) Declaration public Task<UserType> CreateUserAsync(UserType userEntity, string password, params string[] roles) Parameters Type Name Description UserType userEntity System.String password System.String [] roles Returns Type Description Task <UserType> | Improve this Doc View Source GetRoleByNameAsync(String) Declaration public Task<RoleType> GetRoleByNameAsync(string roleName) Parameters Type Name Description System.String roleName Returns Type Description Task <RoleType> | Improve this Doc View Source GetUserByNameAsync(String) Declaration public Task<UserType> GetUserByNameAsync(string userName) Parameters Type Name Description System.String userName Returns Type Description Task <UserType> | Improve this Doc View Source InvalidateSecurityStampAsync(String) Declaration public Task InvalidateSecurityStampAsync(string userId) Parameters Type Name Description System.String userId Returns Type Description Task Implements IAccountManager<UserType, RoleType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountConfigurator-6.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountConfigurator-6.html",
    "title": "Class AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> | Documentations",
    "keywords": "Class AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Configures the required dependencies for AccountManager<DbContextType, UserType, RoleType> and AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> . Inheritance System.Object AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers Assembly : Teronis.AspNetCore.Identity.dll Syntax public class AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> : object where UserDescriptorType : IUserDescriptor where UserType : IAccountUserEntity where RoleDescriptorType : IRoleDescriptor Type Parameters Name Description UserDescriptorType Type of user descriptor. UserType Type of user entity. UserCreationType Type of user view. RoleDescriptorType Type of role descriptor. RoleType Type of role entity. RoleCreationType Type of role view. Constructors | Improve this Doc View Source AccountConfigurator(IMvcBuilder) Declaration public AccountConfigurator(IMvcBuilder mvcBuilder) Parameters Type Name Description IMvcBuilder mvcBuilder Properties | Improve this Doc View Source MvcBuilder Declaration public IMvcBuilder MvcBuilder { get; } Property Value Type Description IMvcBuilder | Improve this Doc View Source Services Declaration public IServiceCollection Services { get; } Property Value Type Description IServiceCollection Methods | Improve this Doc View Source AddRoleConverter<ImplementationType>() Adds ImplementationType as IConvertRole<RoleType, RoleCreationType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddRoleConverter<ImplementationType>() where ImplementationType : class, IConvertRole<RoleType, RoleCreationType> Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The impementation type. | Improve this Doc View Source AddRoleConverter<ImplementationType>(Func<IServiceProvider, ImplementationType>) Adds implementationFactory as IConvertRole<RoleType, RoleCreationType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddRoleConverter<ImplementationType>(Func<IServiceProvider, ImplementationType> implementationFactory) where ImplementationType : class, IConvertRole<RoleType, RoleCreationType> Parameters Type Name Description Func < IServiceProvider , ImplementationType> implementationFactory The factory that creates ImplementationType . Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The implementation type. | Improve this Doc View Source AddRoleDescriptorConverter<ImplementationType>() Adds ImplementationType as IConvertRoleDescriptor<RoleDescriptorType, RoleType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddRoleDescriptorConverter<ImplementationType>() where ImplementationType : class, IConvertRoleDescriptor<RoleDescriptorType, RoleType> Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The impementation type. | Improve this Doc View Source AddRoleDescriptorConverter<ImplementationType>(Func<IServiceProvider, ImplementationType>) Adds implementationFactory as IConvertRoleDescriptor<RoleDescriptorType, RoleType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddRoleDescriptorConverter<ImplementationType>(Func<IServiceProvider, ImplementationType> implementationFactory) where ImplementationType : class, IConvertRoleDescriptor<RoleDescriptorType, RoleType> Parameters Type Name Description Func < IServiceProvider , ImplementationType> implementationFactory The factory that creates ImplementationType . Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The implementation type. | Improve this Doc View Source AddUserConverter<ImplementationType>() Adds ImplementationType as IConvertUser<UserType, UserCreationType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddUserConverter<ImplementationType>() where ImplementationType : class, IConvertUser<UserType, UserCreationType> Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The impementation type. | Improve this Doc View Source AddUserConverter<ImplementationType>(Func<IServiceProvider, ImplementationType>) Adds implementationFactory as IConvertUser<UserType, UserCreationType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddUserConverter<ImplementationType>(Func<IServiceProvider, ImplementationType> implementationFactory) where ImplementationType : class, IConvertUser<UserType, UserCreationType> Parameters Type Name Description Func < IServiceProvider , ImplementationType> implementationFactory The factory that creates ImplementationType . Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The implementation type. | Improve this Doc View Source AddUserDescriptorConverter<ImplementationType>() Adds ImplementationType as IConvertUserDescriptor<UserDescriptorType, UserType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddUserDescriptorConverter<ImplementationType>() where ImplementationType : class, IConvertUserDescriptor<UserDescriptorType, UserType> Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The impementation type. | Improve this Doc View Source AddUserDescriptorConverter<ImplementationType>(Func<IServiceProvider, ImplementationType>) Adds implementationFactory as IConvertUserDescriptor<UserDescriptorType, UserType> to Services . Declaration public AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddUserDescriptorConverter<ImplementationType>(Func<IServiceProvider, ImplementationType> implementationFactory) where ImplementationType : class, IConvertUserDescriptor<UserDescriptorType, UserType> Parameters Type Name Description Func < IServiceProvider , ImplementationType> implementationFactory The factory that creates ImplementationType . Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description ImplementationType The implementation type. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountController-6.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountController-6.html",
    "title": "Class AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> | Documentations",
    "keywords": "Class AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> This base class represents the account controller. It's capability is to create users and roles. Inheritance System.Object AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers Assembly : Teronis.AspNetCore.Identity.dll Syntax public class AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> : Controller where UserDescriptorType : IUserDescriptor where UserType : IAccountUserEntity where RoleDescriptorType : IRoleDescriptor Type Parameters Name Description UserDescriptorType UserType UserCreationType RoleDescriptorType RoleType RoleCreationType Constructors | Improve this Doc View Source AccountController(IAccountManager<UserType, RoleType>, IConvertUserDescriptor<UserDescriptorType, UserType>, IConvertUser<UserType, UserCreationType>, IConvertRoleDescriptor<RoleDescriptorType, RoleType>, IConvertRole<RoleType, RoleCreationType>) Declaration public AccountController(IAccountManager<UserType, RoleType> accountManager, IConvertUserDescriptor<UserDescriptorType, UserType> userDescriptorUserConverter, IConvertUser<UserType, UserCreationType> userUserCreationConverter, IConvertRoleDescriptor<RoleDescriptorType, RoleType> roleDescriptorRoleConverter, IConvertRole<RoleType, RoleCreationType> roleRoleCreationConverter) Parameters Type Name Description IAccountManager <UserType, RoleType> accountManager IConvertUserDescriptor <UserDescriptorType, UserType> userDescriptorUserConverter IConvertUser <UserType, UserCreationType> userUserCreationConverter IConvertRoleDescriptor <RoleDescriptorType, RoleType> roleDescriptorRoleConverter IConvertRole <RoleType, RoleCreationType> roleRoleCreationConverter Methods | Improve this Doc View Source CreateRole(RoleDescriptorType) Declaration public Task<ActionResult<RoleCreationType>> CreateRole(RoleDescriptorType roleDescriptor) Parameters Type Name Description RoleDescriptorType roleDescriptor Returns Type Description Task < ActionResult <RoleCreationType>> | Improve this Doc View Source CreateUser(UserDescriptorType) Declaration public Task<ActionResult<UserCreationType>> CreateUser(UserDescriptorType userDescriptor) Parameters Type Name Description UserDescriptorType userDescriptor Returns Type Description Task < ActionResult <UserCreationType>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountControllerDefaults.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.AccountControllerDefaults.html",
    "title": "Class AccountControllerDefaults | Documentations",
    "keywords": "Class AccountControllerDefaults Inheritance System.Object AccountControllerDefaults Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class AccountControllerDefaults : object Fields | Improve this Doc View Source CanCreateRolePolicy Declaration public const string CanCreateRolePolicy = null Field Value Type Description System.String | Improve this Doc View Source CanCreateUserPolicy Declaration public const string CanCreateUserPolicy = null Field Value Type Description System.String"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.html",
    "title": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Classes RoleEntityExtensions RoleRoleCreationConverter UserEntityExtensions UserUserCreationConverter Interfaces IConvertRole<RoleType, RoleCreationType> Provides role entity conversion. IConvertUser<UserType, UserCreationType> Provides user entity conversion."
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.IConvertRole-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.IConvertRole-2.html",
    "title": "Interface IConvertRole<RoleType, RoleCreationType> | Documentations",
    "keywords": "Interface IConvertRole<RoleType, RoleCreationType> Provides role entity conversion. Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IConvertRole<RoleType, RoleCreationType> Type Parameters Name Description RoleType RoleCreationType Methods | Improve this Doc View Source Convert(RoleType) Converts role entity to role view. Declaration RoleCreationType Convert(RoleType source) Parameters Type Name Description RoleType source Returns Type Description RoleCreationType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.IConvertUser-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.IConvertUser-2.html",
    "title": "Interface IConvertUser<UserType, UserCreationType> | Documentations",
    "keywords": "Interface IConvertUser<UserType, UserCreationType> Provides user entity conversion. Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IConvertUser<UserType, UserCreationType> where UserType : IAccountUserEntity Type Parameters Name Description UserType UserCreationType Methods | Improve this Doc View Source Convert(UserType, String[]) Converts user entity to user view. Declaration UserCreationType Convert(UserType source, string[] roles) Parameters Type Name Description UserType source System.String [] roles Returns Type Description UserCreationType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.RoleEntityExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.RoleEntityExtensions.html",
    "title": "Class RoleEntityExtensions | Documentations",
    "keywords": "Class RoleEntityExtensions Inheritance System.Object RoleEntityExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class RoleEntityExtensions : object Methods | Improve this Doc View Source ToRoleCreation(RoleEntity) Creates role view from role entity. Declaration public static RoleCreationDatatransject ToRoleCreation(this RoleEntity roleEntity) Parameters Type Name Description RoleEntity roleEntity Returns Type Description RoleCreationDatatransject"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.RoleRoleCreationConverter.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.RoleRoleCreationConverter.html",
    "title": "Class RoleRoleCreationConverter | Documentations",
    "keywords": "Class RoleRoleCreationConverter Inheritance System.Object RoleRoleCreationConverter Implements IConvertRole < RoleEntity , RoleCreationDatatransject > Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleRoleCreationConverter : object, IConvertRole<RoleEntity, RoleCreationDatatransject> Methods | Improve this Doc View Source Convert(RoleEntity) Declaration public RoleCreationDatatransject Convert(RoleEntity source) Parameters Type Name Description RoleEntity source Returns Type Description RoleCreationDatatransject Implements IConvertRole<RoleType, RoleCreationType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.UserEntityExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.UserEntityExtensions.html",
    "title": "Class UserEntityExtensions | Documentations",
    "keywords": "Class UserEntityExtensions Inheritance System.Object UserEntityExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class UserEntityExtensions : object Methods | Improve this Doc View Source ToUserCreation(UserEntity, String[]) Declaration public static UserCreationDatatransject ToUserCreation(this UserEntity userEntity, string[] roles = null) Parameters Type Name Description UserEntity userEntity System.String [] roles Returns Type Description UserCreationDatatransject"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.UserUserCreationConverter.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters.UserUserCreationConverter.html",
    "title": "Class UserUserCreationConverter | Documentations",
    "keywords": "Class UserUserCreationConverter Inheritance System.Object UserUserCreationConverter Implements IConvertUser < UserEntity , UserCreationDatatransject > Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.Converters Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserUserCreationConverter : object, IConvertUser<UserEntity, UserCreationDatatransject> Methods | Improve this Doc View Source Convert(UserEntity, String[]) Declaration public UserCreationDatatransject Convert(UserEntity source, string[] roles) Parameters Type Name Description UserEntity source System.String [] roles Returns Type Description UserCreationDatatransject Implements IConvertUser<UserType, UserCreationType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.html",
    "title": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Classes RoleCreationDatatransject RoleDescriptorDatatransject RoleDescriptorDatatransjectExtensions RoleDescriptorRoleConverter UserCreationDatatransject UserDescriptorDatatransject UserDescriptorDatatransjectExtensions UserDescriptorUserConverter Interfaces IConvertRoleDescriptor<RoleDescriptorType, RoleType> IConvertUserDescriptor<UserDescriptorType, UserType> IRoleDescriptor IUserDescriptor"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IConvertRoleDescriptor-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IConvertRoleDescriptor-2.html",
    "title": "Interface IConvertRoleDescriptor<RoleDescriptorType, RoleType> | Documentations",
    "keywords": "Interface IConvertRoleDescriptor<RoleDescriptorType, RoleType> Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IConvertRoleDescriptor<RoleDescriptorType, RoleType> where RoleDescriptorType : IRoleDescriptor Type Parameters Name Description RoleDescriptorType RoleType Methods | Improve this Doc View Source Convert(RoleDescriptorType) Declaration RoleType Convert(RoleDescriptorType source) Parameters Type Name Description RoleDescriptorType source Returns Type Description RoleType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IConvertUserDescriptor-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IConvertUserDescriptor-2.html",
    "title": "Interface IConvertUserDescriptor<UserDescriptorType, UserType> | Documentations",
    "keywords": "Interface IConvertUserDescriptor<UserDescriptorType, UserType> Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IConvertUserDescriptor<UserDescriptorType, UserType> where UserDescriptorType : IUserDescriptor where UserType : IAccountUserEntity Type Parameters Name Description UserDescriptorType UserType Methods | Improve this Doc View Source Convert(UserDescriptorType) Declaration UserType Convert(UserDescriptorType source) Parameters Type Name Description UserDescriptorType source Returns Type Description UserType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IRoleDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IRoleDescriptor.html",
    "title": "Interface IRoleDescriptor | Documentations",
    "keywords": "Interface IRoleDescriptor Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IRoleDescriptor Properties | Improve this Doc View Source RoleName Declaration string RoleName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IUserDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.IUserDescriptor.html",
    "title": "Interface IUserDescriptor | Documentations",
    "keywords": "Interface IUserDescriptor Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IUserDescriptor Properties | Improve this Doc View Source Password Declaration string Password { get; } Property Value Type Description System.String | Improve this Doc View Source Roles Declaration string[] Roles { get; } Property Value Type Description System.String [] | Improve this Doc View Source UserName Declaration string UserName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleCreationDatatransject.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleCreationDatatransject.html",
    "title": "Class RoleCreationDatatransject | Documentations",
    "keywords": "Class RoleCreationDatatransject Inheritance System.Object RoleCreationDatatransject Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleCreationDatatransject : object Properties | Improve this Doc View Source RoleName Declaration public string RoleName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorDatatransject.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorDatatransject.html",
    "title": "Class RoleDescriptorDatatransject | Documentations",
    "keywords": "Class RoleDescriptorDatatransject Inheritance System.Object RoleDescriptorDatatransject Implements IRoleDescriptor Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleDescriptorDatatransject : object, IRoleDescriptor Properties | Improve this Doc View Source RoleName Declaration public string RoleName { get; set; } Property Value Type Description System.String Implements IRoleDescriptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) RoleDescriptorDatatransjectExtensions.ToRole(RoleDescriptorDatatransject)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorDatatransjectExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorDatatransjectExtensions.html",
    "title": "Class RoleDescriptorDatatransjectExtensions | Documentations",
    "keywords": "Class RoleDescriptorDatatransjectExtensions Inheritance System.Object RoleDescriptorDatatransjectExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class RoleDescriptorDatatransjectExtensions : object Methods | Improve this Doc View Source ToRole(RoleDescriptorDatatransject) Declaration public static RoleEntity ToRole(this RoleDescriptorDatatransject roleDescriptor) Parameters Type Name Description RoleDescriptorDatatransject roleDescriptor Returns Type Description RoleEntity"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorRoleConverter.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.RoleDescriptorRoleConverter.html",
    "title": "Class RoleDescriptorRoleConverter | Documentations",
    "keywords": "Class RoleDescriptorRoleConverter Inheritance System.Object RoleDescriptorRoleConverter Implements IConvertRoleDescriptor < RoleDescriptorDatatransject , RoleEntity > Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleDescriptorRoleConverter : object, IConvertRoleDescriptor<RoleDescriptorDatatransject, RoleEntity> Methods | Improve this Doc View Source Convert(RoleDescriptorDatatransject) Declaration public RoleEntity Convert(RoleDescriptorDatatransject source) Parameters Type Name Description RoleDescriptorDatatransject source Returns Type Description RoleEntity Implements IConvertRoleDescriptor<RoleDescriptorType, RoleType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserCreationDatatransject.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserCreationDatatransject.html",
    "title": "Class UserCreationDatatransject | Documentations",
    "keywords": "Class UserCreationDatatransject Inheritance System.Object UserCreationDatatransject Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserCreationDatatransject : object Properties | Improve this Doc View Source Email Declaration public string? Email { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PhoneNumber Declaration public string? PhoneNumber { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Roles Declaration public string[] Roles { get; } Property Value Type Description System.String [] | Improve this Doc View Source UserName Declaration public string? UserName { get; } Property Value Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorDatatransject.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorDatatransject.html",
    "title": "Class UserDescriptorDatatransject | Documentations",
    "keywords": "Class UserDescriptorDatatransject Inheritance System.Object UserDescriptorDatatransject Implements IUserDescriptor Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserDescriptorDatatransject : object, IUserDescriptor Properties | Improve this Doc View Source Email Declaration public string Email { get; set; } Property Value Type Description System.String | Improve this Doc View Source Password Declaration public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhoneNumber Declaration public string? PhoneNumber { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Roles Declaration public string[] Roles { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description System.String Implements IUserDescriptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) UserDescriptorDatatransjectExtensions.ToUser(UserDescriptorDatatransject)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorDatatransjectExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorDatatransjectExtensions.html",
    "title": "Class UserDescriptorDatatransjectExtensions | Documentations",
    "keywords": "Class UserDescriptorDatatransjectExtensions Inheritance System.Object UserDescriptorDatatransjectExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class UserDescriptorDatatransjectExtensions : object Methods | Improve this Doc View Source ToUser(UserDescriptorDatatransject) Declaration public static UserEntity ToUser(this UserDescriptorDatatransject userDescriptor) Parameters Type Name Description UserDescriptorDatatransject userDescriptor Returns Type Description UserEntity"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorUserConverter.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects.UserDescriptorUserConverter.html",
    "title": "Class UserDescriptorUserConverter | Documentations",
    "keywords": "Class UserDescriptorUserConverter Inheritance System.Object UserDescriptorUserConverter Implements IConvertUserDescriptor < UserDescriptorDatatransject , UserEntity > Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers.Datransjects Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserDescriptorUserConverter : object, IConvertUserDescriptor<UserDescriptorDatatransject, UserEntity> Methods | Improve this Doc View Source Convert(UserDescriptorDatatransject) Declaration public UserEntity Convert(UserDescriptorDatatransject source) Parameters Type Name Description UserDescriptorDatatransject source Returns Type Description UserEntity Implements IConvertUserDescriptor<UserDescriptorType, UserType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.html",
    "title": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.AccountManaging.Controllers Classes AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Configures the required dependencies for AccountManager<DbContextType, UserType, RoleType> and AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> . AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> This base class represents the account controller. It's capability is to create users and roles. AccountControllerDefaults IMvcBuilderExtensions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.IMvcBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.Controllers.IMvcBuilderExtensions.html",
    "title": "Class IMvcBuilderExtensions | Documentations",
    "keywords": "Class IMvcBuilderExtensions Inheritance System.Object IMvcBuilderExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging.Controllers Assembly : Teronis.AspNetCore.Identity.dll Syntax public static class IMvcBuilderExtensions : object Methods | Improve this Doc View Source AddAccountControllers(IMvcBuilder, Nullable<Action<ISelectedControllerModelConfiguration>>) Adds default user/role converters as singletons to the services. Registers the non-auto-discovered and default AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> to . Adds default route \"api/account\" by adding a ScopedRouteConvention to . You can override it by providing a ScopedRouteConvention yourself and enable forced default route. Declaration public static IMvcBuilder AddAccountControllers(this IMvcBuilder mvcBuilder, Action<ISelectedControllerModelConfiguration>? configureControllerModel = null) Parameters Type Name Description IMvcBuilder mvcBuilder System.Nullable < Action < ISelectedControllerModelConfiguration >> configureControllerModel Returns Type Description IMvcBuilder | Improve this Doc View Source AddAccountControllers<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType>(IMvcBuilder, Nullable<Action<ISelectedControllerModelConfiguration>>) Registers the non-auto-discovered AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> to . Adds default route \"api/account\" by adding a ScopedRouteConvention to . You can override it by providing a ScopedRouteConvention yourself and enable forced default route. Declaration public static AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddAccountControllers<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType>(this IMvcBuilder mvcBuilder, Action<ISelectedControllerModelConfiguration>? configureControllerModel = null) where UserDescriptorType : IUserDescriptor where UserType : IAccountUserEntity where RoleDescriptorType : IRoleDescriptor Parameters Type Name Description IMvcBuilder mvcBuilder The MVC builder. System.Nullable < Action < ISelectedControllerModelConfiguration >> configureControllerModel Configures controller. Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description UserDescriptorType Type of user descriptor. UserType Type of user entity. UserCreationType Type of user view. RoleDescriptorType Type of role descriptor. RoleType Type of role entity. RoleCreationType Type of role view. | Improve this Doc View Source AddAccountControllersWithConverters<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType>(IMvcBuilder, IConvertUserDescriptor<UserDescriptorType, UserType>, IConvertUser<UserType, UserCreationType>, IConvertRoleDescriptor<RoleDescriptorType, RoleType>, IConvertRole<RoleType, RoleCreationType>, Nullable<Action<ISelectedControllerModelConfiguration>>) Adds the user/role converters as singletons to the services. Registers the non-auto-discovered AccountController<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> to . Adds default route \"api/account\" by adding a ScopedRouteConvention to . You can override it by providing a ScopedRouteConvention yourself and enable forced default route. Declaration public static AccountConfigurator<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> AddAccountControllersWithConverters<UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType>(this IMvcBuilder mvcBuilder, IConvertUserDescriptor<UserDescriptorType, UserType> userDescriptorUserConverter, IConvertUser<UserType, UserCreationType> userUserCreationConverter, IConvertRoleDescriptor<RoleDescriptorType, RoleType> roleDescriptorRoleConverter, IConvertRole<RoleType, RoleCreationType> roleRoleCreationConverter, Action<ISelectedControllerModelConfiguration>? configureControllerModel = null) where UserDescriptorType : IUserDescriptor where UserType : IAccountUserEntity where RoleDescriptorType : IRoleDescriptor Parameters Type Name Description IMvcBuilder mvcBuilder IConvertUserDescriptor <UserDescriptorType, UserType> userDescriptorUserConverter IConvertUser <UserType, UserCreationType> userUserCreationConverter IConvertRoleDescriptor <RoleDescriptorType, RoleType> roleDescriptorRoleConverter IConvertRole <RoleType, RoleCreationType> roleRoleCreationConverter System.Nullable < Action < ISelectedControllerModelConfiguration >> configureControllerModel Returns Type Description AccountConfigurator <UserDescriptorType, UserType, UserCreationType, RoleDescriptorType, RoleType, RoleCreationType> Type Parameters Name Description UserDescriptorType Type of user descriptor. UserType Type of user entity. UserCreationType Type of user view. RoleDescriptorType Type of role descriptor. RoleType Type of role entity. RoleCreationType Type of role view."
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.html",
    "title": "Namespace Teronis.AspNetCore.Identity.AccountManaging | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.AccountManaging Classes AccountManager<DbContextType> AccountManager<DbContextType, UserType, RoleType> IAccountManagerExtensions IdentityBuilderExtensions RoleAlreadyCreatedException UserAlreadyCreatedException Interfaces IAccountManager<UserType, RoleType>"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IAccountManager-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IAccountManager-2.html",
    "title": "Interface IAccountManager<UserType, RoleType> | Documentations",
    "keywords": "Interface IAccountManager<UserType, RoleType> Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IAccountManager<UserType, RoleType> Type Parameters Name Description UserType RoleType Methods | Improve this Doc View Source CreateRoleAsync(RoleType) Declaration Task<RoleType> CreateRoleAsync(RoleType roleEntity) Parameters Type Name Description RoleType roleEntity Returns Type Description Task <RoleType> | Improve this Doc View Source CreateUserAsync(UserType, String, String[]) Declaration Task<UserType> CreateUserAsync(UserType userEntity, string password, params string[] roles) Parameters Type Name Description UserType userEntity System.String password System.String [] roles Returns Type Description Task <UserType> | Improve this Doc View Source GetRoleByNameAsync(String) Declaration Task<RoleType> GetRoleByNameAsync(string roleName) Parameters Type Name Description System.String roleName Returns Type Description Task <RoleType> | Improve this Doc View Source GetUserByNameAsync(String) Declaration Task<UserType> GetUserByNameAsync(string userName) Parameters Type Name Description System.String userName Returns Type Description Task <UserType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IAccountManagerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IAccountManagerExtensions.html",
    "title": "Class IAccountManagerExtensions | Documentations",
    "keywords": "Class IAccountManagerExtensions Inheritance System.Object IAccountManagerExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public static class IAccountManagerExtensions : object Methods | Improve this Doc View Source CreateRoleIfNotExistsAsync<RoleType, UserType>(IAccountManager<UserType, RoleType>, RoleType) Declaration public static Task<RoleType> CreateRoleIfNotExistsAsync<RoleType, UserType>(this IAccountManager<UserType, RoleType> accountManager, RoleType roleEntity) where RoleType : IAccountRoleEntity Parameters Type Name Description IAccountManager <UserType, RoleType> accountManager RoleType roleEntity Returns Type Description Task <RoleType> Type Parameters Name Description RoleType UserType | Improve this Doc View Source CreateUserIfNotExistsAsync<RoleType, UserType>(IAccountManager<UserType, RoleType>, UserType, String, String[]) Declaration public static Task<UserType> CreateUserIfNotExistsAsync<RoleType, UserType>(this IAccountManager<UserType, RoleType> accountManager, UserType userEntity, string password, params string[] roles) where UserType : IAccountUserEntity Parameters Type Name Description IAccountManager <UserType, RoleType> accountManager UserType userEntity System.String password System.String [] roles Returns Type Description Task <UserType> Type Parameters Name Description RoleType UserType"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IdentityBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.IdentityBuilderExtensions.html",
    "title": "Class IdentityBuilderExtensions | Documentations",
    "keywords": "Class IdentityBuilderExtensions Inheritance System.Object IdentityBuilderExtensions Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.dll Syntax public static class IdentityBuilderExtensions : object Methods | Improve this Doc View Source AddAccountManager<DbContextType>(IdentityBuilder) Declaration public static IdentityBuilder AddAccountManager<DbContextType>(this IdentityBuilder identityBuilder) where DbContextType : DbContext Parameters Type Name Description IdentityBuilder identityBuilder Returns Type Description IdentityBuilder Type Parameters Name Description DbContextType | Improve this Doc View Source AddAccountManager<DbContextType, UserType, RoleType>(IdentityBuilder) Declaration public static IdentityBuilder AddAccountManager<DbContextType, UserType, RoleType>(this IdentityBuilder identityBuilder) where DbContextType : DbContext where UserType : class, IAccountUserEntity where RoleType : class, IAccountRoleEntity Parameters Type Name Description IdentityBuilder identityBuilder Returns Type Description IdentityBuilder Type Parameters Name Description DbContextType UserType RoleType"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.RoleAlreadyCreatedException.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.RoleAlreadyCreatedException.html",
    "title": "Class RoleAlreadyCreatedException | Documentations",
    "keywords": "Class RoleAlreadyCreatedException Inheritance System.Object RoleAlreadyCreatedException Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleAlreadyCreatedException : ArgumentException Constructors | Improve this Doc View Source RoleAlreadyCreatedException(SerializationInfo, StreamingContext) Declaration protected RoleAlreadyCreatedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source RoleAlreadyCreatedException(Nullable<String>) Declaration public RoleAlreadyCreatedException(string? roleName) Parameters Type Name Description System.Nullable < System.String > roleName | Improve this Doc View Source RoleAlreadyCreatedException(Nullable<String>, Nullable<String>) Declaration public RoleAlreadyCreatedException(string? roleName, string? message) Parameters Type Name Description System.Nullable < System.String > roleName System.Nullable < System.String > message | Improve this Doc View Source RoleAlreadyCreatedException(Nullable<String>, Nullable<String>, Nullable<Exception>) Declaration public RoleAlreadyCreatedException(string? roleName, string? message, Exception? innerException) Parameters Type Name Description System.Nullable < System.String > roleName System.Nullable < System.String > message System.Nullable < Exception > innerException Properties | Improve this Doc View Source RoleName Declaration public string? RoleName { get; } Property Value Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.UserAlreadyCreatedException.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.AccountManaging.UserAlreadyCreatedException.html",
    "title": "Class UserAlreadyCreatedException | Documentations",
    "keywords": "Class UserAlreadyCreatedException Inheritance System.Object UserAlreadyCreatedException Namespace : Teronis.AspNetCore.Identity.AccountManaging Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserAlreadyCreatedException : ArgumentException Constructors | Improve this Doc View Source UserAlreadyCreatedException(SerializationInfo, StreamingContext) Declaration protected UserAlreadyCreatedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source UserAlreadyCreatedException(Nullable<String>) Declaration public UserAlreadyCreatedException(string? userName) Parameters Type Name Description System.Nullable < System.String > userName | Improve this Doc View Source UserAlreadyCreatedException(Nullable<String>, Nullable<String>) Declaration public UserAlreadyCreatedException(string? userName, string? message) Parameters Type Name Description System.Nullable < System.String > userName System.Nullable < System.String > message | Improve this Doc View Source UserAlreadyCreatedException(Nullable<String>, Nullable<String>, Nullable<Exception>) Declaration public UserAlreadyCreatedException(string? userName, string? message, Exception? innerException) Parameters Type Name Description System.Nullable < System.String > userName System.Nullable < System.String > message System.Nullable < Exception > innerException Properties | Improve this Doc View Source UserName Declaration public string? UserName { get; } Property Value Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.BasicAuthenticationEventsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.BasicAuthenticationEventsExtensions.html",
    "title": "Class BasicAuthenticationEventsExtensions | Documentations",
    "keywords": "Class BasicAuthenticationEventsExtensions Inheritance System.Object BasicAuthenticationEventsExtensions Namespace : Teronis.AspNetCore.Identity.Authentication.Extensions Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class BasicAuthenticationEventsExtensions : object Methods | Improve this Doc View Source UseAuthenticateWhenValidatePrincipal<UserType>(BasicAuthenticationEvents) The property will be overridden. Declaration public static BasicAuthenticationEvents UseAuthenticateWhenValidatePrincipal<UserType>(this BasicAuthenticationEvents events) where UserType : class, IBearerUserEntity Parameters Type Name Description BasicAuthenticationEvents events Returns Type Description BasicAuthenticationEvents Type Parameters Name Description UserType"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Authentication.Extensions | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Authentication.Extensions Classes BasicAuthenticationEventsExtensions JwtBearerEventsExtensions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.JwtBearerEventsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Extensions.JwtBearerEventsExtensions.html",
    "title": "Class JwtBearerEventsExtensions | Documentations",
    "keywords": "Class JwtBearerEventsExtensions Inheritance System.Object JwtBearerEventsExtensions Namespace : Teronis.AspNetCore.Identity.Authentication.Extensions Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class JwtBearerEventsExtensions : object Methods | Improve this Doc View Source WhenMessageReceived(JwtBearerEvents, Func<MessageReceivedContext, Task>[]) Declaration public static JwtBearerEvents WhenMessageReceived(this JwtBearerEvents events, params Func<MessageReceivedContext, Task>[] messageReceivedContextHandler) Parameters Type Name Description JwtBearerEvents events Func < MessageReceivedContext , Task >[] messageReceivedContextHandler Returns Type Description JwtBearerEvents | Improve this Doc View Source WhenTokenValidated(JwtBearerEvents, Func<TokenValidatedContext, Task>[]) Declaration public static JwtBearerEvents WhenTokenValidated(this JwtBearerEvents events, params Func<TokenValidatedContext, Task>[] tokenValidatedContextHandler) Parameters Type Name Description JwtBearerEvents events Func < TokenValidatedContext , Task >[] tokenValidatedContextHandler Returns Type Description JwtBearerEvents"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.BasicAuthenticationEventsUtils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.BasicAuthenticationEventsUtils.html",
    "title": "Class BasicAuthenticationEventsUtils | Documentations",
    "keywords": "Class BasicAuthenticationEventsUtils Inheritance System.Object BasicAuthenticationEventsUtils Namespace : Teronis.AspNetCore.Identity.Authentication.Utils Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class BasicAuthenticationEventsUtils : object Methods | Improve this Doc View Source ValidatePrincipal<UserType>(ValidatePrincipalContext) Declaration public static Task ValidatePrincipal<UserType>(ValidatePrincipalContext context) where UserType : class, IBearerUserEntity Parameters Type Name Description ValidatePrincipalContext context Returns Type Description Task Type Parameters Name Description UserType"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Authentication.Utils | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Authentication.Utils Classes BasicAuthenticationEventsUtils TokenValidatedContextUtils"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.TokenValidatedContextUtils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Authentication.Utils.TokenValidatedContextUtils.html",
    "title": "Class TokenValidatedContextUtils | Documentations",
    "keywords": "Class TokenValidatedContextUtils Inheritance System.Object TokenValidatedContextUtils Namespace : Teronis.AspNetCore.Identity.Authentication.Utils Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class TokenValidatedContextUtils : object Methods | Improve this Doc View Source ValidateRefreshTokenIdClaim<BearerTokenType>(TokenValidatedContext) Validates whether BearerSignInManagerRefreshTokenIdClaimType does exist and if so, it does add an user related identity to the claims principal of tokenValidatedContext . Declaration public static Task ValidateRefreshTokenIdClaim<BearerTokenType>(TokenValidatedContext tokenValidatedContext) where BearerTokenType : class, IBearerTokenEntity Parameters Type Name Description TokenValidatedContext tokenValidatedContext Returns Type Description Task Type Parameters Name Description BearerTokenType | Improve this Doc View Source ValidateSecurityStamp(TokenValidatedContext) The user may be authenticated but the security stamp could have been changed and therefore not be authenticated anymore. In the claims principal of context we rely on and . Therefore it should be in need of, that ValidateRefreshTokenIdClaim<BearerTokenType>(TokenValidatedContext) is called first. Declaration public static Task ValidateSecurityStamp(TokenValidatedContext context) Parameters Type Name Description TokenValidatedContext context Returns Type Description Task"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.AuthenticationBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.AuthenticationBuilderExtensions.html",
    "title": "Class AuthenticationBuilderExtensions | Documentations",
    "keywords": "Class AuthenticationBuilderExtensions Inheritance System.Object AuthenticationBuilderExtensions Namespace : Teronis.AspNetCore.Identity.Bearer.Authentication Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class AuthenticationBuilderExtensions : object Methods | Improve this Doc View Source AddIdentityBasic<UserType>(AuthenticationBuilder, Nullable<Action<BasicAuthenticationOptions>>) Uses IdentityBasicScheme as scheme. Declaration public static AuthenticationBuilder AddIdentityBasic<UserType>(this AuthenticationBuilder authenticationBuilder, Action<BasicAuthenticationOptions>? configureOptions = null) where UserType : class, IBearerUserEntity Parameters Type Name Description AuthenticationBuilder authenticationBuilder System.Nullable < Action < BasicAuthenticationOptions >> configureOptions Returns Type Description AuthenticationBuilder Type Parameters Name Description UserType | Improve this Doc View Source AddIdentityBasic<UserType>(AuthenticationBuilder, String, Nullable<Action<BasicAuthenticationOptions>>) Uses IdentityBasicScheme as scheme. Declaration public static AuthenticationBuilder AddIdentityBasic<UserType>(this AuthenticationBuilder authenticationBuilder, string authenticationScheme, Action<BasicAuthenticationOptions>? configureOptions) where UserType : class, IBearerUserEntity Parameters Type Name Description AuthenticationBuilder authenticationBuilder System.String authenticationScheme System.Nullable < Action < BasicAuthenticationOptions >> configureOptions Returns Type Description AuthenticationBuilder Type Parameters Name Description UserType | Improve this Doc View Source AddIdentityJwtRefreshToken(AuthenticationBuilder, String, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddIdentityJwtRefreshToken(this AuthenticationBuilder authenticationBuilder, string authenticationScheme, JwtBearerAuthenticationOptions options) Parameters Type Name Description AuthenticationBuilder authenticationBuilder System.String authenticationScheme JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddIdentityJwtRefreshToken(AuthenticationBuilder, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddIdentityJwtRefreshToken(this AuthenticationBuilder authenticationBuilder, JwtBearerAuthenticationOptions options) Parameters Type Name Description AuthenticationBuilder authenticationBuilder JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddIdentityJwtRefreshToken<BearerTokenType>(AuthenticationBuilder, String, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddIdentityJwtRefreshToken<BearerTokenType>(this AuthenticationBuilder authenticationBuilder, string authenticationScheme, JwtBearerAuthenticationOptions options) where BearerTokenType : class, IBearerTokenEntity Parameters Type Name Description AuthenticationBuilder authenticationBuilder System.String authenticationScheme JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder Type Parameters Name Description BearerTokenType | Improve this Doc View Source AddIdentityJwtRefreshToken<BearerTokenType>(AuthenticationBuilder, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddIdentityJwtRefreshToken<BearerTokenType>(this AuthenticationBuilder authenticationBuilder, JwtBearerAuthenticationOptions options) where BearerTokenType : class, IBearerTokenEntity Parameters Type Name Description AuthenticationBuilder authenticationBuilder JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder Type Parameters Name Description BearerTokenType | Improve this Doc View Source AddJwtAccessToken(AuthenticationBuilder, String, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddJwtAccessToken(this AuthenticationBuilder authenticationBuilder, string authenticationScheme, JwtBearerAuthenticationOptions options) Parameters Type Name Description AuthenticationBuilder authenticationBuilder System.String authenticationScheme JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder | Improve this Doc View Source AddJwtAccessToken(AuthenticationBuilder, JwtBearerAuthenticationOptions) Declaration public static AuthenticationBuilder AddJwtAccessToken(this AuthenticationBuilder authenticationBuilder, JwtBearerAuthenticationOptions options) Parameters Type Name Description AuthenticationBuilder authenticationBuilder JwtBearerAuthenticationOptions options Returns Type Description AuthenticationBuilder"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.AuthenticationDefaults.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.AuthenticationDefaults.html",
    "title": "Class AuthenticationDefaults | Documentations",
    "keywords": "Class AuthenticationDefaults Inheritance System.Object AuthenticationDefaults Namespace : Teronis.AspNetCore.Identity.Bearer.Authentication Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public static class AuthenticationDefaults : object Fields | Improve this Doc View Source AccessTokenBearerScheme Declaration public const string AccessTokenBearerScheme = null Field Value Type Description System.String | Improve this Doc View Source IdentityBasicScheme Declaration public const string IdentityBasicScheme = null Field Value Type Description System.String | Improve this Doc View Source IdentityRefreshTokenBearerScheme Declaration public const string IdentityRefreshTokenBearerScheme = null Field Value Type Description System.String"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer.Authentication | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer.Authentication Classes AuthenticationBuilderExtensions AuthenticationDefaults JwtBearerAuthenticationOptions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.JwtBearerAuthenticationOptions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Authentication.JwtBearerAuthenticationOptions.html",
    "title": "Class JwtBearerAuthenticationOptions | Documentations",
    "keywords": "Class JwtBearerAuthenticationOptions Inheritance System.Object JwtBearerAuthenticationOptions Namespace : Teronis.AspNetCore.Identity.Bearer.Authentication Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class JwtBearerAuthenticationOptions : object Constructors | Improve this Doc View Source JwtBearerAuthenticationOptions(SecurityKey) Declaration public JwtBearerAuthenticationOptions(SecurityKey tokenSigningKey) Parameters Type Name Description SecurityKey tokenSigningKey Properties | Improve this Doc View Source IncludeErrorDetails Declaration public bool IncludeErrorDetails { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TokenSigningKey Declaration public SecurityKey TokenSigningKey { get; } Property Value Type Description SecurityKey Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerIdentityDbContext.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerIdentityDbContext.html",
    "title": "Class BearerIdentityDbContext | Documentations",
    "keywords": "Class BearerIdentityDbContext Inheritance System.Object BearerIdentityDbContext < UserEntity , RoleEntity > BearerIdentityDbContext Inherited Members BearerIdentityDbContext<UserEntity, RoleEntity>.RefreshTokens BearerIdentityDbContext<UserEntity, RoleEntity>.OnModelCreating(ModelBuilder) Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerIdentityDbContext : BearerIdentityDbContext<UserEntity, RoleEntity> Constructors | Improve this Doc View Source BearerIdentityDbContext() Declaration public BearerIdentityDbContext() | Improve this Doc View Source BearerIdentityDbContext(DbContextOptions) Declaration public BearerIdentityDbContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerIdentityDbContext-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerIdentityDbContext-2.html",
    "title": "Class BearerIdentityDbContext<UserType, RoleType> | Documentations",
    "keywords": "Class BearerIdentityDbContext<UserType, RoleType> Inheritance System.Object BearerIdentityDbContext<UserType, RoleType> BearerIdentityDbContext Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerIdentityDbContext<UserType, RoleType> : IdentityDbContext<UserType, RoleType, string> where UserType : IdentityUser<string> where RoleType : IdentityRole<string> Type Parameters Name Description UserType RoleType Constructors | Improve this Doc View Source BearerIdentityDbContext() Declaration public BearerIdentityDbContext() | Improve this Doc View Source BearerIdentityDbContext(DbContextOptions) Declaration public BearerIdentityDbContext(DbContextOptions options) Parameters Type Name Description DbContextOptions options Properties | Improve this Doc View Source RefreshTokens Declaration public DbSet<BearerTokenEntity> RefreshTokens { get; set; } Property Value Type Description DbSet < BearerTokenEntity > Methods | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder builder) Parameters Type Name Description ModelBuilder builder Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManager-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManager-2.html",
    "title": "Class BearerSignInManager<UserType, BearerTokenType> | Documentations",
    "keywords": "Class BearerSignInManager<UserType, BearerTokenType> Inheritance System.Object BearerSignInManager<UserType, BearerTokenType> BearerSignInManager Implements IBearerSignInManager Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public abstract class BearerSignInManager<UserType, BearerTokenType> : object, IBearerSignInManager where UserType : class, IBearerUserEntity where BearerTokenType : class, IBearerTokenEntity Type Parameters Name Description UserType BearerTokenType Constructors | Improve this Doc View Source BearerSignInManager(IOptions<BearerSignInManagerOptions>, UserManager<UserType>, IOptions<IdentityOptions>, IBearerTokenStore<BearerTokenType>, Nullable<ILogger<BearerSignInManager<UserType, BearerTokenType>>>) Declaration public BearerSignInManager(IOptions<BearerSignInManagerOptions> options, UserManager<UserType> userManager, IOptions<IdentityOptions> identityOptions, IBearerTokenStore<BearerTokenType> bearerTokenStore, ILogger<BearerSignInManager<UserType, BearerTokenType>>? logger = null) Parameters Type Name Description IOptions < BearerSignInManagerOptions > options UserManager <UserType> userManager IOptions < IdentityOptions > identityOptions IBearerTokenStore <BearerTokenType> bearerTokenStore System.Nullable < ILogger < BearerSignInManager <UserType, BearerTokenType>>> logger Methods | Improve this Doc View Source CreateNextTokensAsync(ClaimsPrincipal) Declaration public Task<SignInTokens> CreateNextTokensAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Task < SignInTokens > | Improve this Doc View Source CreateRefreshToken(String, DateTime, DateTime) Declaration protected abstract BearerTokenType CreateRefreshToken(string userId, DateTime issuedAtUtc, DateTime expiresAtUtc) Parameters Type Name Description System.String userId DateTime issuedAtUtc DateTime expiresAtUtc Returns Type Description BearerTokenType | Improve this Doc View Source CreateTokensAsync(ClaimsPrincipal) Declaration public Task<SignInTokens> CreateTokensAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Task < SignInTokens > | Improve this Doc View Source DeleteUserRefreshTokenAsync(ClaimsPrincipal) Deletes the refresh token associated by . Declaration protected Task DeleteUserRefreshTokenAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Task | Improve this Doc View Source GenerateAccessTokenAsync(UserType) The access token does contain user user id, user name and user roles. Declaration protected virtual Task<string> GenerateAccessTokenAsync(UserType user) Parameters Type Name Description UserType user Returns Type Description Task < System.String > | Improve this Doc View Source GenerateAndStoreRefreshTokenEntityAsync(UserType) The refresh token does contain user security stamp and refresh token id. Declaration protected virtual Task<(BearerTokenType RefreshTokenEntity, string RefreshToken)> GenerateAndStoreRefreshTokenEntityAsync(UserType user) Parameters Type Name Description UserType user Returns Type Description Task < System.ValueTuple <BearerTokenType, System.String >> | Improve this Doc View Source GenerateAndStoreSignInTokensAsync(UserType) Declaration protected virtual Task<(string AccessToken, BearerTokenType RefreshTokenEntity, string RefreshToken)> GenerateAndStoreSignInTokensAsync(UserType user) Parameters Type Name Description UserType user Returns Type Description Task < System.ValueTuple < System.String , BearerTokenType, System.String >> | Improve this Doc View Source GetUserAsync(ClaimsPrincipal) Gets user. Declaration protected Task<UserType> GetUserAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Task <UserType> | Improve this Doc View Source InvalidateRefreshTokenAsync(ClaimsPrincipal) Declaration public Task InvalidateRefreshTokenAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Task | Improve this Doc View Source StoreRefreshTokenEntityAsync(BearerTokenType) Declaration protected Task StoreRefreshTokenEntityAsync(BearerTokenType refreshToken) Parameters Type Name Description BearerTokenType refreshToken Returns Type Description Task | Improve this Doc View Source TryDeleteExpiredRefreshTokensAsync() Deletes expired refresh tokens. Declaration protected virtual Task<bool> TryDeleteExpiredRefreshTokensAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source ValidatePrincipalRefreshToken(ClaimsPrincipal) Validates whether the refresh token is valid. Declaration public void ValidatePrincipalRefreshToken(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Implements IBearerSignInManager Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerDefaults.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerDefaults.html",
    "title": "Class BearerSignInManagerDefaults | Documentations",
    "keywords": "Class BearerSignInManagerDefaults Inheritance System.Object BearerSignInManagerDefaults Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class BearerSignInManagerDefaults : object Fields | Improve this Doc View Source BearerSignInManagerRefreshTokenIdClaimType Used to find bearer refresh token in claims of identity. Declaration public const string BearerSignInManagerRefreshTokenIdClaimType = null Field Value Type Description System.String"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerOptions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerOptions.html",
    "title": "Class BearerSignInManagerOptions | Documentations",
    "keywords": "Class BearerSignInManagerOptions Inheritance System.Object BearerSignInManagerOptions Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerSignInManagerOptions : object Properties | Improve this Doc View Source CreateAccessTokenDescriptor Declaration public Func<BearerTokenDescriptor> CreateAccessTokenDescriptor { get; set; } Property Value Type Description Func < BearerTokenDescriptor > | Improve this Doc View Source CreateDefaultedTokenDescriptor Non-null values (if they have been set) are applied to those values of the other token descriptors who are null. Declaration public Func<BearerTokenDescriptor> CreateDefaultedTokenDescriptor { get; set; } Property Value Type Description Func < BearerTokenDescriptor > | Improve this Doc View Source CreateRefreshTokenDescriptor Declaration public Func<BearerTokenDescriptor> CreateRefreshTokenDescriptor { get; set; } Property Value Type Description Func < BearerTokenDescriptor > | Improve this Doc View Source IncludeErrorDetails Declaration public bool IncludeErrorDetails { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SetDefaultTimesOnTokenCreation Declaration public bool SetDefaultTimesOnTokenCreation { get; set; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerUtils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.BearerSignInManagerUtils.html",
    "title": "Class BearerSignInManagerUtils | Documentations",
    "keywords": "Class BearerSignInManagerUtils Inheritance System.Object BearerSignInManagerUtils Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class BearerSignInManagerUtils : object Methods | Improve this Doc View Source FindRefreshTokenAsync<BearerTokenType>(IBearerTokenStore<BearerTokenType>, ClaimsPrincipal) It tries to resolve refresh token id from claim BearerSignInManagerRefreshTokenIdClaimType and then look in the database. If a refresh token has been found, it will be returned. Declaration public static Task<BearerTokenType> FindRefreshTokenAsync<BearerTokenType>(IBearerTokenStore<BearerTokenType> refreshTokenStore, ClaimsPrincipal principal) where BearerTokenType : class, IBearerTokenEntity Parameters Type Name Description IBearerTokenStore <BearerTokenType> refreshTokenStore ClaimsPrincipal principal Returns Type Description Task <BearerTokenType> Type Parameters Name Description BearerTokenType | Improve this Doc View Source FindRefreshTokenId(ClaimsPrincipal) It looks for claim BearerSignInManagerRefreshTokenIdClaimType . Declaration public static Guid FindRefreshTokenId(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal Returns Type Description Guid | Improve this Doc View Source GenerateJwtToken(SecurityTokenDescriptor, Boolean) Generates a service concrete JWT-token from token descriptor. Declaration public static string GenerateJwtToken(SecurityTokenDescriptor tokenDescriptor, bool setDefaultTimesOnTokenCreation) Parameters Type Name Description SecurityTokenDescriptor tokenDescriptor System.Boolean setDefaultTimesOnTokenCreation Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer Classes BearerIdentityDbContext BearerIdentityDbContext<UserType, RoleType> BearerSignInManager<UserType, BearerTokenType> BearerSignInManagerDefaults BearerSignInManagerOptions BearerSignInManagerUtils IdentityBuilderExtensions SignInTokens Interfaces IBearerSignInManager"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.IBearerSignInManager.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.IBearerSignInManager.html",
    "title": "Interface IBearerSignInManager | Documentations",
    "keywords": "Interface IBearerSignInManager Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public interface IBearerSignInManager Methods | Improve this Doc View Source CreateNextTokensAsync(ClaimsPrincipal) Creates sign-in tokens: 1. Search for user by claim 2. Find stored refresh token and delete it 2. Create tokens and store new refresh token 3. Return tokens Declaration Task<SignInTokens> CreateNextTokensAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The principal represents the authenticated user. It must be guranteed that the claim exists. The claim when existing is a logout mechanism. If you use refresh token after you changed the security stamp of the user the token is invalid. Returns Type Description Task < SignInTokens > The sign-in tokens: the refresh and the access token | Improve this Doc View Source CreateTokensAsync(ClaimsPrincipal) Creates sign-in tokens: 1. Search for user by claim 2. Create tokens and store refresh token 3. Return tokens Declaration Task<SignInTokens> CreateTokensAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The principal represents the authenticated user. It must be guranteed that the claim exists. The claim when existing is a logout mechanism. If you use refresh token after you changed the security stamp of the user the token is invalid. Returns Type Description Task < SignInTokens > The sign-in tokens: the refresh and the access token Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.IdentityBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.IdentityBuilderExtensions.html",
    "title": "Class IdentityBuilderExtensions | Documentations",
    "keywords": "Class IdentityBuilderExtensions Inheritance System.Object IdentityBuilderExtensions Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class IdentityBuilderExtensions : object Methods | Improve this Doc View Source AddBearerTokenStore<DbContextType>(IdentityBuilder) Declaration public static IdentityBuilder AddBearerTokenStore<DbContextType>(this IdentityBuilder identityBuilder) where DbContextType : DbContext Parameters Type Name Description IdentityBuilder identityBuilder Returns Type Description IdentityBuilder Type Parameters Name Description DbContextType | Improve this Doc View Source AddBearerTokenStore<UserType, BearerTokenType, DbContextType>(IdentityBuilder) Declaration public static IdentityBuilder AddBearerTokenStore<UserType, BearerTokenType, DbContextType>(this IdentityBuilder identityBuilder) where UserType : class, IBearerUserEntity where BearerTokenType : class, IBearerTokenEntity where DbContextType : DbContext Parameters Type Name Description IdentityBuilder identityBuilder Returns Type Description IdentityBuilder Type Parameters Name Description UserType BearerTokenType DbContextType"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.BearerSignInManager.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.BearerSignInManager.html",
    "title": "Class BearerSignInManager | Documentations",
    "keywords": "Class BearerSignInManager Inheritance System.Object BearerSignInManager < UserEntity , BearerTokenEntity > BearerSignInManager Implements IBearerSignInManager Inherited Members BearerSignInManager<UserEntity, BearerTokenEntity>.CreateRefreshToken(String, DateTime, DateTime) BearerSignInManager<UserEntity, BearerTokenEntity>.GetUserAsync(ClaimsPrincipal) BearerSignInManager<UserEntity, BearerTokenEntity>.TryDeleteExpiredRefreshTokensAsync() BearerSignInManager<UserEntity, BearerTokenEntity>.DeleteUserRefreshTokenAsync(ClaimsPrincipal) BearerSignInManager<UserEntity, BearerTokenEntity>.GenerateAccessTokenAsync(UserEntity) BearerSignInManager<UserEntity, BearerTokenEntity>.StoreRefreshTokenEntityAsync(BearerTokenEntity) BearerSignInManager<UserEntity, BearerTokenEntity>.GenerateAndStoreRefreshTokenEntityAsync(UserEntity) BearerSignInManager<UserEntity, BearerTokenEntity>.GenerateAndStoreSignInTokensAsync(UserEntity) BearerSignInManager<UserEntity, BearerTokenEntity>.CreateTokensAsync(ClaimsPrincipal) BearerSignInManager<UserEntity, BearerTokenEntity>.ValidatePrincipalRefreshToken(ClaimsPrincipal) BearerSignInManager<UserEntity, BearerTokenEntity>.CreateNextTokensAsync(ClaimsPrincipal) BearerSignInManager<UserEntity, BearerTokenEntity>.InvalidateRefreshTokenAsync(ClaimsPrincipal) Namespace : Teronis.AspNetCore.Identity.Bearer.SignInManaging Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerSignInManager : BearerSignInManager<UserEntity, BearerTokenEntity>, IBearerSignInManager Constructors | Improve this Doc View Source BearerSignInManager(IOptions<BearerSignInManagerOptions>, UserManager<UserEntity>, IOptions<IdentityOptions>, IBearerTokenStore, Nullable<ILogger<BearerSignInManager>>) Declaration public BearerSignInManager(IOptions<BearerSignInManagerOptions> options, UserManager<UserEntity> userManager, IOptions<IdentityOptions> identityOptions, IBearerTokenStore bearerTokenStore, ILogger<BearerSignInManager>? logger = null) Parameters Type Name Description IOptions < BearerSignInManagerOptions > options UserManager < UserEntity > userManager IOptions < IdentityOptions > identityOptions IBearerTokenStore bearerTokenStore System.Nullable < ILogger < BearerSignInManager >> logger Methods | Improve this Doc View Source CreateRefreshToken(String, DateTime, DateTime) Declaration protected override BearerTokenEntity CreateRefreshToken(string userId, DateTime issuedAtUtc, DateTime expiresAtUtc) Parameters Type Name Description System.String userId DateTime issuedAtUtc DateTime expiresAtUtc Returns Type Description BearerTokenEntity Overrides Teronis.AspNetCore.Identity.Bearer.BearerSignInManager<Teronis.AspNetCore.Identity.Entities.UserEntity, Teronis.AspNetCore.Identity.Entities.BearerTokenEntity>.CreateRefreshToken(System.String, DateTime, DateTime) Implements IBearerSignInManager Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.BearerSignInController-1.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.BearerSignInController-1.html",
    "title": "Class BearerSignInController<TNotUseful> | Documentations",
    "keywords": "Class BearerSignInController<TNotUseful> Inheritance System.Object BearerSignInController<TNotUseful> Namespace : Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerSignInController<TNotUseful> : Controller where TNotUseful : ISingleton Type Parameters Name Description TNotUseful Constructors | Improve this Doc View Source BearerSignInController(IBearerSignInManager) Declaration public BearerSignInController(IBearerSignInManager signInManager) Parameters Type Name Description IBearerSignInManager signInManager Methods | Improve this Doc View Source AuthenticateAsync() Declaration public Task<IActionResult> AuthenticateAsync() Returns Type Description Task < IActionResult > | Improve this Doc View Source RefreshTokenAsync() Declaration public Task<IActionResult> RefreshTokenAsync() Returns Type Description Task < IActionResult > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers Classes BearerSignInController<TNotUseful> IMvcBuilderExtensions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.IMvcBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers.IMvcBuilderExtensions.html",
    "title": "Class IMvcBuilderExtensions | Documentations",
    "keywords": "Class IMvcBuilderExtensions Inheritance System.Object IMvcBuilderExtensions Namespace : Teronis.AspNetCore.Identity.Bearer.SignInManaging.Controllers Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class IMvcBuilderExtensions : object Methods | Improve this Doc View Source AddBearerSignInControllers(IMvcBuilder, Nullable<Action<ISelectedControllerModelConfiguration>>) Adds to . Declaration public static IMvcBuilder AddBearerSignInControllers(this IMvcBuilder mvcBuilder, Action<ISelectedControllerModelConfiguration>? configureControllerModel = null) Parameters Type Name Description IMvcBuilder mvcBuilder System.Nullable < Action < ISelectedControllerModelConfiguration >> configureControllerModel Returns Type Description IMvcBuilder | Improve this Doc View Source AddBearerSignInControllers(IMvcBuilder, Nullable<String>, Nullable<Action<ISelectedControllerModelConfiguration>>) Declaration public static IMvcBuilder AddBearerSignInControllers(this IMvcBuilder mvcBuilder, string? applicationPartName, Action<ISelectedControllerModelConfiguration>? configureControllerModel = null) Parameters Type Name Description IMvcBuilder mvcBuilder System.Nullable < System.String > applicationPartName System.Nullable < Action < ISelectedControllerModelConfiguration >> configureControllerModel Returns Type Description IMvcBuilder"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer.SignInManaging | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer.SignInManaging Classes BearerSignInManager IdentityBuilderExtensions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.IdentityBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInManaging.IdentityBuilderExtensions.html",
    "title": "Class IdentityBuilderExtensions | Documentations",
    "keywords": "Class IdentityBuilderExtensions Inheritance System.Object IdentityBuilderExtensions Namespace : Teronis.AspNetCore.Identity.Bearer.SignInManaging Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class IdentityBuilderExtensions : object Methods | Improve this Doc View Source AddBearerSignInManager<DbContextType>(IdentityBuilder, Nullable<Action<BearerSignInManagerOptions>>) Declaration public static IdentityBuilder AddBearerSignInManager<DbContextType>(this IdentityBuilder identityBuilder, Action<BearerSignInManagerOptions>? configureOptions = null) where DbContextType : DbContext Parameters Type Name Description IdentityBuilder identityBuilder System.Nullable < Action < BearerSignInManagerOptions >> configureOptions Returns Type Description IdentityBuilder Type Parameters Name Description DbContextType | Improve this Doc View Source AddBearerSignInManager<DbContextType, UserType, RoleType>(IdentityBuilder, Func<IServiceProvider, IBearerSignInManager>, Nullable<Action<BearerSignInManagerOptions>>) Adds IBearerSignInManager created from bearerSignInManagerFactory to services. Declaration public static IdentityBuilder AddBearerSignInManager<DbContextType, UserType, RoleType>(this IdentityBuilder identityBuilder, Func<IServiceProvider, IBearerSignInManager> bearerSignInManagerFactory, Action<BearerSignInManagerOptions>? configureOptions = null) where DbContextType : DbContext where UserType : class where RoleType : class Parameters Type Name Description IdentityBuilder identityBuilder The identity builder. Func < IServiceProvider , IBearerSignInManager > bearerSignInManagerFactory A IBearerSignInManager factory. System.Nullable < Action < BearerSignInManagerOptions >> configureOptions Configures options. Returns Type Description IdentityBuilder Type Parameters Name Description DbContextType Type of database context. UserType Type of user entity. RoleType Type of role entity."
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInTokens.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.SignInTokens.html",
    "title": "Class SignInTokens | Documentations",
    "keywords": "Class SignInTokens Inheritance System.Object SignInTokens Namespace : Teronis.AspNetCore.Identity.Bearer Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public class SignInTokens : object Constructors | Improve this Doc View Source SignInTokens(String, String) Declaration public SignInTokens(string accessToken, string refreshToken) Parameters Type Name Description System.String accessToken System.String refreshToken Properties | Improve this Doc View Source AccessToken Declaration public string AccessToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenDescriptor.html",
    "title": "Class BearerTokenDescriptor | Documentations",
    "keywords": "Class BearerTokenDescriptor Inheritance System.Object BearerTokenDescriptor Namespace : Teronis.AspNetCore.Identity.Bearer.Stores Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerTokenDescriptor : SecurityTokenDescriptor Constructors | Improve this Doc View Source BearerTokenDescriptor(Nullable<SigningCredentials>) Declaration public BearerTokenDescriptor(SigningCredentials? signingCredentials) Parameters Type Name Description System.Nullable < SigningCredentials > signingCredentials Properties | Improve this Doc View Source SigningCredentials Declaration public SigningCredentials? SigningCredentials { get; } Property Value Type Description System.Nullable < SigningCredentials > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenStore-1.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenStore-1.html",
    "title": "Class BearerTokenStore<DbContextType> | Documentations",
    "keywords": "Class BearerTokenStore<DbContextType> Inheritance System.Object BearerTokenStore <DbContextType, BearerTokenEntity > BearerTokenStore<DbContextType> Implements IBearerTokenStore IBearerTokenStore < BearerTokenEntity > Inherited Members BearerTokenStore<DbContextType, BearerTokenEntity>.FindAsync(Guid, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.GetUserTokensAsync(String, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.InsertAsync(BearerTokenEntity, Boolean, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.DeleteAsync(BearerTokenEntity, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.DeleteAsync(Guid, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.TryDeleteAsync(Guid, CancellationToken) BearerTokenStore<DbContextType, BearerTokenEntity>.DeleteExpiredOnesAsync(CancellationToken) Namespace : Teronis.AspNetCore.Identity.Bearer.Stores Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerTokenStore<DbContextType> : BearerTokenStore<DbContextType, BearerTokenEntity>, IBearerTokenStore, IBearerTokenStore<BearerTokenEntity> where DbContextType : DbContext Type Parameters Name Description DbContextType Constructors | Improve this Doc View Source BearerTokenStore(DbContextType) Declaration public BearerTokenStore(DbContextType dbContext) Parameters Type Name Description DbContextType dbContext Implements IBearerTokenStore IBearerTokenStore<BearerTokenType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenStore-2.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.BearerTokenStore-2.html",
    "title": "Class BearerTokenStore<DbContextType, BearerTokenType> | Documentations",
    "keywords": "Class BearerTokenStore<DbContextType, BearerTokenType> Inheritance System.Object BearerTokenStore<DbContextType, BearerTokenType> BearerTokenStore<DbContextType> Implements IBearerTokenStore <BearerTokenType> Namespace : Teronis.AspNetCore.Identity.Bearer.Stores Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public class BearerTokenStore<DbContextType, BearerTokenType> : object, IBearerTokenStore<BearerTokenType> where DbContextType : DbContext where BearerTokenType : class, IBearerTokenEntity Type Parameters Name Description DbContextType BearerTokenType Constructors | Improve this Doc View Source BearerTokenStore(DbContextType) Declaration public BearerTokenStore(DbContextType dbContext) Parameters Type Name Description DbContextType dbContext Methods | Improve this Doc View Source DeleteAsync(BearerTokenType, CancellationToken) Deletes refresh token. Declaration public Task DeleteAsync(BearerTokenType refreshTokenEntity, CancellationToken cancellationToken = null) Parameters Type Name Description BearerTokenType refreshTokenEntity CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(Guid, CancellationToken) Deletes refresh token by identifier. Declaration public Task DeleteAsync(Guid refreshTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid refreshTokenId The refresh token identifier. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteExpiredOnesAsync(CancellationToken) Deletes expired bearer tokens. Declaration public Task DeleteExpiredOnesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source FindAsync(Guid, CancellationToken) Declaration public ValueTask<BearerTokenType> FindAsync(Guid bearerTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid bearerTokenId CancellationToken cancellationToken Returns Type Description ValueTask <BearerTokenType> | Improve this Doc View Source GetUserTokensAsync(String, CancellationToken) Declaration public ValueTask<List<BearerTokenType>> GetUserTokensAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description ValueTask < List <BearerTokenType>> | Improve this Doc View Source InsertAsync(BearerTokenType, Boolean, CancellationToken) Declaration public Task InsertAsync(BearerTokenType refreshTokenEntity, bool throwOnDuplication = true, CancellationToken cancellationToken = null) Parameters Type Name Description BearerTokenType refreshTokenEntity System.Boolean throwOnDuplication CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source TryDeleteAsync(Guid, CancellationToken) Deletes refresh token by identifier but skips when the bearer token identifier does not exist. Declaration public Task<bool> TryDeleteAsync(Guid refreshTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid refreshTokenId The refresh token identifier. CancellationToken cancellationToken Returns Type Description Task < System.Boolean > Implements IBearerTokenStore<BearerTokenType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer.Stores | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer.Stores Classes BearerTokenDescriptor BearerTokenStore<DbContextType> BearerTokenStore<DbContextType, BearerTokenType> Interfaces IBearerTokenStore IBearerTokenStore<BearerTokenType>"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.IBearerTokenStore.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.IBearerTokenStore.html",
    "title": "Interface IBearerTokenStore | Documentations",
    "keywords": "Interface IBearerTokenStore Inherited Members IBearerTokenStore<BearerTokenEntity>.GetUserTokensAsync(String, CancellationToken) IBearerTokenStore<BearerTokenEntity>.FindAsync(Guid, CancellationToken) IBearerTokenStore<BearerTokenEntity>.DeleteAsync(BearerTokenEntity, CancellationToken) IBearerTokenStore<BearerTokenEntity>.DeleteAsync(Guid, CancellationToken) IBearerTokenStore<BearerTokenEntity>.InsertAsync(BearerTokenEntity, Boolean, CancellationToken) IBearerTokenStore<BearerTokenEntity>.TryDeleteAsync(Guid, CancellationToken) IBearerTokenStore<BearerTokenEntity>.DeleteExpiredOnesAsync(CancellationToken) Namespace : Teronis.AspNetCore.Identity.Bearer.Stores Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public interface IBearerTokenStore : IBearerTokenStore<BearerTokenEntity> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.IBearerTokenStore-1.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Stores.IBearerTokenStore-1.html",
    "title": "Interface IBearerTokenStore<BearerTokenType> | Documentations",
    "keywords": "Interface IBearerTokenStore<BearerTokenType> Namespace : Teronis.AspNetCore.Identity.Bearer.Stores Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public interface IBearerTokenStore<BearerTokenType> where BearerTokenType : class, IBearerTokenEntity Type Parameters Name Description BearerTokenType Methods | Improve this Doc View Source DeleteAsync(BearerTokenType, CancellationToken) Declaration Task DeleteAsync(BearerTokenType refreshTokenEntity, CancellationToken cancellationToken = null) Parameters Type Name Description BearerTokenType refreshTokenEntity CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(Guid, CancellationToken) Declaration Task DeleteAsync(Guid refreshTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid refreshTokenId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteExpiredOnesAsync(CancellationToken) Declaration Task DeleteExpiredOnesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source FindAsync(Guid, CancellationToken) Declaration ValueTask<BearerTokenType> FindAsync(Guid bearerTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid bearerTokenId CancellationToken cancellationToken Returns Type Description ValueTask <BearerTokenType> | Improve this Doc View Source GetUserTokensAsync(String, CancellationToken) Declaration ValueTask<List<BearerTokenType>> GetUserTokensAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description ValueTask < List <BearerTokenType>> | Improve this Doc View Source InsertAsync(BearerTokenType, Boolean, CancellationToken) Declaration Task InsertAsync(BearerTokenType refreshTokenEntity, bool throwOnDuplication = true, CancellationToken cancellationToken = null) Parameters Type Name Description BearerTokenType refreshTokenEntity System.Boolean throwOnDuplication CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source TryDeleteAsync(Guid, CancellationToken) Declaration Task<bool> TryDeleteAsync(Guid refreshTokenId, CancellationToken cancellationToken = null) Parameters Type Name Description Guid refreshTokenId CancellationToken cancellationToken Returns Type Description Task < System.Boolean > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Utils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Utils.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Bearer.Utils | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Bearer.Utils Classes JwtTokenUtils"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Utils.JwtTokenUtils.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Bearer.Utils.JwtTokenUtils.html",
    "title": "Class JwtTokenUtils | Documentations",
    "keywords": "Class JwtTokenUtils Inheritance System.Object JwtTokenUtils Namespace : Teronis.AspNetCore.Identity.Bearer.Utils Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class JwtTokenUtils : object Methods | Improve this Doc View Source GenerateJwtToken(SecurityTokenDescriptor, Boolean) Generates a JWT-token from token descriptor. Declaration public static string GenerateJwtToken(SecurityTokenDescriptor securityTokenDescriptor, bool setDefaultTimesOnTokenCreation) Parameters Type Name Description SecurityTokenDescriptor securityTokenDescriptor System.Boolean setDefaultTimesOnTokenCreation Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.BearerTokenEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.BearerTokenEntity.html",
    "title": "Class BearerTokenEntity | Documentations",
    "keywords": "Class BearerTokenEntity Kind of read-only entity which represents a refresh token. Inheritance System.Object BearerTokenEntity Implements IBearerTokenEntity Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public class BearerTokenEntity : object, IBearerTokenEntity Constructors | Improve this Doc View Source BearerTokenEntity(String, DateTime, DateTime) Declaration public BearerTokenEntity(string userId, DateTime createdAtUtc, DateTime expiresAtUtc) Parameters Type Name Description System.String userId DateTime createdAtUtc DateTime expiresAtUtc Properties | Improve this Doc View Source BearerTokenId Declaration public Guid BearerTokenId { get; } Property Value Type Description Guid | Improve this Doc View Source CreatedAtUtc Declaration public DateTime CreatedAtUtc { get; } Property Value Type Description DateTime | Improve this Doc View Source ExpiresAtUtc Declaration public DateTime ExpiresAtUtc { get; } Property Value Type Description DateTime | Improve this Doc View Source UserId Declaration public string UserId { get; } Property Value Type Description System.String Implements IBearerTokenEntity Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Entities | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Entities Classes BearerTokenEntity Kind of read-only entity which represents a refresh token. RoleEntity UserEntity Interfaces IAccountRoleEntity Represents the account role entity. IAccountUserEntity Represents the account user entity. IBearerTokenEntity IBearerUserEntity Represents the bearer user entity."
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IAccountRoleEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IAccountRoleEntity.html",
    "title": "Interface IAccountRoleEntity | Documentations",
    "keywords": "Interface IAccountRoleEntity Represents the account role entity. Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IAccountRoleEntity Properties | Improve this Doc View Source RoleName Declaration string RoleName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IAccountUserEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IAccountUserEntity.html",
    "title": "Interface IAccountUserEntity | Documentations",
    "keywords": "Interface IAccountUserEntity Represents the account user entity. Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IAccountUserEntity Properties | Improve this Doc View Source UserName Declaration string UserName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IBearerTokenEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IBearerTokenEntity.html",
    "title": "Interface IBearerTokenEntity | Documentations",
    "keywords": "Interface IBearerTokenEntity Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Bearer.Abstractions.dll Syntax public interface IBearerTokenEntity Properties | Improve this Doc View Source BearerTokenId Declaration Guid BearerTokenId { get; } Property Value Type Description Guid | Improve this Doc View Source CreatedAtUtc Declaration DateTime CreatedAtUtc { get; } Property Value Type Description DateTime | Improve this Doc View Source ExpiresAtUtc Declaration DateTime ExpiresAtUtc { get; } Property Value Type Description DateTime | Improve this Doc View Source UserId Declaration string UserId { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IBearerUserEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.IBearerUserEntity.html",
    "title": "Interface IBearerUserEntity | Documentations",
    "keywords": "Interface IBearerUserEntity Represents the bearer user entity. Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public interface IBearerUserEntity Properties | Improve this Doc View Source Id Declaration string Id { get; } Property Value Type Description System.String | Improve this Doc View Source SecurityStamp Declaration string SecurityStamp { get; } Property Value Type Description System.String | Improve this Doc View Source UserName Declaration string UserName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.RoleEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.RoleEntity.html",
    "title": "Class RoleEntity | Documentations",
    "keywords": "Class RoleEntity Inheritance System.Object RoleEntity Implements IAccountRoleEntity Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class RoleEntity : IdentityRole, IAccountRoleEntity Constructors | Improve this Doc View Source RoleEntity() Declaration public RoleEntity() | Improve this Doc View Source RoleEntity(String) Declaration public RoleEntity(string roleName) Parameters Type Name Description System.String roleName Explicit Interface Implementations | Improve this Doc View Source IAccountRoleEntity.RoleName Declaration string IAccountRoleEntity.RoleName { get; } Returns Type Description System.String Implements IAccountRoleEntity Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) RoleEntityExtensions.ToRoleCreation(RoleEntity)"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.UserEntity.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Entities.UserEntity.html",
    "title": "Class UserEntity | Documentations",
    "keywords": "Class UserEntity Inheritance System.Object UserEntity Implements IAccountUserEntity IBearerUserEntity Namespace : Teronis.AspNetCore.Identity.Entities Assembly : Teronis.AspNetCore.Identity.Abstractions.dll Syntax public class UserEntity : IdentityUser, IAccountUserEntity, IBearerUserEntity Constructors | Improve this Doc View Source UserEntity() Declaration public UserEntity() | Improve this Doc View Source UserEntity(String) Declaration public UserEntity(string userName) Parameters Type Name Description System.String userName Implements IAccountUserEntity IBearerUserEntity Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) UserEntityExtensions.ToUserCreation(UserEntity, String[])"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.ExceptionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.ExceptionExtensions.html",
    "title": "Class ExceptionExtensions | Documentations",
    "keywords": "Class ExceptionExtensions Inheritance System.Object ExceptionExtensions Namespace : Teronis.AspNetCore.Identity.Extensions Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ExceptionExtensions : object Methods | Improve this Doc View Source ToJsonError(Nullable<Exception>, Nullable<String>) Declaration public static JsonError ToJsonError(this Exception? error, string? errorCode = null) Parameters Type Name Description System.Nullable < Exception > error System.Nullable < System.String > errorCode Returns Type Description JsonError | Improve this Doc View Source ToJsonErrors(Nullable<Exception>, Nullable<String>) Declaration public static JsonErrors ToJsonErrors(this Exception? error, string? errorCode = null) Parameters Type Name Description System.Nullable < Exception > error System.Nullable < System.String > errorCode Returns Type Description JsonErrors"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.html",
    "title": "Namespace Teronis.AspNetCore.Identity.Extensions | Documentations",
    "keywords": "Namespace Teronis.AspNetCore.Identity.Extensions Classes ExceptionExtensions ObjectResultExtensions SecurityTokenDescriptorExtensions StringExtensions"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.ObjectResultExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.ObjectResultExtensions.html",
    "title": "Class ObjectResultExtensions | Documentations",
    "keywords": "Class ObjectResultExtensions Inheritance System.Object ObjectResultExtensions Namespace : Teronis.AspNetCore.Identity.Extensions Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ObjectResultExtensions : object Methods | Improve this Doc View Source WithHttpStatusCode<T>(T, HttpStatusCode) Declaration public static T WithHttpStatusCode<T>(this T objectResult, HttpStatusCode statusCode) where T : ObjectResult? Parameters Type Name Description T objectResult HttpStatusCode statusCode Returns Type Description T Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.SecurityTokenDescriptorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.SecurityTokenDescriptorExtensions.html",
    "title": "Class SecurityTokenDescriptorExtensions | Documentations",
    "keywords": "Class SecurityTokenDescriptorExtensions Inheritance System.Object SecurityTokenDescriptorExtensions Namespace : Teronis.AspNetCore.Identity.Extensions Assembly : Teronis.AspNetCore.Identity.Bearer.dll Syntax public static class SecurityTokenDescriptorExtensions : object Methods | Improve this Doc View Source MoveClaimsToSubjectClaims(SecurityTokenDescriptor) Move claims ( ) to . Duplicates are ignored. Declaration public static void MoveClaimsToSubjectClaims(this SecurityTokenDescriptor tokenDescriptor) Parameters Type Name Description SecurityTokenDescriptor tokenDescriptor"
  },
  "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.StringExtensions.html": {
    "href": "Teronis.DotNet/Teronis.AspNetCore.Identity.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Documentations",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Namespace : Teronis.AspNetCore.Identity.Extensions Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class StringExtensions : object Methods | Improve this Doc View Source ToJsonError(Nullable<String>, Nullable<String>) Declaration public static JsonError ToJsonError(this string? errorMessage, string? errorCode = null) Parameters Type Name Description System.Nullable < System.String > errorMessage System.Nullable < System.String > errorCode Returns Type Description JsonError | Improve this Doc View Source ToJsonErrors(Nullable<String>, Nullable<String>) Declaration public static JsonErrors ToJsonErrors(this string? errorMessage, string? errorCode = null) Parameters Type Name Description System.Nullable < System.String > errorMessage System.Nullable < System.String > errorCode Returns Type Description JsonErrors"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.html",
    "title": "Namespace Teronis.Collections.Algorithms | Documentations",
    "keywords": "Namespace Teronis.Collections.Algorithms Interfaces INotifyCollectionModification<SuperItemType, SubItemType>"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.INotifyCollectionModification-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.INotifyCollectionModification-2.html",
    "title": "Interface INotifyCollectionModification<SuperItemType, SubItemType> | Documentations",
    "keywords": "Interface INotifyCollectionModification<SuperItemType, SubItemType> Namespace : Teronis.Collections.Algorithms Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface INotifyCollectionModification<SuperItemType, SubItemType> Type Parameters Name Description SuperItemType SubItemType Events | Improve this Doc View Source CollectionModified Declaration event NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType> CollectionModified Event Type Type Description NotifyCollectionModifiedEventHandler <SuperItemType, SubItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.AfterDeviationDeferredCollectionModifications.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.AfterDeviationDeferredCollectionModifications.html",
    "title": "Class AfterDeviationDeferredCollectionModifications | Documentations",
    "keywords": "Class AfterDeviationDeferredCollectionModifications The algorithm creates modifications that can transform one collection into another collection. It yieldCapabilities first equal items immediatelly. After first deviation the items are going to to be cached. If left item and right item during enumeration of both are present, the left item is linked to right item, but only when the a previous right item with same comparable part has not been linked already. Inheritance System.Object AfterDeviationDeferredCollectionModifications Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class AfterDeviationDeferredCollectionModifications : object Methods | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The collection is not assumed to be in any order. Sorted duplications are allowed. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> For leftItems the collection modifications between leftItems and rightItems Type Parameters Name Description ItemType | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, IEqualityComparer<ItemType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The collection is not assumed to be in any order. Sorted duplications are allowed. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. IEqualityComparer <ItemType> equalityComparer Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> For leftItems the collection modifications between leftItems and rightItems Type Parameters Name Description ItemType | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, IEqualityComparer<ComparablePartType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The collection is not assumed to be in any order. Sorted duplications are allowed. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, IEqualityComparer<ComparablePartType> equalityComparer) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. IEqualityComparer <ComparablePartType> equalityComparer Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> For leftItems the collection modifications between leftItems and rightItems Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, IEnumerable<RightItemType>, Func<LeftItemType, ComparablePartType>, Func<RightItemType, ComparablePartType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The collection is not assumed to be in any order. Sorted duplications are allowed. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, IEnumerable<RightItemType> rightItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> For leftItems the collection modifications between leftItems and rightItems Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item."
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModification-2.CollectionModificationPartBase-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModification-2.CollectionModificationPartBase-2.html",
    "title": "Class CollectionModification<NewItemType, OldItemType>.CollectionModificationPartBase<ItemType, OtherItemType> | Documentations",
    "keywords": "Class CollectionModification<NewItemType, OldItemType>.CollectionModificationPartBase<ItemType, OtherItemType> Inheritance System.Object CollectionModification<NewItemType, OldItemType>.CollectionModificationPartBase<ItemType, OtherItemType> Implements ICollectionModificationPart <NewItemType, OldItemType, ItemType, OtherItemType> Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public abstract class CollectionModificationPartBase<ItemType, OtherItemType> : object, ICollectionModificationPart<NewItemType, OldItemType, ItemType, OtherItemType> Type Parameters Name Description ItemType OtherItemType Constructors | Improve this Doc View Source CollectionModificationPartBase(ICollectionModification<NewItemType, OldItemType>) Declaration public CollectionModificationPartBase(ICollectionModification<NewItemType, OldItemType> modification) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> modification Properties | Improve this Doc View Source Index Declaration public abstract int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Items Declaration public abstract IReadOnlyList<ItemType>? Items { get; } Property Value Type Description System.Nullable < IReadOnlyList <ItemType>> | Improve this Doc View Source OtherPart Declaration public ICollectionModificationPart<NewItemType, OldItemType, OtherItemType, ItemType> OtherPart { get; } Property Value Type Description ICollectionModificationPart <NewItemType, OldItemType, OtherItemType, ItemType> | Improve this Doc View Source Owner Declaration public ICollectionModification<NewItemType, OldItemType> Owner { get; } Property Value Type Description ICollectionModification <NewItemType, OldItemType> Implements ICollectionModificationPart<OwnerNewItemType, OwnerOldItemType, ItemType, OtherItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModification-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModification-2.html",
    "title": "Class CollectionModification<NewItemType, OldItemType> | Documentations",
    "keywords": "Class CollectionModification<NewItemType, OldItemType> Inheritance System.Object CollectionModification<NewItemType, OldItemType> Implements ICollectionModification <NewItemType, OldItemType> IDebuggerDisplay ICollectionModificationParameters Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public class CollectionModification<NewItemType, OldItemType> : object, ICollectionModification<NewItemType, OldItemType>, IDebuggerDisplay, ICollectionModificationParameters Type Parameters Name Description NewItemType OldItemType Constructors | Improve this Doc View Source CollectionModification(NotifyCollectionChangedAction, OldItemType, Int32, NewItemType, Int32) Declaration public CollectionModification(NotifyCollectionChangedAction changeAction, OldItemType oldItem, int oldIndex, NewItemType newItem, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction OldItemType oldItem System.Int32 oldIndex NewItemType newItem System.Int32 newIndex | Improve this Doc View Source CollectionModification(NotifyCollectionChangedAction, OldItemType, Int32, IReadOnlyList<NewItemType>, Int32) Declaration public CollectionModification(NotifyCollectionChangedAction changeAction, OldItemType oldItem, int oldIndex, IReadOnlyList<NewItemType> newItems, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction OldItemType oldItem System.Int32 oldIndex IReadOnlyList <NewItemType> newItems System.Int32 newIndex | Improve this Doc View Source CollectionModification(NotifyCollectionChangedAction, IReadOnlyList<OldItemType>, Int32, NewItemType, Int32) Declaration public CollectionModification(NotifyCollectionChangedAction changeAction, IReadOnlyList<OldItemType> oldValues, int oldIndex, NewItemType newItem, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction IReadOnlyList <OldItemType> oldValues System.Int32 oldIndex NewItemType newItem System.Int32 newIndex | Improve this Doc View Source CollectionModification(NotifyCollectionChangedAction, Nullable<IReadOnlyList<OldItemType>>, Int32, Nullable<IReadOnlyList<NewItemType>>, Int32) Declaration public CollectionModification(NotifyCollectionChangedAction changeAction, IReadOnlyList<OldItemType>? oldItems, int oldIndex, IReadOnlyList<NewItemType>? newItems, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction System.Nullable < IReadOnlyList <OldItemType>> oldItems System.Int32 oldIndex System.Nullable < IReadOnlyList <NewItemType>> newItems System.Int32 newIndex Properties | Improve this Doc View Source Action Declaration public NotifyCollectionChangedAction Action { get; } Property Value Type Description NotifyCollectionChangedAction | Improve this Doc View Source NewIndex Declaration public int NewIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NewItems Declaration public IReadOnlyList<NewItemType>? NewItems { get; } Property Value Type Description System.Nullable < IReadOnlyList <NewItemType>> | Improve this Doc View Source NewPart Declaration public ICollectionModificationPart<NewItemType, OldItemType, NewItemType, OldItemType> NewPart { get; } Property Value Type Description ICollectionModificationPart <NewItemType, OldItemType, NewItemType, OldItemType> | Improve this Doc View Source OldIndex Declaration public int OldIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldItems Declaration public IReadOnlyList<OldItemType>? OldItems { get; } Property Value Type Description System.Nullable < IReadOnlyList <OldItemType>> | Improve this Doc View Source OldPart Declaration public ICollectionModificationPart<NewItemType, OldItemType, OldItemType, NewItemType> OldPart { get; } Property Value Type Description ICollectionModificationPart <NewItemType, OldItemType, OldItemType, NewItemType> Methods | Improve this Doc View Source CreateNew(NotifyCollectionChangedAction, NewItemType, Int32) Declaration public static CollectionModification<NewItemType, OldItemType> CreateNew(NotifyCollectionChangedAction changeAction, NewItemType newItem, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction NewItemType newItem System.Int32 newIndex Returns Type Description CollectionModification <NewItemType, OldItemType> | Improve this Doc View Source CreateNew(NotifyCollectionChangedAction, Nullable<IReadOnlyList<NewItemType>>, Int32) Declaration public static CollectionModification<NewItemType, OldItemType> CreateNew(NotifyCollectionChangedAction changeAction, IReadOnlyList<NewItemType>? newValues, int newIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction System.Nullable < IReadOnlyList <NewItemType>> newValues System.Int32 newIndex Returns Type Description CollectionModification <NewItemType, OldItemType> | Improve this Doc View Source CreateOld(NotifyCollectionChangedAction, OldItemType, Int32) Declaration public static CollectionModification<NewItemType, OldItemType> CreateOld(NotifyCollectionChangedAction changeAction, OldItemType oldItem, int oldIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction OldItemType oldItem System.Int32 oldIndex Returns Type Description CollectionModification <NewItemType, OldItemType> | Improve this Doc View Source CreateOld(NotifyCollectionChangedAction, Nullable<IReadOnlyList<OldItemType>>, Int32) Declaration public static CollectionModification<NewItemType, OldItemType> CreateOld(NotifyCollectionChangedAction changeAction, IReadOnlyList<OldItemType>? oldItems, int oldIndex) Parameters Type Name Description NotifyCollectionChangedAction changeAction System.Nullable < IReadOnlyList <OldItemType>> oldItems System.Int32 oldIndex Returns Type Description CollectionModification <NewItemType, OldItemType> Explicit Interface Implementations | Improve this Doc View Source ICollectionModificationParameters.NewItemsCount Declaration int? ICollectionModificationParameters.NewItemsCount { get; } Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ICollectionModificationParameters.OldItemsCount Declaration int? ICollectionModificationParameters.OldItemsCount { get; } Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source IDebuggerDisplay.DebuggerDisplay Declaration string IDebuggerDisplay.DebuggerDisplay { get; } Returns Type Description System.String Implements ICollectionModification<NewItemType, OldItemType> IDebuggerDisplay ICollectionModificationParameters Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModificationsYieldCapabilities.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionModificationsYieldCapabilities.html",
    "title": "Enum CollectionModificationsYieldCapabilities | Documentations",
    "keywords": "Enum CollectionModificationsYieldCapabilities Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public enum CollectionModificationsYieldCapabilities : int Fields Name Description All Modifications for inserting, removing or replacing items are considered to be yielded. Insert Modifications for inserting items are considered to be yielded. InsertRemove Modifications for inserting or removing items are considered to be yielded. InsertReplace Modifications for inserting or replacing items are considered to be yielded. Remove Modifications for removing items are considered to be yielded. Replace Modifications for replacing items are considered to be yielded."
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSequenceType.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSequenceType.html",
    "title": "Enum CollectionSequenceType | Documentations",
    "keywords": "Enum CollectionSequenceType Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public enum CollectionSequenceType : int Fields Name Description Ascending The items are sorted ascended, e.g. index 0 is smaller than index 1 and therefore comparable. Descending The items are sorted descended, e.g. index 0 is greater than index 1 and therefore comparable. Sequential The items are in any order and therefore not comparable but equality comparable."
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod.html",
    "title": "Class CollectionSynchronizationMethod | Documentations",
    "keywords": "Class CollectionSynchronizationMethod Inheritance System.Object CollectionSynchronizationMethod Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class CollectionSynchronizationMethod : object Methods | Improve this Doc View Source Ascending<ItemType>() Creates a method for creating modifications that can transform one collection into another collection that is in ascended order Declaration public static ICollectionSynchronizationMethod<ItemType> Ascending<ItemType>() Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Ascending<ItemType>(IComparer<ItemType>) Creates a method for creating modifications that can transform one collection into another collection that is in ascended order Declaration public static ICollectionSynchronizationMethod<ItemType> Ascending<ItemType>(IComparer<ItemType> comparer) Parameters Type Name Description IComparer <ItemType> comparer Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Descending<ItemType>() Creates a method for creating modifications that can transform one collection into another collection that is in descended order. Declaration public static ICollectionSynchronizationMethod<ItemType> Descending<ItemType>() Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Descending<ItemType>(IComparer<ItemType>) Creates a method for creating modifications that can transform one collection into another collection that is in descended order. Declaration public static ICollectionSynchronizationMethod<ItemType> Descending<ItemType>(IComparer<ItemType> comparer) Parameters Type Name Description IComparer <ItemType> comparer Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Sequential<ItemType>() Creates a method for creating modifications that can transform one collection into another collection that is in sequential order Declaration public static ICollectionSynchronizationMethod<ItemType> Sequential<ItemType>() Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Sequential<ItemType>(IEqualityComparer<ItemType>) Creates a method for creating modifications that can transform one collection into another collection that is in sequential order Declaration public static ICollectionSynchronizationMethod<ItemType> Sequential<ItemType>(IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description IEqualityComparer <ItemType> equalityComparer Returns Type Description ICollectionSynchronizationMethod <ItemType> A collection synchronization method. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source Sorted<ItemType>(IComparer<ItemType>, Boolean) Declaration public static ICollectionSynchronizationMethod<ItemType> Sorted<ItemType>(IComparer<ItemType> comparer, bool descended) Parameters Type Name Description IComparer <ItemType> comparer System.Boolean descended Returns Type Description ICollectionSynchronizationMethod <ItemType> Type Parameters Name Description ItemType"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.html",
    "title": "Class CollectionSynchronizationMethod<ItemType> | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<ItemType> Inheritance System.Object CollectionSynchronizationMethod<ItemType> Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public sealed class CollectionSynchronizationMethod<ItemType> : object Type Parameters Name Description ItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.Sequential.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.Sequential.html",
    "title": "Class CollectionSynchronizationMethod<ItemType>.Sequential | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<ItemType>.Sequential Inheritance System.Object CollectionSynchronizationMethod <ItemType, ItemType, ItemType> CollectionSynchronizationMethod.Sequential <> CollectionSynchronizationMethod<ItemType>.Sequential Implements ICollectionSynchronizationMethod <ItemType> ICollectionSynchronizationMethod <ItemType, ItemType> Inherited Members CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sequential.EqualityComparer CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sequential.YieldCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.SequenceType CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.GetComparablePartOfLeftItem CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.GetComparablePartOfRightItem CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>) CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.YieldCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public class Sequential : CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sequential, ICollectionSynchronizationMethod<ItemType>, ICollectionSynchronizationMethod<ItemType, ItemType> Constructors | Improve this Doc View Source Sequential(Func<ItemType, ItemType>, Func<ItemType, ItemType>, IEqualityComparer<ItemType>) Declaration public Sequential(Func<ItemType, ItemType> getComparablePartOfLeftItem, Func<ItemType, ItemType> getComparablePartOfRightItem, IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description Func <ItemType, ItemType> getComparablePartOfLeftItem Func <ItemType, ItemType> getComparablePartOfRightItem IEqualityComparer <ItemType> equalityComparer Implements ICollectionSynchronizationMethod<ItemType> ICollectionSynchronizationMethod<LeftItemType, RightItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.Sorted.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-1.Sorted.html",
    "title": "Class CollectionSynchronizationMethod<ItemType>.Sorted | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<ItemType>.Sorted Inheritance System.Object CollectionSynchronizationMethod <ItemType, ItemType, ItemType> CollectionSynchronizationMethod.Sorted <> CollectionSynchronizationMethod<ItemType>.Sorted Implements ICollectionSynchronizationMethod <ItemType> ICollectionSynchronizationMethod <ItemType, ItemType> Inherited Members CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sorted.CollectionOrder CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sorted.Comparer CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sorted.YieldCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.SequenceType CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.GetComparablePartOfLeftItem CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.GetComparablePartOfRightItem CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>) CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.YieldCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public class Sorted : CollectionSynchronizationMethod<ItemType, ItemType, ItemType>.Sorted, ICollectionSynchronizationMethod<ItemType>, ICollectionSynchronizationMethod<ItemType, ItemType> Constructors | Improve this Doc View Source Sorted(Func<ItemType, ItemType>, Func<ItemType, ItemType>, SortedCollectionOrder, IComparer<ItemType>) Declaration public Sorted(Func<ItemType, ItemType> getComparablePartOfLeftItem, Func<ItemType, ItemType> getComparablePartOfRightItem, SortedCollectionOrder collectionOrder, IComparer<ItemType> comparer) Parameters Type Name Description Func <ItemType, ItemType> getComparablePartOfLeftItem Func <ItemType, ItemType> getComparablePartOfRightItem SortedCollectionOrder collectionOrder IComparer <ItemType> comparer Implements ICollectionSynchronizationMethod<ItemType> ICollectionSynchronizationMethod<LeftItemType, RightItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.html",
    "title": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType> | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType> Inheritance System.Object CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType> CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sequential CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sorted Implements ICollectionSynchronizationMethod <LeftItemType, RightItemType> Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public abstract class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType> : object, ICollectionSynchronizationMethod<LeftItemType, RightItemType> Type Parameters Name Description LeftItemType RightItemType ComparableItemType Constructors | Improve this Doc View Source CollectionSynchronizationMethod(CollectionSequenceType, Func<LeftItemType, ComparableItemType>, Func<RightItemType, ComparableItemType>) Declaration protected CollectionSynchronizationMethod(CollectionSequenceType sequenceType, Func<LeftItemType, ComparableItemType> getComparablePartOfLeftItem, Func<RightItemType, ComparableItemType> getComparablePartOfRightItem) Parameters Type Name Description CollectionSequenceType sequenceType Func <LeftItemType, ComparableItemType> getComparablePartOfLeftItem Func <RightItemType, ComparableItemType> getComparablePartOfRightItem Properties | Improve this Doc View Source GetComparablePartOfLeftItem Declaration protected Func<LeftItemType, ComparableItemType> GetComparablePartOfLeftItem { get; } Property Value Type Description Func <LeftItemType, ComparableItemType> | Improve this Doc View Source GetComparablePartOfRightItem Declaration protected Func<RightItemType, ComparableItemType> GetComparablePartOfRightItem { get; } Property Value Type Description Func <RightItemType, ComparableItemType> | Improve this Doc View Source SequenceType Declaration public CollectionSequenceType SequenceType { get; } Property Value Type Description CollectionSequenceType Methods | Improve this Doc View Source CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<LeftItemType>, ref Nullable<IEnumerable<RightItemType>>) Checks arguments when yielding collection modifications. Declaration protected void CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<LeftItemType> leftItems, ref IEnumerable<RightItemType>? rightItems) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. System.Nullable < IEnumerable <RightItemType>> rightItems The collection in which leftItems could be transformed. | Improve this Doc View Source YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Yields modifications that can transform one collection into another collection. Declaration public abstract IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications(IEnumerable<LeftItemType> leftItems, IEnumerable<RightItemType>? rightItems, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. System.Nullable < IEnumerable <RightItemType>> rightItems The collection in which leftItems could be transformed. CollectionModificationsYieldCapabilities yieldCapabilities The yield capabilities, e.g. only insert or only remove. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Implements ICollectionSynchronizationMethod<LeftItemType, RightItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.Sequential.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.Sequential.html",
    "title": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sequential | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sequential Inheritance System.Object CollectionSynchronizationMethod <LeftItemType, RightItemType, ComparableItemType> CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sequential CollectionSynchronizationMethod<ItemType>.Sequential Implements ICollectionSynchronizationMethod <LeftItemType, RightItemType> Inherited Members CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.SequenceType CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.GetComparablePartOfLeftItem CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.GetComparablePartOfRightItem CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>) CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public class Sequential : CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>, ICollectionSynchronizationMethod<LeftItemType, RightItemType> Constructors | Improve this Doc View Source Sequential(Func<LeftItemType, ComparableItemType>, Func<RightItemType, ComparableItemType>, IEqualityComparer<ComparableItemType>) Declaration public Sequential(Func<LeftItemType, ComparableItemType> getComparablePartOfLeftItem, Func<RightItemType, ComparableItemType> getComparablePartOfRightItem, IEqualityComparer<ComparableItemType> equalityComparer) Parameters Type Name Description Func <LeftItemType, ComparableItemType> getComparablePartOfLeftItem Func <RightItemType, ComparableItemType> getComparablePartOfRightItem IEqualityComparer <ComparableItemType> equalityComparer Properties | Improve this Doc View Source EqualityComparer Declaration public IEqualityComparer<ComparableItemType> EqualityComparer { get; } Property Value Type Description IEqualityComparer <ComparableItemType> Methods | Improve this Doc View Source YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Declaration public override IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications(IEnumerable<LeftItemType> leftItems, IEnumerable<RightItemType>? rightItems, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems System.Nullable < IEnumerable <RightItemType>> rightItems CollectionModificationsYieldCapabilities yieldCapabilities Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> Overrides Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.YieldCollectionModifications(IEnumerable<LeftItemType>, System.Nullable<IEnumerable<RightItemType>>, Teronis.Collections.Algorithms.Modifications.CollectionModificationsYieldCapabilities) Implements ICollectionSynchronizationMethod<LeftItemType, RightItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.Sorted.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod-3.Sorted.html",
    "title": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sorted | Documentations",
    "keywords": "Class CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sorted Inheritance System.Object CollectionSynchronizationMethod <LeftItemType, RightItemType, ComparableItemType> CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sorted CollectionSynchronizationMethod<ItemType>.Sorted Implements ICollectionSynchronizationMethod <LeftItemType, RightItemType> Inherited Members CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.SequenceType CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.GetComparablePartOfLeftItem CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.GetComparablePartOfRightItem CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.CheckArgumentsWhenYieldingCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>) CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public class Sorted : CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>, ICollectionSynchronizationMethod<LeftItemType, RightItemType> Constructors | Improve this Doc View Source Sorted(Func<LeftItemType, ComparableItemType>, Func<RightItemType, ComparableItemType>, SortedCollectionOrder, IComparer<ComparableItemType>) Declaration public Sorted(Func<LeftItemType, ComparableItemType> getComparablePartOfLeftItem, Func<RightItemType, ComparableItemType> getComparablePartOfRightItem, SortedCollectionOrder collectionOrder, IComparer<ComparableItemType> comparer) Parameters Type Name Description Func <LeftItemType, ComparableItemType> getComparablePartOfLeftItem Func <RightItemType, ComparableItemType> getComparablePartOfRightItem SortedCollectionOrder collectionOrder IComparer <ComparableItemType> comparer Properties | Improve this Doc View Source CollectionOrder Declaration public SortedCollectionOrder CollectionOrder { get; } Property Value Type Description SortedCollectionOrder | Improve this Doc View Source Comparer Declaration public IComparer<ComparableItemType> Comparer { get; } Property Value Type Description IComparer <ComparableItemType> Methods | Improve this Doc View Source YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Declaration public override IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications(IEnumerable<LeftItemType> leftItems, IEnumerable<RightItemType>? rightItems, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems System.Nullable < IEnumerable <RightItemType>> rightItems CollectionModificationsYieldCapabilities yieldCapabilities Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> Overrides Teronis.Collections.Algorithms.Modifications.CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.YieldCollectionModifications(IEnumerable<LeftItemType>, System.Nullable<IEnumerable<RightItemType>>, Teronis.Collections.Algorithms.Modifications.CollectionModificationsYieldCapabilities) Implements ICollectionSynchronizationMethod<LeftItemType, RightItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.EqualityTrailingCollectionModifications.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.EqualityTrailingCollectionModifications.html",
    "title": "Class EqualityTrailingCollectionModifications | Documentations",
    "keywords": "Class EqualityTrailingCollectionModifications The algorithm creates modifications that can transform one collection into another collection. If equal left and right items are appearing the right items are going to act as markers. The right items before markers are the children of the markers, to assure that the these right items are inserted before their individual marker. Inheritance System.Object EqualityTrailingCollectionModifications Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class EqualityTrailingCollectionModifications : object Methods | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, Nullable<IEqualityComparer<ItemType>>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, IEqualityComparer<ItemType>? equalityComparer) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. System.Nullable < IEqualityComparer <ItemType>> equalityComparer The equality comparer to be used to compare comparable parts. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, Nullable<IEqualityComparer<ItemType>>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, IEqualityComparer<ItemType>? equalityComparer, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. System.Nullable < IEqualityComparer <ItemType>> equalityComparer The equality comparer to be used to compare comparable parts. CollectionModificationsYieldCapabilities yieldCapabilities The yield capabilities, e.g. only insert or only remove. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. CollectionModificationsYieldCapabilities yieldCapabilities The yield capabilities, e.g. only insert or only remove. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, Nullable<IEqualityComparer<ComparablePartType>>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, IEqualityComparer<ComparablePartType>? equalityComparer) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. System.Nullable < IEqualityComparer <ComparablePartType>> equalityComparer The equality comparer to be used to compare comparable parts. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, Nullable<IEqualityComparer<ComparablePartType>>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, IEqualityComparer<ComparablePartType>? equalityComparer, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. System.Nullable < IEqualityComparer <ComparablePartType>> equalityComparer The equality comparer to be used to compare comparable parts. CollectionModificationsYieldCapabilities yieldCapabilities The yield capabilities, e.g. only insert or only remove. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . The more the collection is synchronized in an orderly way, the more efficient the algorithm is. Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. CollectionModificationsYieldCapabilities yieldCapabilities The yield capabilities, e.g. only insert or only remove. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item."
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.html",
    "title": "Namespace Teronis.Collections.Algorithms.Modifications | Documentations",
    "keywords": "Namespace Teronis.Collections.Algorithms.Modifications Classes AfterDeviationDeferredCollectionModifications The algorithm creates modifications that can transform one collection into another collection. It yieldCapabilities first equal items immediatelly. After first deviation the items are going to to be cached. If left item and right item during enumeration of both are present, the left item is linked to right item, but only when the a previous right item with same comparable part has not been linked already. CollectionModification<NewItemType, OldItemType> CollectionModification<NewItemType, OldItemType>.CollectionModificationPartBase<ItemType, OtherItemType> CollectionSynchronizationMethod CollectionSynchronizationMethod<ItemType> CollectionSynchronizationMethod<ItemType>.Sequential CollectionSynchronizationMethod<ItemType>.Sorted CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType> CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sequential CollectionSynchronizationMethod<LeftItemType, RightItemType, ComparableItemType>.Sorted EqualityTrailingCollectionModifications The algorithm creates modifications that can transform one collection into another collection. If equal left and right items are appearing the right items are going to act as markers. The right items before markers are the children of the markers, to assure that the these right items are inserted before their individual marker. ICollectionModificationGenericExtensions ICollectionModificationParametersTools ICollectionSynchronizationMethodExtensions SortedCollectionModifications Interfaces ICollectionModification<NewItemType, OldItemType> ICollectionModificationParameters ICollectionModificationPart<OwnerNewItemType, OwnerOldItemType, ItemType, OtherItemType> ICollectionSynchronizationMethod<ItemType> ICollectionSynchronizationMethod<LeftItemType, RightItemType> Enums CollectionModificationsYieldCapabilities CollectionSequenceType SortedCollectionOrder"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModification-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModification-2.html",
    "title": "Interface ICollectionModification<NewItemType, OldItemType> | Documentations",
    "keywords": "Interface ICollectionModification<NewItemType, OldItemType> Inherited Members ICollectionModificationParameters.Action ICollectionModificationParameters.OldItemsCount ICollectionModificationParameters.NewItemsCount Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public interface ICollectionModification<out NewItemType, out OldItemType> : ICollectionModificationParameters Type Parameters Name Description NewItemType OldItemType Properties | Improve this Doc View Source NewIndex Declaration int NewIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NewItems Declaration IReadOnlyList<NewItemType>? NewItems { get; } Property Value Type Description System.Nullable < IReadOnlyList <NewItemType>> | Improve this Doc View Source NewPart Declaration ICollectionModificationPart<NewItemType, OldItemType, NewItemType, OldItemType> NewPart { get; } Property Value Type Description ICollectionModificationPart <NewItemType, OldItemType, NewItemType, OldItemType> | Improve this Doc View Source OldIndex Declaration int OldIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldItems Declaration IReadOnlyList<OldItemType>? OldItems { get; } Property Value Type Description System.Nullable < IReadOnlyList <OldItemType>> | Improve this Doc View Source OldPart Declaration ICollectionModificationPart<NewItemType, OldItemType, OldItemType, NewItemType> OldPart { get; } Property Value Type Description ICollectionModificationPart <NewItemType, OldItemType, OldItemType, NewItemType> Extension Methods ICollectionModificationGenericExtensions.GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IReadOnlyCollection<TargetItemType>) ICollectionModificationGenericExtensions.GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IEnumerable<TargetItemType>, Int32) ICollectionModificationGenericExtensions.GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IReadOnlyCollection<TargetItemType>) ICollectionModificationGenericExtensions.GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IEnumerable<TargetItemType>, Int32) ICollectionModificationGenericExtensions.CopyWithOtherItems<SourceOldItemType, SourceNewItemType, TargetOldItemType, TargetNewItemType>(ICollectionModification<SourceOldItemType, SourceNewItemType>, Nullable<IReadOnlyList<TargetOldItemType>>, Nullable<IReadOnlyList<TargetNewItemType>>) ICollectionModificationGenericExtensions.CopyWithOtherValues<NewItemType, OldItemType>(ICollectionModification<NewItemType, OldItemType>, Nullable<YetNullable<IReadOnlyList<OldItemType>>>, Nullable<Int32>, Nullable<YetNullable<IReadOnlyList<NewItemType>>>, Nullable<Int32>) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationGenericExtensions.html",
    "title": "Class ICollectionModificationGenericExtensions | Documentations",
    "keywords": "Class ICollectionModificationGenericExtensions Inheritance System.Object ICollectionModificationGenericExtensions Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class ICollectionModificationGenericExtensions : object Methods | Improve this Doc View Source CopyWithOtherItems<SourceOldItemType, SourceNewItemType, TargetOldItemType, TargetNewItemType>(ICollectionModification<SourceOldItemType, SourceNewItemType>, Nullable<IReadOnlyList<TargetOldItemType>>, Nullable<IReadOnlyList<TargetNewItemType>>) Copies modification but replaces OldItems and NewItems . Declaration public static CollectionModification<TargetNewItemType, TargetOldItemType> CopyWithOtherItems<SourceOldItemType, SourceNewItemType, TargetOldItemType, TargetNewItemType>(this ICollectionModification<SourceOldItemType, SourceNewItemType> modification, IReadOnlyList<TargetOldItemType>? otherOldItems, IReadOnlyList<TargetNewItemType>? otherNewItems) Parameters Type Name Description ICollectionModification <SourceOldItemType, SourceNewItemType> modification System.Nullable < IReadOnlyList <TargetOldItemType>> otherOldItems System.Nullable < IReadOnlyList <TargetNewItemType>> otherNewItems Returns Type Description CollectionModification <TargetNewItemType, TargetOldItemType> New instance of CollectionModification<NewItemType, OldItemType> . Type Parameters Name Description SourceOldItemType SourceNewItemType TargetOldItemType TargetNewItemType | Improve this Doc View Source CopyWithOtherValues<NewItemType, OldItemType>(ICollectionModification<NewItemType, OldItemType>, Nullable<YetNullable<IReadOnlyList<OldItemType>>>, Nullable<Int32>, Nullable<YetNullable<IReadOnlyList<NewItemType>>>, Nullable<Int32>) Declaration public static CollectionModification<NewItemType, OldItemType> CopyWithOtherValues<NewItemType, OldItemType>(this ICollectionModification<NewItemType, OldItemType> modification, YetNullable<IReadOnlyList<OldItemType>>? oldItems = null, int? oldIndex = null, YetNullable<IReadOnlyList<NewItemType>>? newItems = null, int? newIndex = null) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> modification System.Nullable < YetNullable < IReadOnlyList <OldItemType>>> oldItems System.Nullable < System.Int32 > oldIndex System.Nullable < YetNullable < IReadOnlyList <NewItemType>>> newItems System.Nullable < System.Int32 > newIndex Returns Type Description CollectionModification <NewItemType, OldItemType> Type Parameters Name Description NewItemType OldItemType | Improve this Doc View Source GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IEnumerable<TargetItemType>, Int32) Get the items from collection beginning from NewIndex . Declaration public static List<TargetItemType>? GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(this ICollectionModification<NewItemType, OldItemType> change, IEnumerable<TargetItemType> collection, int collectionCount) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> change IEnumerable <TargetItemType> collection System.Int32 collectionCount Returns Type Description System.Nullable < List <TargetItemType>> Type Parameters Name Description NewItemType OldItemType TargetItemType | Improve this Doc View Source GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IReadOnlyCollection<TargetItemType>) Get the items from collection beginning from NewIndex . Declaration public static List<TargetItemType>? GetItemsBeginningFromNewIndex<NewItemType, OldItemType, TargetItemType>(this ICollectionModification<NewItemType, OldItemType> change, IReadOnlyCollection<TargetItemType> collection) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> change IReadOnlyCollection <TargetItemType> collection Returns Type Description System.Nullable < List <TargetItemType>> Type Parameters Name Description NewItemType OldItemType TargetItemType | Improve this Doc View Source GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IEnumerable<TargetItemType>, Int32) Get the items from collection beginning from OldIndex . Declaration public static List<TargetItemType>? GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(this ICollectionModification<NewItemType, OldItemType> change, IEnumerable<TargetItemType> collection, int collectionCount) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> change IEnumerable <TargetItemType> collection System.Int32 collectionCount Returns Type Description System.Nullable < List <TargetItemType>> Type Parameters Name Description NewItemType OldItemType TargetItemType | Improve this Doc View Source GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(ICollectionModification<NewItemType, OldItemType>, IReadOnlyCollection<TargetItemType>) Get the items from collection beginning from OldIndex . Declaration public static List<TargetItemType>? GetItemsBeginningFromOldIndex<NewItemType, OldItemType, TargetItemType>(this ICollectionModification<NewItemType, OldItemType> change, IReadOnlyCollection<TargetItemType> collection) Parameters Type Name Description ICollectionModification <NewItemType, OldItemType> change IReadOnlyCollection <TargetItemType> collection Returns Type Description System.Nullable < List <TargetItemType>> Type Parameters Name Description NewItemType OldItemType TargetItemType | Improve this Doc View Source ToNotifyCollectionChangedEventArgs<ItemType>(ICollectionModification<ItemType, ItemType>) Declaration public static NotifyCollectionChangedEventArgs ToNotifyCollectionChangedEventArgs<ItemType>(this ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification Returns Type Description NotifyCollectionChangedEventArgs Type Parameters Name Description ItemType"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationParameters.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationParameters.html",
    "title": "Interface ICollectionModificationParameters | Documentations",
    "keywords": "Interface ICollectionModificationParameters Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public interface ICollectionModificationParameters Properties | Improve this Doc View Source Action Declaration NotifyCollectionChangedAction Action { get; } Property Value Type Description NotifyCollectionChangedAction | Improve this Doc View Source NewIndex Declaration int NewIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source NewItemsCount Declaration int? NewItemsCount { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source OldIndex Declaration int OldIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source OldItemsCount Declaration int? OldItemsCount { get; } Property Value Type Description System.Nullable < System.Int32 > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationParametersTools.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationParametersTools.html",
    "title": "Class ICollectionModificationParametersTools | Documentations",
    "keywords": "Class ICollectionModificationParametersTools Inheritance System.Object ICollectionModificationParametersTools Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class ICollectionModificationParametersTools : object Methods | Improve this Doc View Source MoveRangeContains(ICollectionModificationParameters, Int32) Declaration public static bool MoveRangeContains(ICollectionModificationParameters modification, int index) Parameters Type Name Description ICollectionModificationParameters modification System.Int32 index Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationPart-4.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionModificationPart-4.html",
    "title": "Interface ICollectionModificationPart<OwnerNewItemType, OwnerOldItemType, ItemType, OtherItemType> | Documentations",
    "keywords": "Interface ICollectionModificationPart<OwnerNewItemType, OwnerOldItemType, ItemType, OtherItemType> Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public interface ICollectionModificationPart<out OwnerNewItemType, out OwnerOldItemType, out ItemType, out OtherItemType> Type Parameters Name Description OwnerNewItemType OwnerOldItemType ItemType OtherItemType Properties | Improve this Doc View Source Index Declaration int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Items Declaration IReadOnlyList<ItemType>? Items { get; } Property Value Type Description System.Nullable < IReadOnlyList <ItemType>> | Improve this Doc View Source OtherPart Declaration ICollectionModificationPart<OwnerNewItemType, OwnerOldItemType, OtherItemType, ItemType> OtherPart { get; } Property Value Type Description ICollectionModificationPart <OwnerNewItemType, OwnerOldItemType, OtherItemType, ItemType> | Improve this Doc View Source Owner Declaration ICollectionModification<OwnerNewItemType, OwnerOldItemType> Owner { get; } Property Value Type Description ICollectionModification <OwnerNewItemType, OwnerOldItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethod-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethod-1.html",
    "title": "Interface ICollectionSynchronizationMethod<ItemType> | Documentations",
    "keywords": "Interface ICollectionSynchronizationMethod<ItemType> Inherited Members ICollectionSynchronizationMethod<ItemType, ItemType>.YieldCollectionModifications(IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public interface ICollectionSynchronizationMethod<ItemType> : ICollectionSynchronizationMethod<ItemType, ItemType> Type Parameters Name Description ItemType Extension Methods ICollectionSynchronizationMethodExtensions.YieldCollectionModifications<ItemType>(ICollectionSynchronizationMethod<ItemType>, IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethod-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethod-2.html",
    "title": "Interface ICollectionSynchronizationMethod<LeftItemType, RightItemType> | Documentations",
    "keywords": "Interface ICollectionSynchronizationMethod<LeftItemType, RightItemType> Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public interface ICollectionSynchronizationMethod<LeftItemType, RightItemType> Type Parameters Name Description LeftItemType RightItemType Methods | Improve this Doc View Source YieldCollectionModifications(IEnumerable<LeftItemType>, Nullable<IEnumerable<RightItemType>>, CollectionModificationsYieldCapabilities) Declaration IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications(IEnumerable<LeftItemType> leftItems, IEnumerable<RightItemType>? rightItems, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems System.Nullable < IEnumerable <RightItemType>> rightItems CollectionModificationsYieldCapabilities yieldCapabilities Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethodExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.ICollectionSynchronizationMethodExtensions.html",
    "title": "Class ICollectionSynchronizationMethodExtensions | Documentations",
    "keywords": "Class ICollectionSynchronizationMethodExtensions Inheritance System.Object ICollectionSynchronizationMethodExtensions Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class ICollectionSynchronizationMethodExtensions : object Methods | Improve this Doc View Source YieldCollectionModifications<ItemType>(ICollectionSynchronizationMethod<ItemType>, IEnumerable<ItemType>, Nullable<IEnumerable<ItemType>>) Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(this ICollectionSynchronizationMethod<ItemType> synchronizationMethod, IEnumerable<ItemType> leftItems, IEnumerable<ItemType>? rightItems) Parameters Type Name Description ICollectionSynchronizationMethod <ItemType> synchronizationMethod IEnumerable <ItemType> leftItems System.Nullable < IEnumerable <ItemType>> rightItems Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> Type Parameters Name Description ItemType"
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.SortedCollectionModifications.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.SortedCollectionModifications.html",
    "title": "Class SortedCollectionModifications | Documentations",
    "keywords": "Class SortedCollectionModifications Inheritance System.Object SortedCollectionModifications Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public static class SortedCollectionModifications : object Methods | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, SortedCollectionOrder, IComparer<ItemType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, SortedCollectionOrder collectionOrder, IComparer<ItemType> comparer) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. IComparer <ItemType> comparer The comparer to be used to compare comparable parts of left and right item. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, SortedCollectionOrder, IComparer<ItemType>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, SortedCollectionOrder collectionOrder, IComparer<ItemType> comparer, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. IComparer <ItemType> comparer The comparer to be used to compare comparable parts of left and right item. CollectionModificationsYieldCapabilities yieldCapabilities The yieldCapabilities that regulates how leftItems and rightItems are synchronized. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<ItemType>(IEnumerable<ItemType>, IEnumerable<ItemType>, SortedCollectionOrder, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<ItemType, ItemType>> YieldCollectionModifications<ItemType>(IEnumerable<ItemType> leftItems, IEnumerable<ItemType> rightItems, SortedCollectionOrder collectionOrder, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <ItemType> leftItems The collection you want to have transformed. IEnumerable <ItemType> rightItems The collection in which leftItems could be transformed. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. CollectionModificationsYieldCapabilities yieldCapabilities The yieldCapabilities that regulates how leftItems and rightItems are synchronized. Returns Type Description IEnumerable < CollectionModification <ItemType, ItemType>> The collection modifications. Type Parameters Name Description ItemType The item type. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, SortedCollectionOrder, IComparer<ComparablePartType>) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, SortedCollectionOrder collectionOrder, IComparer<ComparablePartType> comparer) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. IComparer <ComparablePartType> comparer The comparer to be used to compare comparable parts of left and right item. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, SortedCollectionOrder, IComparer<ComparablePartType>, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, SortedCollectionOrder collectionOrder, IComparer<ComparablePartType> comparer, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. IComparer <ComparablePartType> comparer The comparer to be used to compare comparable parts of left and right item. CollectionModificationsYieldCapabilities yieldCapabilities The yieldCapabilities that regulates how leftItems and rightItems are synchronized. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item. | Improve this Doc View Source YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType>, Func<LeftItemType, ComparablePartType>, IEnumerable<RightItemType>, Func<RightItemType, ComparablePartType>, SortedCollectionOrder, CollectionModificationsYieldCapabilities) The algorithm creates modifications that can transform one collection into another collection. The collection modifications may be used to transform leftItems . Assumes leftItems and rightItems to be sorted by that order you specify by collectionOrder . Duplications are allowed but take into account that duplications are yielded as they are appearing. Declaration public static IEnumerable<CollectionModification<RightItemType, LeftItemType>> YieldCollectionModifications<LeftItemType, RightItemType, ComparablePartType>(IEnumerable<LeftItemType> leftItems, Func<LeftItemType, ComparablePartType> getComparablePartOfLeftItem, IEnumerable<RightItemType> rightItems, Func<RightItemType, ComparablePartType> getComparablePartOfRightItem, SortedCollectionOrder collectionOrder, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description IEnumerable <LeftItemType> leftItems The collection you want to have transformed. Func <LeftItemType, ComparablePartType> getComparablePartOfLeftItem The part of left item that is comparable with part of right item. IEnumerable <RightItemType> rightItems The collection in which leftItems could be transformed. Func <RightItemType, ComparablePartType> getComparablePartOfRightItem The part of right item that is comparable with part of left item. SortedCollectionOrder collectionOrder the presumed order of items to be used to determine argument assignment. CollectionModificationsYieldCapabilities yieldCapabilities The yieldCapabilities that regulates how leftItems and rightItems are synchronized. Returns Type Description IEnumerable < CollectionModification <RightItemType, LeftItemType>> The collection modifications. Type Parameters Name Description LeftItemType The type of left items. RightItemType The type of right items. ComparablePartType The type of the comparable part of left item and right item."
  },
  "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.SortedCollectionOrder.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Algorithms.Modifications.SortedCollectionOrder.html",
    "title": "Enum SortedCollectionOrder | Documentations",
    "keywords": "Enum SortedCollectionOrder Namespace : Teronis.Collections.Algorithms.Modifications Assembly : Teronis.NetStandard.Collections.Algorithms.dll Syntax public enum SortedCollectionOrder : int Fields Name Description Ascending Descending"
  },
  "Teronis.DotNet/Teronis.Collections.CollectionTools.html": {
    "href": "Teronis.DotNet/Teronis.Collections.CollectionTools.html",
    "title": "Class CollectionTools | Documentations",
    "keywords": "Class CollectionTools Inheritance System.Object CollectionTools Namespace : Teronis.Collections Assembly : Teronis.NetStandard.Core.dll Syntax public static class CollectionTools : object Methods | Improve this Doc View Source GetMoveRange(Int32, Int32, Int32) Gets the move affected range of items between fromIndex and toIndex with simultaneous consideration of the amount of the to be moved items. Declaration public static (int LowerIndex, int Distance) GetMoveRange(int fromIndex, int toIndex, int itemsCount) Parameters Type Name Description System.Int32 fromIndex The index of first item where you would start the move. System.Int32 toIndex The index where the new items would be if the old items would be not there already. System.Int32 itemsCount The amount of items you want move including first item. Returns Type Description System.ValueTuple < System.Int32 , System.Int32 > The lower index where move would start and starting there the distance. | Improve this Doc View Source MoveRangeContains(Int32, Int32, Int32, Int32) Checks whether itemIndex is within the move affected range of items between fromIndex and toIndex with simultaneous consideration of the amount of the to be moved items. Declaration public static bool MoveRangeContains(int fromIndex, int toIndex, int itemsCount, int itemIndex) Parameters Type Name Description System.Int32 fromIndex The index of first item where you would start the move. System.Int32 toIndex The index where the new items would be if the old items would be not there already. System.Int32 itemsCount The amount of items you want move including first item. System.Int32 itemIndex Returns Type Description System.Boolean The lower index where move would start and starting there the distance."
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.AsyncDataSource-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.AsyncDataSource-1.html",
    "title": "Class AsyncDataSource<DataType> | Documentations",
    "keywords": "Class AsyncDataSource<DataType> Inheritance System.Object DataSourceBase <DataType> AsyncDataSource<DataType> ConsecutiveDataSources<DataType> EnumerableDataSource<DataType> ParallelDataSources<DataType> Implements IAsyncDataSource <DataType> IDataSource <DataType> IDataSource IDisposable Inherited Members DataSourceBase<DataType>.IsDisposed DataSourceBase<DataType>.EnumerationState DataSourceBase<DataType>.DataType DataSourceBase<DataType>.Logger DataSourceBase<DataType>.EnsureEnumerate() DataSourceBase<DataType>.LogEnumerationReachedEnd() DataSourceBase<DataType>.Dispose() Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public abstract class AsyncDataSource<DataType> : DataSourceBase<DataType>, IAsyncDataSource<DataType>, IDataSource<DataType>, IDataSource, IDisposable Type Parameters Name Description DataType Constructors | Improve this Doc View Source AsyncDataSource(Nullable<ILogger>) Declaration public AsyncDataSource(ILogger? logger = null) Parameters Type Name Description System.Nullable < ILogger > logger Methods | Improve this Doc View Source Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Teronis.Collections.DataSources.Generic.DataSourceBase<DataType>.Dispose(System.Boolean) | Improve this Doc View Source EnumerateAsync(CancellationToken) Declaration protected abstract IAsyncEnumerable<DataType> EnumerateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> | Improve this Doc View Source RegisterCancellationTokenSource(CancellationTokenSource) The source enumerateScopeCancellationTokenSource will be registered to Teronis.Collections.DataSources.Generic.AsyncDataSource`1.cancellationTokenSource for being canceled and disposed. Declaration protected void RegisterCancellationTokenSource(CancellationTokenSource enumerateScopeCancellationTokenSource) Parameters Type Name Description CancellationTokenSource enumerateScopeCancellationTokenSource Explicit Interface Implementations | Improve this Doc View Source IAsyncDataSource<DataType>.EnumerateAsync(CancellationToken) Declaration IAsyncEnumerable<DataType> IAsyncDataSource<DataType>.EnumerateAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> Implements IAsyncDataSource<DataType> IDataSource<DataType> IDataSource IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.ConsecutiveDataSources-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.ConsecutiveDataSources-1.html",
    "title": "Class ConsecutiveDataSources<DataType> | Documentations",
    "keywords": "Class ConsecutiveDataSources<DataType> Inheritance System.Object DataSourceBase <DataType> AsyncDataSource <DataType> ConsecutiveDataSources<DataType> Implements IAsyncDataSource <DataType> IDataSource <DataType> IDataSource IDisposable Inherited Members AsyncDataSource<DataType>.RegisterCancellationTokenSource(CancellationTokenSource) AsyncDataSource<DataType>.IAsyncDataSource<DataType>.EnumerateAsync(CancellationToken) AsyncDataSource<DataType>.Dispose(Boolean) DataSourceBase<DataType>.IsDisposed DataSourceBase<DataType>.EnumerationState DataSourceBase<DataType>.DataType DataSourceBase<DataType>.Logger DataSourceBase<DataType>.EnsureEnumerate() DataSourceBase<DataType>.LogEnumerationReachedEnd() DataSourceBase<DataType>.Dispose() Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class ConsecutiveDataSources<DataType> : AsyncDataSource<DataType>, IAsyncDataSource<DataType>, IDataSource<DataType>, IDataSource, IDisposable Type Parameters Name Description DataType Constructors | Improve this Doc View Source ConsecutiveDataSources(IEnumerable<IAsyncDataSource<DataType>>, ILogger) Declaration public ConsecutiveDataSources(IEnumerable<IAsyncDataSource<DataType>> asyncDataSources, ILogger logger) Parameters Type Name Description IEnumerable < IAsyncDataSource <DataType>> asyncDataSources ILogger logger Methods | Improve this Doc View Source EnumerateAsync(CancellationToken) Declaration protected override IAsyncEnumerable<DataType> EnumerateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> Overrides Teronis.Collections.DataSources.Generic.AsyncDataSource<DataType>.EnumerateAsync(CancellationToken) Implements IAsyncDataSource<DataType> IDataSource<DataType> IDataSource IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.DataSourceBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.DataSourceBase-1.html",
    "title": "Class DataSourceBase<TData> | Documentations",
    "keywords": "Class DataSourceBase<TData> Inheritance System.Object DataSourceBase<TData> AsyncDataSource<DataType> Implements IDataSource IDisposable Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public abstract class DataSourceBase<TData> : object, IDataSource, IDisposable Type Parameters Name Description TData Constructors | Improve this Doc View Source DataSourceBase(Nullable<ILogger>) Declaration public DataSourceBase(ILogger? logger = null) Parameters Type Name Description System.Nullable < ILogger > logger Properties | Improve this Doc View Source DataType Declaration public Type DataType { get; } Property Value Type Description Type | Improve this Doc View Source EnumerationState Declaration public DataSourceEnumerationState EnumerationState { get; protected set; } Property Value Type Description DataSourceEnumerationState | Improve this Doc View Source IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Logger Declaration protected ILogger? Logger { get; } Property Value Type Description System.Nullable < ILogger > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source EnsureEnumerate() Throws exception if IsDisposed is true or EnumerationState is not equals Enumerable . Declaration protected void EnsureEnumerate() | Improve this Doc View Source LogEnumerationReachedEnd() Declaration protected void LogEnumerationReachedEnd() Implements IDataSource IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.DataSourceEnumerationState.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.DataSourceEnumerationState.html",
    "title": "Enum DataSourceEnumerationState | Documentations",
    "keywords": "Enum DataSourceEnumerationState Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public enum DataSourceEnumerationState : int Fields Name Description Completed Enumerable Faulted Started Stopped"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.EnumerableDataSource-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.EnumerableDataSource-1.html",
    "title": "Class EnumerableDataSource<DataType> | Documentations",
    "keywords": "Class EnumerableDataSource<DataType> Inheritance System.Object DataSourceBase <DataType> AsyncDataSource <DataType> EnumerableDataSource<DataType> Implements IAsyncDataSource <DataType> IDataSource <DataType> IDataSource IDisposable Inherited Members AsyncDataSource<DataType>.RegisterCancellationTokenSource(CancellationTokenSource) AsyncDataSource<DataType>.IAsyncDataSource<DataType>.EnumerateAsync(CancellationToken) AsyncDataSource<DataType>.Dispose(Boolean) DataSourceBase<DataType>.IsDisposed DataSourceBase<DataType>.EnumerationState DataSourceBase<DataType>.DataType DataSourceBase<DataType>.Logger DataSourceBase<DataType>.EnsureEnumerate() DataSourceBase<DataType>.LogEnumerationReachedEnd() DataSourceBase<DataType>.Dispose() Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class EnumerableDataSource<DataType> : AsyncDataSource<DataType>, IAsyncDataSource<DataType>, IDataSource<DataType>, IDataSource, IDisposable Type Parameters Name Description DataType Constructors | Improve this Doc View Source EnumerableDataSource(IAsyncEnumerable<DataType>, ILogger) Declaration public EnumerableDataSource(IAsyncEnumerable<DataType> asyncEnumerable, ILogger logger) Parameters Type Name Description IAsyncEnumerable <DataType> asyncEnumerable ILogger logger Methods | Improve this Doc View Source Create(IEnumerable<DataType>, ILogger) Declaration public static EnumerableDataSource<DataType> Create(IEnumerable<DataType> enumerable, ILogger logger) Parameters Type Name Description IEnumerable <DataType> enumerable ILogger logger Returns Type Description EnumerableDataSource <DataType> | Improve this Doc View Source EnumerateAsync(CancellationToken) Declaration protected override IAsyncEnumerable<DataType> EnumerateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> Overrides Teronis.Collections.DataSources.Generic.AsyncDataSource<DataType>.EnumerateAsync(CancellationToken) Implements IAsyncDataSource<DataType> IDataSource<DataType> IDataSource IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.html",
    "title": "Namespace Teronis.Collections.DataSources.Generic | Documentations",
    "keywords": "Namespace Teronis.Collections.DataSources.Generic Classes AsyncDataSource<DataType> ConsecutiveDataSources<DataType> DataSourceBase<TData> EnumerableDataSource<DataType> ParallelDataSources<DataType> Interfaces IAsyncDataSource<DataType> IDataSource<DataType> Enums DataSourceEnumerationState"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.IAsyncDataSource-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.IAsyncDataSource-1.html",
    "title": "Interface IAsyncDataSource<DataType> | Documentations",
    "keywords": "Interface IAsyncDataSource<DataType> Inherited Members IDataSource.EnumerationState IDataSource.DataType IDataSource.IsDisposed Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IAsyncDataSource<out DataType> : IDataSource<DataType>, IDataSource, IDisposable Type Parameters Name Description DataType Methods | Improve this Doc View Source EnumerateAsync(CancellationToken) Declaration IAsyncEnumerable<DataType> EnumerateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.IDataSource-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.IDataSource-1.html",
    "title": "Interface IDataSource<DataType> | Documentations",
    "keywords": "Interface IDataSource<DataType> Inherited Members IDataSource.EnumerationState IDataSource.DataType IDataSource.IsDisposed Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IDataSource<out DataType> : IDataSource, IDisposable Type Parameters Name Description DataType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.Generic.ParallelDataSources-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.Generic.ParallelDataSources-1.html",
    "title": "Class ParallelDataSources<DataType> | Documentations",
    "keywords": "Class ParallelDataSources<DataType> Inheritance System.Object DataSourceBase <DataType> AsyncDataSource <DataType> ParallelDataSources<DataType> Implements IAsyncDataSource <DataType> IDataSource <DataType> IDataSource IDisposable Inherited Members AsyncDataSource<DataType>.RegisterCancellationTokenSource(CancellationTokenSource) AsyncDataSource<DataType>.IAsyncDataSource<DataType>.EnumerateAsync(CancellationToken) AsyncDataSource<DataType>.Dispose(Boolean) DataSourceBase<DataType>.IsDisposed DataSourceBase<DataType>.EnumerationState DataSourceBase<DataType>.DataType DataSourceBase<DataType>.Logger DataSourceBase<DataType>.EnsureEnumerate() DataSourceBase<DataType>.LogEnumerationReachedEnd() DataSourceBase<DataType>.Dispose() Namespace : Teronis.Collections.DataSources.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class ParallelDataSources<DataType> : AsyncDataSource<DataType>, IAsyncDataSource<DataType>, IDataSource<DataType>, IDataSource, IDisposable Type Parameters Name Description DataType Constructors | Improve this Doc View Source ParallelDataSources(IEnumerable<IAsyncDataSource<DataType>>, Nullable<ILogger>) Declaration public ParallelDataSources(IEnumerable<IAsyncDataSource<DataType>> asyncDataSources, ILogger? logger = null) Parameters Type Name Description IEnumerable < IAsyncDataSource <DataType>> asyncDataSources System.Nullable < ILogger > logger Methods | Improve this Doc View Source EnumerateAsync(CancellationToken) Declaration protected override IAsyncEnumerable<DataType> EnumerateAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <DataType> Overrides Teronis.Collections.DataSources.Generic.AsyncDataSource<DataType>.EnumerateAsync(CancellationToken) Implements IAsyncDataSource<DataType> IDataSource<DataType> IDataSource IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.html",
    "title": "Namespace Teronis.Collections.DataSources | Documentations",
    "keywords": "Namespace Teronis.Collections.DataSources Interfaces IDataSource"
  },
  "Teronis.DotNet/Teronis.Collections.DataSources.IDataSource.html": {
    "href": "Teronis.DotNet/Teronis.Collections.DataSources.IDataSource.html",
    "title": "Interface IDataSource | Documentations",
    "keywords": "Interface IDataSource Namespace : Teronis.Collections.DataSources Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IDataSource : IDisposable Properties | Improve this Doc View Source DataType Type of data this data source delivers. Declaration Type DataType { get; } Property Value Type Description Type | Improve this Doc View Source EnumerationState Declaration DataSourceEnumerationState EnumerationState { get; } Property Value Type Description DataSourceEnumerationState | Improve this Doc View Source IsDisposed Declaration bool IsDisposed { get; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.AsyncQueueSocket-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.AsyncQueueSocket-1.html",
    "title": "Class AsyncQueueSocket<T> | Documentations",
    "keywords": "Class AsyncQueueSocket<T> Inheritance System.Object AsyncQueueSocket<T> Implements IDisposable Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class AsyncQueueSocket<T> : IAsyncEnumerable<T>, IDisposable Type Parameters Name Description T Constructors | Improve this Doc View Source AsyncQueueSocket() Declaration public AsyncQueueSocket() Properties | Improve this Doc View Source IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Enqueue(T) Declaration public void Enqueue(T item) Parameters Type Name Description T item | Improve this Doc View Source GetAsyncEnumerator(CancellationToken) Declaration public IAsyncEnumerator<T> GetAsyncEnumerator(CancellationToken token = null) Parameters Type Name Description CancellationToken token Returns Type Description IAsyncEnumerator <T> Implements IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePair.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePair.html",
    "title": "Class CovariantKeyValuePair | Documentations",
    "keywords": "Class CovariantKeyValuePair Inheritance System.Object CovariantKeyValuePair Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class CovariantKeyValuePair : object Methods | Improve this Doc View Source Create<KeyType, ValueType>(KeyType, ValueType) Declaration public static CovariantKeyValuePair<KeyType, ValueType> Create<KeyType, ValueType>(KeyType key, ValueType value) Parameters Type Name Description KeyType key ValueType value Returns Type Description CovariantKeyValuePair <KeyType, ValueType> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePair-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePair-2.html",
    "title": "Struct CovariantKeyValuePair<KeyType, ValueType> | Documentations",
    "keywords": "Struct CovariantKeyValuePair<KeyType, ValueType> Implements ICovariantKeyValuePair <KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public struct CovariantKeyValuePair<KeyType, ValueType> : ICovariantKeyValuePair<KeyType, ValueType> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source CovariantKeyValuePair(KeyType, ValueType) Declaration public CovariantKeyValuePair(KeyType key, ValueType value) Parameters Type Name Description KeyType key ValueType value Properties | Improve this Doc View Source Key Declaration public KeyType Key { get; } Property Value Type Description KeyType | Improve this Doc View Source Value Declaration public ValueType Value { get; } Property Value Type Description ValueType Methods | Improve this Doc View Source Deconstruct(out KeyType, out ValueType) Declaration public void Deconstruct(out KeyType key, out ValueType value) Parameters Type Name Description KeyType key ValueType value Implements ICovariantKeyValuePair<KeyType, ValueType> Extension Methods CovariantKeyValuePairExtensions.ToList<KeyType, ValueType>(CovariantKeyValuePair<KeyType, ValueType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairCollection-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairCollection-2.html",
    "title": "Class CovariantKeyValuePairCollection<KeyType, ValueType> | Documentations",
    "keywords": "Class CovariantKeyValuePairCollection<KeyType, ValueType> Inheritance System.Object CovariantKeyValuePairCollection<KeyType, ValueType> Implements ICovariantKeyValuePairCollection <KeyType, ValueType> IEnumerable IEnumerable < ICovariantKeyValuePair <KeyType, ValueType>> IReadOnlyCollection < ICovariantKeyValuePair <KeyType, ValueType>> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class CovariantKeyValuePairCollection<KeyType, ValueType> : IReadOnlyCollection<KeyValuePair<KeyType, ValueType>>, ICovariantKeyValuePairCollection<KeyType, ValueType>, IEnumerable, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source CovariantKeyValuePairCollection(IReadOnlyCollection<KeyValuePair<KeyType, ValueType>>) Declaration public CovariantKeyValuePairCollection(IReadOnlyCollection<KeyValuePair<KeyType, ValueType>> collection) Parameters Type Name Description IReadOnlyCollection < KeyValuePair <KeyType, ValueType>> collection Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ICovariantKeyValuePair<KeyType, ValueType>> GetEnumerator() Returns Type Description IEnumerator < ICovariantKeyValuePair <KeyType, ValueType>> Implements ICovariantKeyValuePairCollection<KeyType, ValueType> IEnumerable IEnumerable<> IReadOnlyCollection<> Extension Methods CovariantKeyValuePairCollectionExtensions.AsCovariantKeyValuePairCollection<KeyType, ValueType>(CovariantKeyValuePairCollection<KeyType, ValueType>) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairCollectionExtensions.html",
    "title": "Class CovariantKeyValuePairCollectionExtensions | Documentations",
    "keywords": "Class CovariantKeyValuePairCollectionExtensions Inheritance System.Object CovariantKeyValuePairCollectionExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class CovariantKeyValuePairCollectionExtensions : object Methods | Improve this Doc View Source AsCovariantKeyValuePairCollection<KeyType, ValueType>(CovariantKeyValuePairCollection<KeyType, ValueType>) Declaration public static ICovariantKeyValuePairCollection<KeyType, ValueType> AsCovariantKeyValuePairCollection<KeyType, ValueType>(this CovariantKeyValuePairCollection<KeyType, ValueType> collection) Parameters Type Name Description CovariantKeyValuePairCollection <KeyType, ValueType> collection Returns Type Description ICovariantKeyValuePairCollection <KeyType, ValueType> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.CovariantKeyValuePairExtensions.html",
    "title": "Class CovariantKeyValuePairExtensions | Documentations",
    "keywords": "Class CovariantKeyValuePairExtensions Inheritance System.Object CovariantKeyValuePairExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class CovariantKeyValuePairExtensions : object Methods | Improve this Doc View Source AsCovariantList<KeyType, ValueType>(IReadOnlyCollection<CovariantKeyValuePair<YetNullable<KeyType>, ValueType>>) Declaration public static IReadOnlyCollection<ICovariantKeyValuePair<IYetNullable<KeyType>, ValueType>> AsCovariantList<KeyType, ValueType>(this IReadOnlyCollection<CovariantKeyValuePair<YetNullable<KeyType>, ValueType>> collection) Parameters Type Name Description IReadOnlyCollection < CovariantKeyValuePair < YetNullable <KeyType>, ValueType>> collection Returns Type Description IReadOnlyCollection < ICovariantKeyValuePair < IYetNullable <KeyType>, ValueType>> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source ToList<KeyType, ValueType>(CovariantKeyValuePair<KeyType, ValueType>) Declaration public static List<CovariantKeyValuePair<KeyType, ValueType>> ToList<KeyType, ValueType>(this CovariantKeyValuePair<KeyType, ValueType> pair) Parameters Type Name Description CovariantKeyValuePair <KeyType, ValueType> pair Returns Type Description List < CovariantKeyValuePair <KeyType, ValueType>> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.DictionaryEnumerator-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.DictionaryEnumerator-2.html",
    "title": "Class DictionaryEnumerator<TKey, TValue> | Documentations",
    "keywords": "Class DictionaryEnumerator<TKey, TValue> Inheritance System.Object DictionaryEnumerator<TKey, TValue> Implements IDisposable Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class DictionaryEnumerator<TKey, TValue> : IDictionaryEnumerator, IDisposable Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source DictionaryEnumerator(IDictionary<TKey, TValue>) Declaration public DictionaryEnumerator(IDictionary<TKey, TValue> value) Parameters Type Name Description IDictionary <TKey, TValue> value Properties | Improve this Doc View Source Current Declaration public object Current { get; } Property Value Type Description System.Object | Improve this Doc View Source Entry Declaration public DictionaryEntry Entry { get; } Property Value Type Description DictionaryEntry | Improve this Doc View Source Key Declaration public object Key { get; } Property Value Type Description System.Object | Improve this Doc View Source Value Declaration public object? Value { get; } Property Value Type Description System.Nullable < System.Object > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean | Improve this Doc View Source Reset() Declaration public void Reset() Implements IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.html",
    "title": "Namespace Teronis.Collections.Generic | Documentations",
    "keywords": "Namespace Teronis.Collections.Generic Classes AsyncQueueSocket<T> CovariantKeyValuePair CovariantKeyValuePairCollection<KeyType, ValueType> CovariantKeyValuePairCollectionExtensions CovariantKeyValuePairExtensions DictionaryEnumerator<TKey, TValue> ICovariantKeyValuePairExtensions IEnumerableComparer<T> IKeyValuePairEnumeratorExtensions IOrderedKeysProviderComparer Compares two instances of IOrderedKeysProvider . An instance is smaller if it the only null instance or its path is smaller than the path of the other instance. IOrderedKeysProviderExtensions IReadOnlyKeyValuePairCollectionExtensions KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType> KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> ListQueue<T> NullableKeyDictionary<KeyType, ValueType> NullableKeyDictionaryExtensions NullableKeyEnumuerator<KeyType, ValueType> SuccessivKeys SuccessivKeysComparer<TKey1, TKey2> SuccessivKeysNonNullableKeyException Structs CovariantKeyValuePair<KeyType, ValueType> SuccessivKeys<TKey1, TKey2> ValueIndexPair<T> Interfaces ICovariantKeyValuePair<KeyType, ValueType> ICovariantKeyValuePairCollection<KeyType, ValueType> ICovariantReadOnlyDictionary<TKey, ValueType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType> INullableKeyDictionary<KeyType, ValueType> IOrderedKeysProvider IReadOnlyNullableKeyDictionary<KeyType, ValueType>"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePair-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePair-2.html",
    "title": "Interface ICovariantKeyValuePair<KeyType, ValueType> | Documentations",
    "keywords": "Interface ICovariantKeyValuePair<KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Core.dll Syntax public interface ICovariantKeyValuePair<out KeyType, out ValueType> Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Key Declaration KeyType Key { get; } Property Value Type Description KeyType | Improve this Doc View Source Value Declaration ValueType Value { get; } Property Value Type Description ValueType Extension Methods ICovariantKeyValuePairExtensions.Deconstruct<KeyType, ValueType>(ICovariantKeyValuePair<KeyType, ValueType>, out KeyType, out ValueType) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePairCollection-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePairCollection-2.html",
    "title": "Interface ICovariantKeyValuePairCollection<KeyType, ValueType> | Documentations",
    "keywords": "Interface ICovariantKeyValuePairCollection<KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface ICovariantKeyValuePairCollection<out KeyType, out ValueType> : IEnumerable, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>> Type Parameters Name Description KeyType ValueType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePairExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ICovariantKeyValuePairExtensions.html",
    "title": "Class ICovariantKeyValuePairExtensions | Documentations",
    "keywords": "Class ICovariantKeyValuePairExtensions Inheritance System.Object ICovariantKeyValuePairExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class ICovariantKeyValuePairExtensions : object Methods | Improve this Doc View Source Deconstruct<KeyType, ValueType>(ICovariantKeyValuePair<KeyType, ValueType>, out KeyType, out ValueType) Declaration public static void Deconstruct<KeyType, ValueType>(this ICovariantKeyValuePair<KeyType, ValueType> pair, out KeyType key, out ValueType value) Parameters Type Name Description ICovariantKeyValuePair <KeyType, ValueType> pair KeyType key ValueType value Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ICovariantReadOnlyDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ICovariantReadOnlyDictionary-2.html",
    "title": "Interface ICovariantReadOnlyDictionary<TKey, ValueType> | Documentations",
    "keywords": "Interface ICovariantReadOnlyDictionary<TKey, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface ICovariantReadOnlyDictionary<TKey, out ValueType> : IEnumerable<ICovariantKeyValuePair<TKey, ValueType>>, IEnumerable, IReadOnlyCollection<ICovariantKeyValuePair<TKey, ValueType>> Type Parameters Name Description TKey ValueType Properties | Improve this Doc View Source Item[TKey] Declaration ValueType this[TKey key] { get; } Parameters Type Name Description TKey key Property Value Type Description ValueType | Improve this Doc View Source Keys Declaration IEnumerable<TKey> Keys { get; } Property Value Type Description IEnumerable <TKey> | Improve this Doc View Source Values Declaration IEnumerable<ValueType> Values { get; } Property Value Type Description IEnumerable <ValueType> Methods | Improve this Doc View Source ContainsKey(TKey) Declaration bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue(TKey) Tries to find a value by key . Declaration ICovariantTuple<bool, ValueType> TryGetValue(TKey key) Parameters Type Name Description TKey key Returns Type Description ICovariantTuple < System.Boolean , ValueType> Tuple where Item1 represents a boolean whether a value has been found and Item2 represents the value that may have been found. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ICovariantReadOnlyNullableKeyDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ICovariantReadOnlyNullableKeyDictionary-2.html",
    "title": "Interface ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType> | Documentations",
    "keywords": "Interface ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType> Inherited Members ICovariantReadOnlyDictionary<KeyType, ValueType>.Item[KeyType] ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys ICovariantReadOnlyDictionary<KeyType, ValueType>.Values ICovariantReadOnlyDictionary<KeyType, ValueType>.ContainsKey(KeyType) ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType) ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Item[YetNullable<KeyType>] ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.ContainsKey(YetNullable<KeyType>) ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType>) Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface ICovariantReadOnlyNullableKeyDictionary<KeyType, out ValueType> : ICovariantReadOnlyDictionary<KeyType, ValueType>, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>>, ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IEnumerable<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IEnumerable Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Keys Declaration IEnumerable<KeyType> Keys { get; } Property Value Type Description IEnumerable <KeyType> | Improve this Doc View Source Values Declaration IEnumerable<ValueType> Values { get; } Property Value Type Description IEnumerable <ValueType> Methods | Improve this Doc View Source TryGetValue(YetNullable<KeyType>) Declaration ICovariantTuple<bool, ValueType> TryGetValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description ICovariantTuple < System.Boolean , ValueType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IEnumerableComparer-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IEnumerableComparer-1.html",
    "title": "Class IEnumerableComparer<T> | Documentations",
    "keywords": "Class IEnumerableComparer<T> Inheritance System.Object IEnumerableComparer<T> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Core.dll Syntax public class IEnumerableComparer<T> : EqualityComparer<IEnumerable<T>> Type Parameters Name Description T Constructors | Improve this Doc View Source IEnumerableComparer() Declaration public IEnumerableComparer() | Improve this Doc View Source IEnumerableComparer(Nullable<IEqualityComparer<T>>) Declaration public IEnumerableComparer(IEqualityComparer<T>? equalityComparer) Parameters Type Name Description System.Nullable < IEqualityComparer <T>> equalityComparer Properties | Improve this Doc View Source Default Declaration public static IEnumerableComparer<T> Default { get; } Property Value Type Description IEnumerableComparer <T> | Improve this Doc View Source EqualityComparer Declaration public IEqualityComparer<T> EqualityComparer { get; } Property Value Type Description IEqualityComparer <T> Methods | Improve this Doc View Source Equals(Nullable<IEnumerable<T>>, Nullable<IEnumerable<T>>) Declaration public override bool Equals(IEnumerable<T>? x, IEnumerable<T>? y) Parameters Type Name Description System.Nullable < IEnumerable <T>> x System.Nullable < IEnumerable <T>> y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(IEnumerable<T>) Declaration public override int GetHashCode(IEnumerable<T> obj) Parameters Type Name Description IEnumerable <T> obj Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IKeyValuePairEnumeratorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IKeyValuePairEnumeratorExtensions.html",
    "title": "Class IKeyValuePairEnumeratorExtensions | Documentations",
    "keywords": "Class IKeyValuePairEnumeratorExtensions Inheritance System.Object IKeyValuePairEnumeratorExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class IKeyValuePairEnumeratorExtensions : object Methods | Improve this Doc View Source GetEnumeratorWithCovariantPairsHavingNullableKey<KeyType, ValueType>(IEnumerable<KeyValuePair<KeyType, ValueType>>) Declaration public static IEnumerator<ICovariantKeyValuePair<KeyType?, ValueType>> GetEnumeratorWithCovariantPairsHavingNullableKey<KeyType, ValueType>(this IEnumerable<KeyValuePair<KeyType, ValueType>> enumerable) where KeyType : struct Parameters Type Name Description IEnumerable < KeyValuePair <KeyType, ValueType>> enumerable Returns Type Description IEnumerator < ICovariantKeyValuePair < System.Nullable <KeyType>, ValueType>> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.INullableKeyDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.INullableKeyDictionary-2.html",
    "title": "Interface INullableKeyDictionary<KeyType, ValueType> | Documentations",
    "keywords": "Interface INullableKeyDictionary<KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface INullableKeyDictionary<KeyType, ValueType> : IDictionary<KeyType, ValueType>, IDictionary<YetNullable<KeyType>, ValueType> Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[YetNullable<KeyType>] Declaration ValueType this[YetNullable<KeyType> key] { get; } Parameters Type Name Description YetNullable <KeyType> key Property Value Type Description ValueType | Improve this Doc View Source Keys Declaration ICollection<YetNullable<KeyType>> Keys { get; } Property Value Type Description ICollection < YetNullable <KeyType>> | Improve this Doc View Source Values Declaration ICollection<ValueType> Values { get; } Property Value Type Description ICollection <ValueType> Methods | Improve this Doc View Source Add(ValueType) Adds an element associated with the nullable key. Declaration void Add(ValueType value) Parameters Type Name Description ValueType value | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source ContainsKey(YetNullable<KeyType>) Declaration bool ContainsKey(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < YetNullable <KeyType>, ValueType>> | Improve this Doc View Source Remove() Removes the element associated with the nullable key. Declaration bool Remove() Returns Type Description System.Boolean true if the element is successfully removed; otherwise, false. | Improve this Doc View Source TryGetValue(YetNullable<KeyType>, out ValueType) Declaration bool TryGetValue(YetNullable<KeyType> key, out ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProvider.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProvider.html",
    "title": "Interface IOrderedKeysProvider | Documentations",
    "keywords": "Interface IOrderedKeysProvider Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IOrderedKeysProvider Properties | Improve this Doc View Source KeysLength Declaration int KeysLength { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetOrderedKeys() Declaration IList<object?> GetOrderedKeys() Returns Type Description IList < System.Nullable < System.Object >> Extension Methods IOrderedKeysProviderExtensions.ThrowWhenNoSuccessivKey(IOrderedKeysProvider) IOrderedKeysProviderExtensions.ToDependencyPath(IOrderedKeysProvider) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProviderComparer.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProviderComparer.html",
    "title": "Class IOrderedKeysProviderComparer | Documentations",
    "keywords": "Class IOrderedKeysProviderComparer Compares two instances of IOrderedKeysProvider . An instance is smaller if it the only null instance or its path is smaller than the path of the other instance. Inheritance System.Object IOrderedKeysProviderComparer Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class IOrderedKeysProviderComparer : Comparer<IOrderedKeysProvider> Methods | Improve this Doc View Source Compare(IOrderedKeysProvider, IOrderedKeysProvider) Declaration public override int Compare(IOrderedKeysProvider x, IOrderedKeysProvider y) Parameters Type Name Description IOrderedKeysProvider x IOrderedKeysProvider y Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProviderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IOrderedKeysProviderExtensions.html",
    "title": "Class IOrderedKeysProviderExtensions | Documentations",
    "keywords": "Class IOrderedKeysProviderExtensions Inheritance System.Object IOrderedKeysProviderExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class IOrderedKeysProviderExtensions : object Methods | Improve this Doc View Source ThrowWhenNoSuccessivKey(IOrderedKeysProvider) Declaration public static int ThrowWhenNoSuccessivKey(this IOrderedKeysProvider provider) Parameters Type Name Description IOrderedKeysProvider provider Returns Type Description System.Int32 The amount of keys. | Improve this Doc View Source ToDependencyPath(IOrderedKeysProvider) Declaration public static string ToDependencyPath(this IOrderedKeysProvider provider) Parameters Type Name Description IOrderedKeysProvider provider Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IReadOnlyKeyValuePairCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IReadOnlyKeyValuePairCollectionExtensions.html",
    "title": "Class IReadOnlyKeyValuePairCollectionExtensions | Documentations",
    "keywords": "Class IReadOnlyKeyValuePairCollectionExtensions Inheritance System.Object IReadOnlyKeyValuePairCollectionExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class IReadOnlyKeyValuePairCollectionExtensions : object Methods | Improve this Doc View Source ToCovariantKeyValuePairCollection<KeyType, ValueType>(Nullable<IReadOnlyCollection<KeyValuePair<KeyType, ValueType>>>) Declaration public static CovariantKeyValuePairCollection<KeyType, ValueType> ToCovariantKeyValuePairCollection<KeyType, ValueType>(this IReadOnlyCollection<KeyValuePair<KeyType, ValueType>>? readOnlyCollection) Parameters Type Name Description System.Nullable < IReadOnlyCollection < KeyValuePair <KeyType, ValueType>>> readOnlyCollection Returns Type Description CovariantKeyValuePairCollection <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source ToCovariantKeyValuePairCollectionWithNullableKeys<KeyType, ValueType>(Nullable<IReadOnlyCollection<KeyValuePair<YetNullable<KeyType>, ValueType>>>) Declaration public static CovariantKeyValuePairCollection<YetNullable<KeyType>, ValueType> ToCovariantKeyValuePairCollectionWithNullableKeys<KeyType, ValueType>(this IReadOnlyCollection<KeyValuePair<YetNullable<KeyType>, ValueType>>? readOnlyCollection) Parameters Type Name Description System.Nullable < IReadOnlyCollection < KeyValuePair < YetNullable <KeyType>, ValueType>>> readOnlyCollection Returns Type Description CovariantKeyValuePairCollection < YetNullable <KeyType>, ValueType> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.IReadOnlyNullableKeyDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.IReadOnlyNullableKeyDictionary-2.html",
    "title": "Interface IReadOnlyNullableKeyDictionary<KeyType, ValueType> | Documentations",
    "keywords": "Interface IReadOnlyNullableKeyDictionary<KeyType, ValueType> Inherited Members ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Keys ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Values ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Count ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.TryGetValue(YetNullable<KeyType>) ICovariantReadOnlyDictionary<KeyType, ValueType>.Item[KeyType] ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys ICovariantReadOnlyDictionary<KeyType, ValueType>.Values ICovariantReadOnlyDictionary<KeyType, ValueType>.ContainsKey(KeyType) ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType) ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Item[YetNullable<KeyType>] ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.ContainsKey(YetNullable<KeyType>) ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType>) Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IReadOnlyNullableKeyDictionary<KeyType, ValueType> : IReadOnlyDictionary<KeyType, ValueType>, IReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IReadOnlyCollection<KeyValuePair<IYetNullable<KeyType>, ValueType>>, ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>, ICovariantReadOnlyDictionary<KeyType, ValueType>, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>>, ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IEnumerable<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IEnumerable Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[YetNullable<KeyType>] Declaration ValueType this[YetNullable<KeyType> key] { get; } Parameters Type Name Description YetNullable <KeyType> key Property Value Type Description ValueType | Improve this Doc View Source Keys Declaration ICollection<YetNullable<KeyType>> Keys { get; } Property Value Type Description ICollection < YetNullable <KeyType>> | Improve this Doc View Source Values Declaration ICollection<ValueType> Values { get; } Property Value Type Description ICollection <ValueType> Methods | Improve this Doc View Source ContainsKey(YetNullable<KeyType>) Declaration bool ContainsKey(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < YetNullable <KeyType>, ValueType>> | Improve this Doc View Source TryGetValue(YetNullable<KeyType>, out ValueType) Declaration bool TryGetValue(YetNullable<KeyType> key, out ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description System.Boolean Extension Methods NullableKeyDictionaryExtensions.AsReadOnlyDictionary<KeyType, ValueType>(IReadOnlyNullableKeyDictionary<KeyType, ValueType>) NullableKeyDictionaryExtensions.AsReadOnlyDictionaryWithNullableKeys<KeyType, ValueType>(IReadOnlyNullableKeyDictionary<KeyType, ValueType>) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorBase-3.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorBase-3.html",
    "title": "Class KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType> | Documentations",
    "keywords": "Class KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType> Inheritance System.Object KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType> KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public abstract class KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType> : IEnumerator<KeyValuePair<KeyType, ValueType>> Type Parameters Name Description CurrentType KeyType ValueType Constructors | Improve this Doc View Source KeyValuePairEnumeratorBase(IEnumerator<KeyValuePair<KeyType, ValueType>>) Declaration public KeyValuePairEnumeratorBase(IEnumerator<KeyValuePair<KeyType, ValueType>> enumerator) Parameters Type Name Description IEnumerator < KeyValuePair <KeyType, ValueType>> enumerator Properties | Improve this Doc View Source Current Declaration public CurrentType Current { get; } Property Value Type Description CurrentType Methods | Improve this Doc View Source CreateCurrent(KeyValuePair<KeyType, ValueType>) Declaration protected abstract CurrentType CreateCurrent(KeyValuePair<KeyType, ValueType> currentPair) Parameters Type Name Description KeyValuePair <KeyType, ValueType> currentPair Returns Type Description CurrentType | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean | Improve this Doc View Source Reset() Declaration public void Reset() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithConversionBase-3.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithConversionBase-3.html",
    "title": "Class KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> | Documentations",
    "keywords": "Class KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> Inheritance System.Object KeyValuePairEnumeratorBase <CurrentType, KeyType, ValueType> KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> Implements IEnumerator <CurrentType> Inherited Members KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>.Current KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>.CreateCurrent(KeyValuePair<KeyType, ValueType>) KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>.Dispose() KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>.MoveNext() KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>.Reset() Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public abstract class KeyValuePairEnumeratorWithConversionBase<CurrentType, KeyType, ValueType> : KeyValuePairEnumeratorBase<CurrentType, KeyType, ValueType>, IEnumerator<CurrentType> Type Parameters Name Description CurrentType KeyType ValueType Constructors | Improve this Doc View Source KeyValuePairEnumeratorWithConversionBase(IEnumerator<KeyValuePair<KeyType, ValueType>>) Declaration public KeyValuePairEnumeratorWithConversionBase(IEnumerator<KeyValuePair<KeyType, ValueType>> enumerator) Parameters Type Name Description IEnumerator < KeyValuePair <KeyType, ValueType>> enumerator Implements IEnumerator<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairAsCovariant-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairAsCovariant-2.html",
    "title": "Class KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> | Documentations",
    "keywords": "Class KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> Inheritance System.Object KeyValuePairEnumeratorBase < ICovariantKeyValuePair <KeyType, ValueType>, KeyType, ValueType> KeyValuePairEnumeratorWithConversionBase < ICovariantKeyValuePair <KeyType, ValueType>, KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> Implements IEnumerator < ICovariantKeyValuePair <KeyType, ValueType>> Inherited Members KeyValuePairEnumeratorBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.Current KeyValuePairEnumeratorBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.CreateCurrent(KeyValuePair<KeyType, ValueType>) KeyValuePairEnumeratorBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.Dispose() KeyValuePairEnumeratorBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.MoveNext() KeyValuePairEnumeratorBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.Reset() Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class KeyValuePairEnumeratorWithPairAsCovariant<KeyType, ValueType> : KeyValuePairEnumeratorWithConversionBase<ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>, IEnumerator<ICovariantKeyValuePair<KeyType, ValueType>> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source KeyValuePairEnumeratorWithPairAsCovariant(IEnumerator<KeyValuePair<KeyType, ValueType>>) Declaration public KeyValuePairEnumeratorWithPairAsCovariant(IEnumerator<KeyValuePair<KeyType, ValueType>> enumerator) Parameters Type Name Description IEnumerator < KeyValuePair <KeyType, ValueType>> enumerator Methods | Improve this Doc View Source CreateCurrent(KeyValuePair<KeyType, ValueType>) Declaration protected override ICovariantKeyValuePair<KeyType, ValueType> CreateCurrent(KeyValuePair<KeyType, ValueType> currentPair) Parameters Type Name Description KeyValuePair <KeyType, ValueType> currentPair Returns Type Description ICovariantKeyValuePair <KeyType, ValueType> Overrides Teronis.Collections.Generic.KeyValuePairEnumeratorBase<Teronis.Collections.Generic.ICovariantKeyValuePair<KeyType, ValueType>, KeyType, ValueType>.CreateCurrent(KeyValuePair<KeyType, ValueType>) Implements IEnumerator<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable-2.html",
    "title": "Class KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> | Documentations",
    "keywords": "Class KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> Inheritance System.Object KeyValuePairEnumeratorBase < ICovariantKeyValuePair < System.Nullable <KeyType>, ValueType>, KeyType, ValueType> KeyValuePairEnumeratorWithConversionBase < ICovariantKeyValuePair < System.Nullable <KeyType>, ValueType>, KeyType, ValueType> KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> Implements IEnumerator < ICovariantKeyValuePair < System.Nullable <KeyType>, ValueType>> Inherited Members KeyValuePairEnumeratorBase<ICovariantKeyValuePair<Nullable<KeyType>, ValueType>, KeyType, ValueType>.Current KeyValuePairEnumeratorBase<ICovariantKeyValuePair<Nullable<KeyType>, ValueType>, KeyType, ValueType>.CreateCurrent(KeyValuePair<KeyType, ValueType>) KeyValuePairEnumeratorBase<ICovariantKeyValuePair<Nullable<KeyType>, ValueType>, KeyType, ValueType>.Dispose() KeyValuePairEnumeratorBase<ICovariantKeyValuePair<Nullable<KeyType>, ValueType>, KeyType, ValueType>.MoveNext() KeyValuePairEnumeratorBase<ICovariantKeyValuePair<Nullable<KeyType>, ValueType>, KeyType, ValueType>.Reset() Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable<KeyType, ValueType> : KeyValuePairEnumeratorWithConversionBase<ICovariantKeyValuePair<KeyType?, ValueType>, KeyType, ValueType>, IEnumerator<ICovariantKeyValuePair<KeyType?, ValueType>> where KeyType : struct Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable(IEnumerator<KeyValuePair<KeyType, ValueType>>) Declaration public KeyValuePairEnumeratorWithPairAsCovariantHavingKeyAsNullable(IEnumerator<KeyValuePair<KeyType, ValueType>> enumerator) Parameters Type Name Description IEnumerator < KeyValuePair <KeyType, ValueType>> enumerator Methods | Improve this Doc View Source CreateCurrent(KeyValuePair<KeyType, ValueType>) Declaration protected override ICovariantKeyValuePair<KeyType?, ValueType> CreateCurrent(KeyValuePair<KeyType, ValueType> currentPair) Parameters Type Name Description KeyValuePair <KeyType, ValueType> currentPair Returns Type Description ICovariantKeyValuePair < System.Nullable <KeyType>, ValueType> Overrides Teronis.Collections.Generic.KeyValuePairEnumeratorBase<Teronis.Collections.Generic.ICovariantKeyValuePair<System.Nullable<KeyType>, ValueType>, KeyType, ValueType>.CreateCurrent(KeyValuePair<KeyType, ValueType>) Implements IEnumerator<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairHavingCovariantNullableKey-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.KeyValuePairEnumeratorWithPairHavingCovariantNullableKey-2.html",
    "title": "Class KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> | Documentations",
    "keywords": "Class KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> Inheritance System.Object KeyValuePairEnumeratorBase < KeyValuePair < IYetNullable <KeyType>, ValueType>, YetNullable <KeyType>, ValueType> KeyValuePairEnumeratorWithConversionBase < KeyValuePair < IYetNullable <KeyType>, ValueType>, YetNullable <KeyType>, ValueType> KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> Implements IEnumerator < KeyValuePair < IYetNullable <KeyType>, ValueType>> Inherited Members KeyValuePairEnumeratorBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>.Current KeyValuePairEnumeratorBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>.CreateCurrent(KeyValuePair<YetNullable<KeyType>, ValueType>) KeyValuePairEnumeratorBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>.Dispose() KeyValuePairEnumeratorBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>.MoveNext() KeyValuePairEnumeratorBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>.Reset() Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class KeyValuePairEnumeratorWithPairHavingCovariantNullableKey<KeyType, ValueType> : KeyValuePairEnumeratorWithConversionBase<KeyValuePair<IYetNullable<KeyType>, ValueType>, YetNullable<KeyType>, ValueType>, IEnumerator<KeyValuePair<IYetNullable<KeyType>, ValueType>> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source KeyValuePairEnumeratorWithPairHavingCovariantNullableKey(IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>>) Declaration public KeyValuePairEnumeratorWithPairHavingCovariantNullableKey(IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> enumerator) Parameters Type Name Description IEnumerator < KeyValuePair < YetNullable <KeyType>, ValueType>> enumerator Methods | Improve this Doc View Source CreateCurrent(KeyValuePair<YetNullable<KeyType>, ValueType>) Declaration protected override KeyValuePair<IYetNullable<KeyType>, ValueType> CreateCurrent(KeyValuePair<YetNullable<KeyType>, ValueType> currentPair) Parameters Type Name Description KeyValuePair < YetNullable <KeyType>, ValueType> currentPair Returns Type Description KeyValuePair < IYetNullable <KeyType>, ValueType> Overrides Teronis.Collections.Generic.KeyValuePairEnumeratorBase<KeyValuePair<Teronis.IYetNullable<KeyType>, ValueType>, Teronis.YetNullable<KeyType>, ValueType>.CreateCurrent(KeyValuePair<Teronis.YetNullable<KeyType>, ValueType>) Implements IEnumerator<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ListQueue-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ListQueue-1.html",
    "title": "Class ListQueue<T> | Documentations",
    "keywords": "Class ListQueue<T> Inheritance System.Object ListQueue<T> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class ListQueue<T> : List<T> Type Parameters Name Description T Methods | Improve this Doc View Source Peek() Declaration public T Peek() Returns Type Description T | Improve this Doc View Source Pop() Declaration public T Pop() Returns Type Description T | Improve this Doc View Source PopAndPush() Declaration public ListQueue<T> PopAndPush() Returns Type Description ListQueue <T> | Improve this Doc View Source Push(T) Declaration public T Push(T input) Parameters Type Name Description T input Returns Type Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyDictionary-2.html",
    "title": "Class NullableKeyDictionary<KeyType, ValueType> | Documentations",
    "keywords": "Class NullableKeyDictionary<KeyType, ValueType> Inheritance System.Object NullableKeyDictionary<KeyType, ValueType> Implements INullableKeyDictionary <KeyType, ValueType> IDictionary <KeyType, ValueType> IDictionary < YetNullable <KeyType>, ValueType> IReadOnlyNullableKeyDictionary <KeyType, ValueType> IReadOnlyDictionary <KeyType, ValueType> IReadOnlyDictionary < YetNullable <KeyType>, ValueType> IReadOnlyCollection < KeyValuePair < IYetNullable <KeyType>, ValueType>> ICovariantReadOnlyNullableKeyDictionary <KeyType, ValueType> ICovariantReadOnlyDictionary <KeyType, ValueType> IEnumerable < ICovariantKeyValuePair <KeyType, ValueType>> IReadOnlyCollection < ICovariantKeyValuePair <KeyType, ValueType>> ICovariantReadOnlyDictionary < YetNullable <KeyType>, ValueType> IEnumerable < ICovariantKeyValuePair < YetNullable <KeyType>, ValueType>> IReadOnlyCollection < ICovariantKeyValuePair < YetNullable <KeyType>, ValueType>> IEnumerable Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class NullableKeyDictionary<KeyType, ValueType> : object, INullableKeyDictionary<KeyType, ValueType>, IDictionary<KeyType, ValueType>, IDictionary<YetNullable<KeyType>, ValueType>, IReadOnlyNullableKeyDictionary<KeyType, ValueType>, IReadOnlyDictionary<KeyType, ValueType>, IReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IReadOnlyCollection<KeyValuePair<IYetNullable<KeyType>, ValueType>>, ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>, ICovariantReadOnlyDictionary<KeyType, ValueType>, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>>, ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IEnumerable<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IEnumerable Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source NullableKeyDictionary() Declaration public NullableKeyDictionary() | Improve this Doc View Source NullableKeyDictionary(IDictionary<KeyType, ValueType>) Declaration public NullableKeyDictionary(IDictionary<KeyType, ValueType> dictionary) Parameters Type Name Description IDictionary <KeyType, ValueType> dictionary | Improve this Doc View Source NullableKeyDictionary(IDictionary<KeyType, ValueType>, Nullable<IEqualityComparer<KeyType>>) Declaration public NullableKeyDictionary(IDictionary<KeyType, ValueType> dictionary, IEqualityComparer<KeyType>? comparer) Parameters Type Name Description IDictionary <KeyType, ValueType> dictionary System.Nullable < IEqualityComparer <KeyType>> comparer | Improve this Doc View Source NullableKeyDictionary(IEnumerable<KeyValuePair<KeyType, ValueType>>) Declaration public NullableKeyDictionary(IEnumerable<KeyValuePair<KeyType, ValueType>> collection) Parameters Type Name Description IEnumerable < KeyValuePair <KeyType, ValueType>> collection | Improve this Doc View Source NullableKeyDictionary(IEnumerable<KeyValuePair<KeyType, ValueType>>, Nullable<IEqualityComparer<KeyType>>) Declaration public NullableKeyDictionary(IEnumerable<KeyValuePair<KeyType, ValueType>> collection, IEqualityComparer<KeyType>? comparer) Parameters Type Name Description IEnumerable < KeyValuePair <KeyType, ValueType>> collection System.Nullable < IEqualityComparer <KeyType>> comparer | Improve this Doc View Source NullableKeyDictionary(Int32) Declaration public NullableKeyDictionary(int capacity) Parameters Type Name Description System.Int32 capacity | Improve this Doc View Source NullableKeyDictionary(Int32, Nullable<IEqualityComparer<KeyType>>) Declaration public NullableKeyDictionary(int capacity, IEqualityComparer<KeyType>? comparer) Parameters Type Name Description System.Int32 capacity System.Nullable < IEqualityComparer <KeyType>> comparer | Improve this Doc View Source NullableKeyDictionary(Nullable<IEqualityComparer<KeyType>>) Declaration public NullableKeyDictionary(IEqualityComparer<KeyType>? comparer) Parameters Type Name Description System.Nullable < IEqualityComparer <KeyType>> comparer Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[YetNullable<KeyType>] Declaration public ValueType this[YetNullable<KeyType> key] { get; set; } Parameters Type Name Description YetNullable <KeyType> key Property Value Type Description ValueType | Improve this Doc View Source Keys Declaration public ICollection<YetNullable<KeyType>> Keys { get; } Property Value Type Description ICollection < YetNullable <KeyType>> | Improve this Doc View Source Values Declaration public ICollection<ValueType> Values { get; } Property Value Type Description ICollection <ValueType> Methods | Improve this Doc View Source Add(ValueType) Declaration public void Add(ValueType value) Parameters Type Name Description ValueType value | Improve this Doc View Source Add(YetNullable<KeyType>, ValueType) Adds an element with the provided key and value to the INullableKeyDictionary<KeyType, ValueType> . Declaration public void Add(YetNullable<KeyType> key, ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source ContainsKey(YetNullable<KeyType>) Declaration public bool ContainsKey(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(KeyValuePair<KeyType, ValueType>[], Int32) Declaration public void CopyTo(KeyValuePair<KeyType, ValueType>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair <KeyType, ValueType>[] array System.Int32 arrayIndex | Improve this Doc View Source CopyTo(KeyValuePair<YetNullable<KeyType>, ValueType>[], Int32) Declaration public void CopyTo(KeyValuePair<YetNullable<KeyType>, ValueType>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair < YetNullable <KeyType>, ValueType>[] array System.Int32 arrayIndex | Improve this Doc View Source FindValue(YetNullable<KeyType>) Declaration public CovariantTuple<bool, ValueType> FindValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description CovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < YetNullable <KeyType>, ValueType>> | Improve this Doc View Source Remove() Declaration public bool Remove() Returns Type Description System.Boolean | Improve this Doc View Source Remove(YetNullable<KeyType>) Declaration public bool Remove(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue(YetNullable<KeyType>, out ValueType) Declaration public bool TryGetValue(YetNullable<KeyType> key, out ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.ContainsKey(KeyType) Declaration bool ICovariantReadOnlyDictionary<KeyType, ValueType>.ContainsKey(KeyType key) Parameters Type Name Description KeyType key Returns Type Description System.Boolean | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.Item[KeyType] Declaration ValueType ICovariantReadOnlyDictionary<KeyType, ValueType>.this[KeyType key] { get; } Parameters Type Name Description KeyType key Returns Type Description ValueType | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys Declaration IEnumerable<KeyType> ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys { get; } Returns Type Description IEnumerable <KeyType> | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType key) Parameters Type Name Description KeyType key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyDictionary<KeyType, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys Declaration IEnumerable<YetNullable<KeyType>> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys { get; } Returns Type Description IEnumerable < YetNullable <KeyType>> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType>) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Keys Declaration IEnumerable<KeyType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Keys { get; } Returns Type Description IEnumerable <KeyType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.TryGetValue(YetNullable<KeyType>) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.TryGetValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> Implements INullableKeyDictionary<KeyType, ValueType> IDictionary<, > IDictionary<, > IReadOnlyNullableKeyDictionary<KeyType, ValueType> IReadOnlyDictionary<, > IReadOnlyDictionary<, > IReadOnlyCollection<> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType> ICovariantReadOnlyDictionary<TKey, ValueType> IEnumerable<> IReadOnlyCollection<> ICovariantReadOnlyDictionary<TKey, ValueType> IEnumerable<> IReadOnlyCollection<> IEnumerable Extension Methods NullableKeyDictionaryExtensions.AsReadOnlyCollectionWithPairsHavingCovariantNullableKey<KeyType, ValueType>(NullableKeyDictionary<KeyType, ValueType>) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyDictionaryExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyDictionaryExtensions.html",
    "title": "Class NullableKeyDictionaryExtensions | Documentations",
    "keywords": "Class NullableKeyDictionaryExtensions Inheritance System.Object NullableKeyDictionaryExtensions Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class NullableKeyDictionaryExtensions : object Methods | Improve this Doc View Source AsReadOnlyCollectionWithPairsHavingCovariantNullableKey<KeyType, ValueType>(NullableKeyDictionary<KeyType, ValueType>) Declaration public static IReadOnlyCollection<KeyValuePair<IYetNullable<KeyType>, ValueType>>? AsReadOnlyCollectionWithPairsHavingCovariantNullableKey<KeyType, ValueType>(this NullableKeyDictionary<KeyType, ValueType> dictionary) Parameters Type Name Description NullableKeyDictionary <KeyType, ValueType> dictionary Returns Type Description System.Nullable < IReadOnlyCollection < KeyValuePair < IYetNullable <KeyType>, ValueType>>> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source AsReadOnlyDictionary<KeyType, ValueType>(IReadOnlyNullableKeyDictionary<KeyType, ValueType>) Declaration public static IReadOnlyDictionary<KeyType, ValueType>? AsReadOnlyDictionary<KeyType, ValueType>(this IReadOnlyNullableKeyDictionary<KeyType, ValueType> dictionary) Parameters Type Name Description IReadOnlyNullableKeyDictionary <KeyType, ValueType> dictionary Returns Type Description System.Nullable < IReadOnlyDictionary <KeyType, ValueType>> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source AsReadOnlyDictionaryWithNullableKeys<KeyType, ValueType>(IReadOnlyNullableKeyDictionary<KeyType, ValueType>) Declaration public static IReadOnlyDictionary<YetNullable<KeyType>, ValueType>? AsReadOnlyDictionaryWithNullableKeys<KeyType, ValueType>(this IReadOnlyNullableKeyDictionary<KeyType, ValueType> dictionary) Parameters Type Name Description IReadOnlyNullableKeyDictionary <KeyType, ValueType> dictionary Returns Type Description System.Nullable < IReadOnlyDictionary < YetNullable <KeyType>, ValueType>> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyEnumuerator-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.NullableKeyEnumuerator-2.html",
    "title": "Class NullableKeyEnumuerator<KeyType, ValueType> | Documentations",
    "keywords": "Class NullableKeyEnumuerator<KeyType, ValueType> Inheritance System.Object NullableKeyEnumuerator<KeyType, ValueType> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class NullableKeyEnumuerator<KeyType, ValueType> : IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source NullableKeyEnumuerator(IEnumerator<KeyValuePair<KeyType, ValueType>>, Nullable<KeyValuePair<YetNullable<KeyType>, ValueType>>) Declaration public NullableKeyEnumuerator(IEnumerator<KeyValuePair<KeyType, ValueType>> enumerator, KeyValuePair<YetNullable<KeyType>, ValueType>? nullableKeyValuePair) Parameters Type Name Description IEnumerator < KeyValuePair <KeyType, ValueType>> enumerator System.Nullable < KeyValuePair < YetNullable <KeyType>, ValueType>> nullableKeyValuePair Properties | Improve this Doc View Source Current Declaration public KeyValuePair<YetNullable<KeyType>, ValueType> Current { get; } Property Value Type Description KeyValuePair < YetNullable <KeyType>, ValueType> Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean | Improve this Doc View Source Reset() Declaration public void Reset() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeys.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeys.html",
    "title": "Class SuccessivKeys | Documentations",
    "keywords": "Class SuccessivKeys Inheritance System.Object SuccessivKeys Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public static class SuccessivKeys : object Methods | Improve this Doc View Source Retype<KeyType>(Nullable<Object>) Declaration public static KeyType Retype<KeyType>(object? key) Parameters Type Name Description System.Nullable < System.Object > key Returns Type Description KeyType Type Parameters Name Description KeyType | Improve this Doc View Source Retype<KeyType>(Nullable<Object>[], Int32) Declaration public static KeyType Retype<KeyType>(object? [] keys, int index) Parameters Type Name Description System.Nullable < System.Object >[] keys System.Int32 index Returns Type Description KeyType Retyped key. Type Parameters Name Description KeyType Exceptions Type Condition SuccessivKeysNonNullableKeyException Key type is not nullable although key is null."
  },
  "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeys-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeys-2.html",
    "title": "Struct SuccessivKeys<TKey1, TKey2> | Documentations",
    "keywords": "Struct SuccessivKeys<TKey1, TKey2> Implements IOrderedKeysProvider Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public struct SuccessivKeys<TKey1, TKey2> : IOrderedKeysProvider Type Parameters Name Description TKey1 TKey2 Constructors | Improve this Doc View Source SuccessivKeys(TKey1, TKey2) Declaration public SuccessivKeys(TKey1 key1, TKey2 key2) Parameters Type Name Description TKey1 key1 TKey2 key2 Properties | Improve this Doc View Source Key1 Declaration public TKey1 Key1 { get; } Property Value Type Description TKey1 | Improve this Doc View Source Key2 Declaration public TKey2 Key2 { get; } Property Value Type Description TKey2 | Improve this Doc View Source KeysLength Declaration public int KeysLength { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Deconstruct(out TKey1, out TKey2) Declaration public void Deconstruct(out TKey1 key1, out TKey2 key2) Parameters Type Name Description TKey1 key1 TKey2 key2 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Explicit Interface Implementations | Improve this Doc View Source IOrderedKeysProvider.GetOrderedKeys() Declaration IList<object?> IOrderedKeysProvider.GetOrderedKeys() Returns Type Description IList < System.Nullable < System.Object >> Implements IOrderedKeysProvider"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeysComparer-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeysComparer-2.html",
    "title": "Class SuccessivKeysComparer<TKey1, TKey2> | Documentations",
    "keywords": "Class SuccessivKeysComparer<TKey1, TKey2> Inheritance System.Object SuccessivKeysComparer<TKey1, TKey2> Implements IComparer < System.Nullable < SuccessivKeys <TKey1, TKey2>>> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class SuccessivKeysComparer<TKey1, TKey2> : Comparer<SuccessivKeys<TKey1, TKey2>>, IComparer<SuccessivKeys<TKey1, TKey2>?> Type Parameters Name Description TKey1 TKey2 Fields | Improve this Doc View Source Default Declaration public static SuccessivKeysComparer<TKey1, TKey2> Default Field Value Type Description SuccessivKeysComparer <TKey1, TKey2> Methods | Improve this Doc View Source Compare(Nullable<SuccessivKeys<TKey1, TKey2>>, Nullable<SuccessivKeys<TKey1, TKey2>>) Declaration public int Compare(SuccessivKeys<TKey1, TKey2>? x, SuccessivKeys<TKey1, TKey2>? y) Parameters Type Name Description System.Nullable < SuccessivKeys <TKey1, TKey2>> x System.Nullable < SuccessivKeys <TKey1, TKey2>> y Returns Type Description System.Int32 | Improve this Doc View Source Compare(SuccessivKeys<TKey1, TKey2>, SuccessivKeys<TKey1, TKey2>) Declaration public override int Compare(SuccessivKeys<TKey1, TKey2> x, SuccessivKeys<TKey1, TKey2> y) Parameters Type Name Description SuccessivKeys <TKey1, TKey2> x SuccessivKeys <TKey1, TKey2> y Returns Type Description System.Int32 Implements IComparer<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeysNonNullableKeyException.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.SuccessivKeysNonNullableKeyException.html",
    "title": "Class SuccessivKeysNonNullableKeyException | Documentations",
    "keywords": "Class SuccessivKeysNonNullableKeyException Inheritance System.Object SuccessivKeysNonNullableKeyException Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Collections.dll Syntax public class SuccessivKeysNonNullableKeyException : ArgumentException Constructors | Improve this Doc View Source SuccessivKeysNonNullableKeyException(Int32) Declaration public SuccessivKeysNonNullableKeyException(int keyIndex) Parameters Type Name Description System.Int32 keyIndex | Improve this Doc View Source SuccessivKeysNonNullableKeyException(Int32, Nullable<String>) Declaration public SuccessivKeysNonNullableKeyException(int keyIndex, string? message) Parameters Type Name Description System.Int32 keyIndex System.Nullable < System.String > message | Improve this Doc View Source SuccessivKeysNonNullableKeyException(Int32, Nullable<String>, Nullable<Exception>) Declaration public SuccessivKeysNonNullableKeyException(int keyIndex, string? message, Exception? innerException) Parameters Type Name Description System.Int32 keyIndex System.Nullable < System.String > message System.Nullable < Exception > innerException | Improve this Doc View Source SuccessivKeysNonNullableKeyException(Int32, Nullable<String>, Nullable<String>) Declaration public SuccessivKeysNonNullableKeyException(int keyIndex, string? message, string? paramName) Parameters Type Name Description System.Int32 keyIndex System.Nullable < System.String > message System.Nullable < System.String > paramName | Improve this Doc View Source SuccessivKeysNonNullableKeyException(Int32, Nullable<String>, Nullable<String>, Nullable<Exception>) Declaration public SuccessivKeysNonNullableKeyException(int keyIndex, string? message, string? paramName, Exception? innerException) Parameters Type Name Description System.Int32 keyIndex System.Nullable < System.String > message System.Nullable < System.String > paramName System.Nullable < Exception > innerException Properties | Improve this Doc View Source KeyIndex Declaration public int KeyIndex { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Generic.ValueIndexPair-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Generic.ValueIndexPair-1.html",
    "title": "Struct ValueIndexPair<T> | Documentations",
    "keywords": "Struct ValueIndexPair<T> Namespace : Teronis.Collections.Generic Assembly : Teronis.NetStandard.Core.dll Syntax public struct ValueIndexPair<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ValueIndexPair(T, Int32) Declaration public ValueIndexPair(T value, int index) Parameters Type Name Description T value System.Int32 index Properties | Improve this Doc View Source Index Declaration public int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Collections.html": {
    "href": "Teronis.DotNet/Teronis.Collections.html",
    "title": "Namespace Teronis.Collections | Documentations",
    "keywords": "Namespace Teronis.Collections Classes CollectionTools"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.html",
    "title": "Namespace Teronis.Collections.ObjectModel | Documentations",
    "keywords": "Namespace Teronis.Collections.ObjectModel Classes ObjectDispachEventArgs<ObjectType> ObjectEventDispatcher<ObjectType> ReadOnlyList<ItemType> ReadOnlyNullableDictionary<KeyType, ValueType> SortableKeyCollection<KeyType, ItemType>"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.ObjectDispachEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.ObjectDispachEventArgs-1.html",
    "title": "Class ObjectDispachEventArgs<ObjectType> | Documentations",
    "keywords": "Class ObjectDispachEventArgs<ObjectType> Inheritance System.Object ObjectDispachEventArgs<ObjectType> Namespace : Teronis.Collections.ObjectModel Assembly : Teronis.NetStandard.Collections.dll Syntax public class ObjectDispachEventArgs<ObjectType> : EventArgs Type Parameters Name Description ObjectType Constructors | Improve this Doc View Source ObjectDispachEventArgs(ObjectType) Declaration public ObjectDispachEventArgs(ObjectType object) Parameters Type Name Description ObjectType object Properties | Improve this Doc View Source Object Declaration public ObjectType Object { get; } Property Value Type Description ObjectType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.ObjectEventDispatcher-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.ObjectEventDispatcher-1.html",
    "title": "Class ObjectEventDispatcher<ObjectType> | Documentations",
    "keywords": "Class ObjectEventDispatcher<ObjectType> Inheritance System.Object ObjectEventDispatcher<ObjectType> Namespace : Teronis.Collections.ObjectModel Assembly : Teronis.NetStandard.Collections.dll Syntax public class ObjectEventDispatcher<ObjectType> : IDisposable Type Parameters Name Description ObjectType Methods | Improve this Doc View Source DispatchObject(ObjectType) Declaration public void DispatchObject(ObjectType object) Parameters Type Name Description ObjectType object | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() Events | Improve this Doc View Source ObjectDispatch Declaration public event EventHandler<ObjectDispachEventArgs<ObjectType>>? ObjectDispatch Event Type Type Description System.Nullable < EventHandler < ObjectDispachEventArgs <ObjectType>>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.ReadOnlyList-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.ReadOnlyList-1.html",
    "title": "Class ReadOnlyList<ItemType> | Documentations",
    "keywords": "Class ReadOnlyList<ItemType> Inheritance System.Object ReadOnlyList<ItemType> Implements IList <ItemType> IList Namespace : Teronis.Collections.ObjectModel Assembly : Teronis.NetStandard.Collections.dll Syntax public class ReadOnlyList<ItemType> : IReadOnlyList<ItemType>, IList<ItemType>, IList Type Parameters Name Description ItemType Constructors | Improve this Doc View Source ReadOnlyList(IReadOnlyList<ItemType>) Declaration public ReadOnlyList(IReadOnlyList<ItemType> readOnlyList) Parameters Type Name Description IReadOnlyList <ItemType> readOnlyList Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsSynchronized Declaration public virtual bool IsSynchronized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public ItemType this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ItemType Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ItemType> GetEnumerator() Returns Type Description IEnumerator <ItemType> Implements IList<> IList Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.ReadOnlyNullableDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.ReadOnlyNullableDictionary-2.html",
    "title": "Class ReadOnlyNullableDictionary<KeyType, ValueType> | Documentations",
    "keywords": "Class ReadOnlyNullableDictionary<KeyType, ValueType> Inheritance System.Object ReadOnlyNullableDictionary<KeyType, ValueType> Implements IReadOnlyNullableKeyDictionary <KeyType, ValueType> IReadOnlyDictionary <KeyType, ValueType> IReadOnlyDictionary < YetNullable <KeyType>, ValueType> IReadOnlyCollection < KeyValuePair < IYetNullable <KeyType>, ValueType>> ICovariantReadOnlyNullableKeyDictionary <KeyType, ValueType> ICovariantReadOnlyDictionary <KeyType, ValueType> IEnumerable < ICovariantKeyValuePair <KeyType, ValueType>> IReadOnlyCollection < ICovariantKeyValuePair <KeyType, ValueType>> ICovariantReadOnlyDictionary < YetNullable <KeyType>, ValueType> IEnumerable < ICovariantKeyValuePair < YetNullable <KeyType>, ValueType>> IReadOnlyCollection < ICovariantKeyValuePair < YetNullable <KeyType>, ValueType>> IEnumerable Namespace : Teronis.Collections.ObjectModel Assembly : Teronis.NetStandard.Collections.dll Syntax public class ReadOnlyNullableDictionary<KeyType, ValueType> : object, IReadOnlyNullableKeyDictionary<KeyType, ValueType>, IReadOnlyDictionary<KeyType, ValueType>, IReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IReadOnlyCollection<KeyValuePair<IYetNullable<KeyType>, ValueType>>, ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>, ICovariantReadOnlyDictionary<KeyType, ValueType>, IEnumerable<ICovariantKeyValuePair<KeyType, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<KeyType, ValueType>>, ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>, IEnumerable<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IReadOnlyCollection<ICovariantKeyValuePair<YetNullable<KeyType>, ValueType>>, IEnumerable Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source ReadOnlyNullableDictionary(INullableKeyDictionary<KeyType, ValueType>) Declaration public ReadOnlyNullableDictionary(INullableKeyDictionary<KeyType, ValueType> dictionary) Parameters Type Name Description INullableKeyDictionary <KeyType, ValueType> dictionary Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[KeyType] Declaration public ValueType this[KeyType key] { get; } Parameters Type Name Description KeyType key Property Value Type Description ValueType | Improve this Doc View Source Item[YetNullable<KeyType>] Declaration public ValueType this[YetNullable<KeyType> key] { get; } Parameters Type Name Description YetNullable <KeyType> key Property Value Type Description ValueType | Improve this Doc View Source Keys Declaration public ICollection<YetNullable<KeyType>> Keys { get; } Property Value Type Description ICollection < YetNullable <KeyType>> | Improve this Doc View Source Values Declaration public ICollection<ValueType> Values { get; } Property Value Type Description ICollection <ValueType> Methods | Improve this Doc View Source ContainsKey(KeyType) Declaration public bool ContainsKey(KeyType key) Parameters Type Name Description KeyType key Returns Type Description System.Boolean | Improve this Doc View Source ContainsKey(YetNullable<KeyType>) Declaration public bool ContainsKey(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<YetNullable<KeyType>, ValueType>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < YetNullable <KeyType>, ValueType>> | Improve this Doc View Source TryGetValue(KeyType, out ValueType) Declaration public bool TryGetValue(KeyType key, out ValueType value) Parameters Type Name Description KeyType key ValueType value Returns Type Description System.Boolean | Improve this Doc View Source TryGetValue(YetNullable<KeyType>, out ValueType) Declaration public bool TryGetValue(YetNullable<KeyType> key, out ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys Declaration IEnumerable<KeyType> ICovariantReadOnlyDictionary<KeyType, ValueType>.Keys { get; } Returns Type Description IEnumerable <KeyType> | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyDictionary<KeyType, ValueType>.TryGetValue(KeyType key) Parameters Type Name Description KeyType key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<KeyType, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyDictionary<KeyType, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys Declaration IEnumerable<YetNullable<KeyType>> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Keys { get; } Returns Type Description IEnumerable < YetNullable <KeyType>> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType>) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.TryGetValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyDictionary<YetNullable<KeyType>, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Keys Declaration IEnumerable<KeyType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Keys { get; } Returns Type Description IEnumerable <KeyType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.TryGetValue(YetNullable<KeyType>) Declaration ICovariantTuple<bool, ValueType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.TryGetValue(YetNullable<KeyType> key) Parameters Type Name Description YetNullable <KeyType> key Returns Type Description ICovariantTuple < System.Boolean , ValueType> | Improve this Doc View Source ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Values Declaration IEnumerable<ValueType> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType>.Values { get; } Returns Type Description IEnumerable <ValueType> Implements IReadOnlyNullableKeyDictionary<KeyType, ValueType> IReadOnlyDictionary<, > IReadOnlyDictionary<, > IReadOnlyCollection<> ICovariantReadOnlyNullableKeyDictionary<KeyType, ValueType> ICovariantReadOnlyDictionary<TKey, ValueType> IEnumerable<> IReadOnlyCollection<> ICovariantReadOnlyDictionary<TKey, ValueType> IEnumerable<> IReadOnlyCollection<> IEnumerable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.ObjectModel.SortableKeyCollection-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.ObjectModel.SortableKeyCollection-2.html",
    "title": "Class SortableKeyCollection<KeyType, ItemType> | Documentations",
    "keywords": "Class SortableKeyCollection<KeyType, ItemType> Inheritance System.Object SortableKeyCollection<KeyType, ItemType> Namespace : Teronis.Collections.ObjectModel Assembly : Teronis.NetStandard.Collections.dll Syntax public class SortableKeyCollection<KeyType, ItemType> : KeyedCollection<KeyType, ItemType> Type Parameters Name Description KeyType ItemType Constructors | Improve this Doc View Source SortableKeyCollection(Func<ItemType, KeyType>) Declaration public SortableKeyCollection(Func<ItemType, KeyType> getKeyForItemFunction) Parameters Type Name Description Func <ItemType, KeyType> getKeyForItemFunction | Improve this Doc View Source SortableKeyCollection(Func<ItemType, KeyType>, IEqualityComparer<KeyType>) Declaration public SortableKeyCollection(Func<ItemType, KeyType> getKeyForItemDelegate, IEqualityComparer<KeyType> comparer) Parameters Type Name Description Func <ItemType, KeyType> getKeyForItemDelegate IEqualityComparer <KeyType> comparer Methods | Improve this Doc View Source GetKeyForItem(ItemType) Declaration protected override KeyType GetKeyForItem(ItemType item) Parameters Type Name Description ItemType item Returns Type Description KeyType | Improve this Doc View Source Sort() Declaration public void Sort() | Improve this Doc View Source Sort(Comparison<ItemType>) Declaration public void Sort(Comparison<ItemType> comparison) Parameters Type Name Description Comparison <ItemType> comparison | Improve this Doc View Source Sort(IComparer<ItemType>) Declaration public void Sort(IComparer<ItemType> comparer) Parameters Type Name Description IComparer <ItemType> comparer | Improve this Doc View Source SortByKeys() Declaration public void SortByKeys() | Improve this Doc View Source SortByKeys(Comparison<KeyType>) Declaration public void SortByKeys(Comparison<KeyType> keyComparison) Parameters Type Name Description Comparison <KeyType> keyComparison | Improve this Doc View Source SortByKeys(IComparer<KeyType>) Declaration public void SortByKeys(IComparer<KeyType> keyComparer) Parameters Type Name Description IComparer <KeyType> keyComparer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.html",
    "title": "Namespace Teronis.Collections.Specialized | Documentations",
    "keywords": "Namespace Teronis.Collections.Specialized Classes ILinkedBucketListExtensions IndexDirectory IndexDirectoryEntry IReadOnlyLinkedBucketListExtensions LinkedBucketList<KeyType, ValueType> LinkedBucketListExtensions LinkedBucketListNode<KeyType, ValueType> LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart LinkedBucketListUtils OrderedDictionary<K, V> A dictionary object that allows rapid hash lookups using keys, but also maintains the key insertion order so that values can be retrieved by key index. OrderedDictionaryExtensions Interfaces ILinkedBucketList<KeyType, ValueType> IOrderedDictionary<TKey, TValue> IReadOnlyLinkedBucketList<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart Enums IndexDirectoryEntryMode"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.ILinkedBucketList-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.ILinkedBucketList-2.html",
    "title": "Interface ILinkedBucketList<KeyType, ValueType> | Documentations",
    "keywords": "Interface ILinkedBucketList<KeyType, ValueType> Inherited Members IReadOnlyLinkedBucketList<KeyType, ValueType>.Buckets IReadOnlyLinkedBucketList<KeyType, ValueType>.Count IReadOnlyLinkedBucketList<KeyType, ValueType>.First IReadOnlyLinkedBucketList<KeyType, ValueType>.IsBucket IReadOnlyLinkedBucketList<KeyType, ValueType>.Last IReadOnlyLinkedBucketList<KeyType, ValueType>.List IReadOnlyLinkedBucketList<KeyType, ValueType>.FindFirst(Predicate<ValueType>) IReadOnlyLinkedBucketList<KeyType, ValueType>.FindLast(Predicate<ValueType>) Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public interface ILinkedBucketList<KeyType, ValueType> : IReadOnlyLinkedBucketList<KeyType, ValueType>, IReadOnlyList<ValueType>, IEnumerable<ValueType> Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Buckets Declaration ICovariantReadOnlyNullableKeyDictionary<KeyType, ILinkedBucketList<KeyType, ValueType>> Buckets { get; } Property Value Type Description ICovariantReadOnlyNullableKeyDictionary <KeyType, ILinkedBucketList <KeyType, ValueType>> | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source First Declaration LinkedBucketListNode<KeyType, ValueType> First { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IsBucket Declaration bool IsBucket { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Last Declaration LinkedBucketListNode<KeyType, ValueType> Last { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source List Declaration ILinkedBucketList<KeyType, ValueType> List { get; } Property Value Type Description ILinkedBucketList <KeyType, ValueType> Methods | Improve this Doc View Source AddAfter(LinkedBucketListNode<KeyType, ValueType>, ValueType) Declaration LinkedBucketListNode<KeyType, ValueType> AddAfter(LinkedBucketListNode<KeyType, ValueType> node, ValueType value) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddAfter(LinkedBucketListNode<KeyType, ValueType>, LinkedBucketListNode<KeyType, ValueType>) Declaration void AddAfter(LinkedBucketListNode<KeyType, ValueType> node, LinkedBucketListNode<KeyType, ValueType> toBeInsertedNode) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node LinkedBucketListNode <KeyType, ValueType> toBeInsertedNode | Improve this Doc View Source AddBefore(LinkedBucketListNode<KeyType, ValueType>, ValueType) Declaration LinkedBucketListNode<KeyType, ValueType> AddBefore(LinkedBucketListNode<KeyType, ValueType> node, ValueType value) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddBefore(LinkedBucketListNode<KeyType, ValueType>, LinkedBucketListNode<KeyType, ValueType>) Declaration void AddBefore(LinkedBucketListNode<KeyType, ValueType> node, LinkedBucketListNode<KeyType, ValueType> toBeInsertedNode) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node LinkedBucketListNode <KeyType, ValueType> toBeInsertedNode | Improve this Doc View Source AddFirst(YetNullable<KeyType>, ValueType) Declaration LinkedBucketListNode<KeyType, ValueType> AddFirst(YetNullable<KeyType> key, ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddFirst(YetNullable<KeyType>, LinkedBucketListNode<KeyType, ValueType>) Declaration void AddFirst(YetNullable<KeyType> key, LinkedBucketListNode<KeyType, ValueType> node) Parameters Type Name Description YetNullable <KeyType> key LinkedBucketListNode <KeyType, ValueType> node | Improve this Doc View Source AddLast(YetNullable<KeyType>, ValueType) Declaration LinkedBucketListNode<KeyType, ValueType> AddLast(YetNullable<KeyType> key, ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddLast(YetNullable<KeyType>, LinkedBucketListNode<KeyType, ValueType>) Declaration void AddLast(YetNullable<KeyType> key, LinkedBucketListNode<KeyType, ValueType> node) Parameters Type Name Description YetNullable <KeyType> key LinkedBucketListNode <KeyType, ValueType> node | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source FindFirst(Predicate<ValueType>) Declaration LinkedBucketListNode<KeyType, ValueType> FindFirst(Predicate<ValueType> predicate) Parameters Type Name Description Predicate <ValueType> predicate Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source FindLast(Predicate<ValueType>) Declaration LinkedBucketListNode<KeyType, ValueType> FindLast(Predicate<ValueType> predicate) Parameters Type Name Description Predicate <ValueType> predicate Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source GetEnumerator() Declaration IEnumerator<ValueType> GetEnumerator() Returns Type Description IEnumerator <ValueType> | Improve this Doc View Source Remove(LinkedBucketListNode<KeyType, ValueType>, Boolean) Declaration void Remove(LinkedBucketListNode<KeyType, ValueType> node, bool preserveEmptyBucket = false) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node System.Boolean preserveEmptyBucket | Improve this Doc View Source RemoveFirst(Boolean) Declaration void RemoveFirst(bool preserveEmptyBucket = false) Parameters Type Name Description System.Boolean preserveEmptyBucket | Improve this Doc View Source RemoveLast(Boolean) Declaration void RemoveLast(bool preserveEmptyBucket = false) Parameters Type Name Description System.Boolean preserveEmptyBucket | Improve this Doc View Source TryGetBucket(YetNullable<KeyType>, out ILinkedBucketList<KeyType, ValueType>) Declaration bool TryGetBucket(YetNullable<KeyType> key, out ILinkedBucketList<KeyType, ValueType> bucket) Parameters Type Name Description YetNullable <KeyType> key ILinkedBucketList <KeyType, ValueType> bucket Returns Type Description System.Boolean Extension Methods ILinkedBucketListExtensions.FindFirst<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) ILinkedBucketListExtensions.FindFirst<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) ILinkedBucketListExtensions.FindLast<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) ILinkedBucketListExtensions.FindLast<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) IReadOnlyLinkedBucketListExtensions.FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) IReadOnlyLinkedBucketListExtensions.FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) IReadOnlyLinkedBucketListExtensions.FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) IReadOnlyLinkedBucketListExtensions.FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.ILinkedBucketListExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.ILinkedBucketListExtensions.html",
    "title": "Class ILinkedBucketListExtensions | Documentations",
    "keywords": "Class ILinkedBucketListExtensions Inheritance System.Object ILinkedBucketListExtensions Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public static class ILinkedBucketListExtensions : object Methods | Improve this Doc View Source FindFirst<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static LinkedBucketListNode<KeyType, ValueType> FindFirst<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> bucketList, ValueType value) Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> bucketList ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindFirst<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) Declaration public static LinkedBucketListNode<KeyType, ValueType> FindFirst<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> bucketList, ValueType value, IEqualityComparer<ValueType>? equalityComparer) Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> bucketList ValueType value System.Nullable < IEqualityComparer <ValueType>> equalityComparer Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindLast<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static LinkedBucketListNode<KeyType, ValueType> FindLast<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> bucketList, ValueType value) Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> bucketList ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindLast<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) Declaration public static LinkedBucketListNode<KeyType, ValueType> FindLast<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> bucketList, ValueType value, IEqualityComparer<ValueType>? equalityComparer) Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> bucketList ValueType value System.Nullable < IEqualityComparer <ValueType>> equalityComparer Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectory.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectory.html",
    "title": "Class IndexDirectory | Documentations",
    "keywords": "Class IndexDirectory Inheritance System.Object IndexDirectory Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public class IndexDirectory : object Constructors | Improve this Doc View Source IndexDirectory() Declaration public IndexDirectory() | Improve this Doc View Source IndexDirectory(Int32) Declaration public IndexDirectory(int capacity) Parameters Type Name Description System.Int32 capacity Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add() Declaration public IndexDirectoryEntry Add() Returns Type Description IndexDirectoryEntry | Improve this Doc View Source Add(Int32) Adds index next to same indexes of index and won't cause any index changes. Declaration public IndexDirectoryEntry Add(int index) Parameters Type Name Description System.Int32 index The to be added index. Returns Type Description IndexDirectoryEntry The index entry. | Improve this Doc View Source Add(Int32, IndexDirectoryEntryMode) Adds index next to same indexes of index and won't cause any index changes. Declaration public IndexDirectoryEntry Add(int index, IndexDirectoryEntryMode mode) Parameters Type Name Description System.Int32 index The to be added index. IndexDirectoryEntryMode mode Returns Type Description IndexDirectoryEntry The index entry. | Improve this Doc View Source Add(IndexDirectoryEntryMode) Declaration public IndexDirectoryEntry Add(IndexDirectoryEntryMode mode) Parameters Type Name Description IndexDirectoryEntryMode mode Returns Type Description IndexDirectoryEntry | Improve this Doc View Source AddEntry(IndexDirectoryEntry) Adds index next to same indexes of index and won't cause any index changes. Declaration public IndexDirectoryEntry AddEntry(IndexDirectoryEntry indexEntry) Parameters Type Name Description IndexDirectoryEntry indexEntry Returns Type Description IndexDirectoryEntry The index entry. | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Expand(Int32) Expands the index directory. Declaration public void Expand(int toIndex) Parameters Type Name Description System.Int32 toIndex The index to be used to expand index directory. | Improve this Doc View Source Insert(Int32) Inserts index between index - 1 and index and will cause to move existing indexes at index by one except floating indexes. Declaration public IndexDirectoryEntry Insert(int index) Parameters Type Name Description System.Int32 index The to be inserted index. Returns Type Description IndexDirectoryEntry The index entry. | Improve this Doc View Source Insert(Int32, IndexDirectoryEntryMode) Inserts index between index - 1 and index and will cause to move existing indexes at index by one except floating indexes. Declaration public IndexDirectoryEntry Insert(int index, IndexDirectoryEntryMode mode) Parameters Type Name Description System.Int32 index The to be inserted index. IndexDirectoryEntryMode mode The mode for the index. Returns Type Description IndexDirectoryEntry The index entry. | Improve this Doc View Source Move(Int32, Int32) Declaration public void Move(int fromIndex, int toIndex) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex | Improve this Doc View Source Move(Int32, Int32, Int32) Declaration public void Move(int fromIndex, int toIndex, int count) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source Remove(Int32) Removes index entry at index . Declaration public void Remove(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source Remove(Int32, Int32) Removes index entries that are in range of index and index + count - 1. Declaration public void Remove(int index, int count) Parameters Type Name Description System.Int32 index System.Int32 count | Improve this Doc View Source RemoveEntry(IndexDirectoryEntry) Declaration public bool RemoveEntry(IndexDirectoryEntry indexEntry) Parameters Type Name Description IndexDirectoryEntry indexEntry Returns Type Description System.Boolean | Improve this Doc View Source ReplaceEntry(IndexDirectoryEntry, Int32) Declaration public void ReplaceEntry(IndexDirectoryEntry indexEntry, int newIndex) Parameters Type Name Description IndexDirectoryEntry indexEntry System.Int32 newIndex | Improve this Doc View Source TrimEnd() Removes all null and empty lists at the end of this index directory. Declaration public void TrimEnd() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectoryEntry.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectoryEntry.html",
    "title": "Class IndexDirectoryEntry | Documentations",
    "keywords": "Class IndexDirectoryEntry Inheritance System.Object IndexDirectoryEntry Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public sealed class IndexDirectoryEntry : object Constructors | Improve this Doc View Source IndexDirectoryEntry(Int32, IndexDirectoryEntryMode) Declaration public IndexDirectoryEntry(int index, IndexDirectoryEntryMode mode) Parameters Type Name Description System.Int32 index IndexDirectoryEntryMode mode Properties | Improve this Doc View Source Index Declaration public int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Mode Declaration public IndexDirectoryEntryMode Mode { get; } Property Value Type Description IndexDirectoryEntryMode Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Implicit(IndexDirectoryEntry to Int32) Declaration public static implicit operator int (IndexDirectoryEntry entry) Parameters Type Name Description IndexDirectoryEntry entry Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectoryEntryMode.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IndexDirectoryEntryMode.html",
    "title": "Enum IndexDirectoryEntryMode | Documentations",
    "keywords": "Enum IndexDirectoryEntryMode Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public enum IndexDirectoryEntryMode : int Fields Name Description Floating Adding and removing other indexes affects own index as expected but other moving indexes increases own index always by one only if they cross own index. Normal"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IOrderedDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IOrderedDictionary-2.html",
    "title": "Interface IOrderedDictionary<TKey, TValue> | Documentations",
    "keywords": "Interface IOrderedDictionary<TKey, TValue> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IOrderedDictionary<TKey, TValue> : IDictionary<TKey, TValue>, IOrderedDictionary, IReadOnlyDictionary<TKey, TValue> Type Parameters Name Description TKey TValue Properties | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[TKey] Declaration TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue | Improve this Doc View Source Item[Int32] Declaration KeyValuePair<TKey, TValue> this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description KeyValuePair <TKey, TValue> | Improve this Doc View Source Keys Declaration ICollection<TKey> Keys { get; } Property Value Type Description ICollection <TKey> | Improve this Doc View Source Values Declaration ICollection<TValue> Values { get; } Property Value Type Description ICollection <TValue> Methods | Improve this Doc View Source Add(TKey, TValue) Declaration void Add(TKey key, TValue value) Parameters Type Name Description TKey key TValue value | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source ContainsKey(TKey) Declaration bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Boolean | Improve this Doc View Source ContainsValue(TValue) Declaration bool ContainsValue(TValue value) Parameters Type Name Description TValue value Returns Type Description System.Boolean | Improve this Doc View Source ContainsValue(TValue, IEqualityComparer<TValue>) Declaration bool ContainsValue(TValue value, IEqualityComparer<TValue> comparer) Parameters Type Name Description TValue value IEqualityComparer <TValue> comparer Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <TKey, TValue>> | Improve this Doc View Source GetItem(Int32) Declaration KeyValuePair<TKey, TValue> GetItem(int index) Parameters Type Name Description System.Int32 index Returns Type Description KeyValuePair <TKey, TValue> | Improve this Doc View Source GetValue(TKey) Declaration TValue GetValue(TKey key) Parameters Type Name Description TKey key Returns Type Description TValue | Improve this Doc View Source IndexOf(TKey) Declaration int IndexOf(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Int32 | Improve this Doc View Source Insert(Int32, TKey, TValue) Declaration void Insert(int index, TKey key, TValue value) Parameters Type Name Description System.Int32 index TKey key TValue value | Improve this Doc View Source Remove(TKey) Declaration bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description System.Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration void RemoveAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source SetItem(Int32, TValue) Declaration void SetItem(int index, TValue value) Parameters Type Name Description System.Int32 index TValue value | Improve this Doc View Source SetValue(TKey, TValue) Declaration void SetValue(TKey key, TValue value) Parameters Type Name Description TKey key TValue value | Improve this Doc View Source TryGetValue(TKey, out TValue) Declaration bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketList-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketList-2.html",
    "title": "Interface IReadOnlyLinkedBucketList<KeyType, ValueType> | Documentations",
    "keywords": "Interface IReadOnlyLinkedBucketList<KeyType, ValueType> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IReadOnlyLinkedBucketList<KeyType, out ValueType> : IEnumerable<ValueType> Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Buckets Declaration ICovariantReadOnlyNullableKeyDictionary<KeyType, IReadOnlyLinkedBucketList<KeyType, ValueType>> Buckets { get; } Property Value Type Description ICovariantReadOnlyNullableKeyDictionary <KeyType, IReadOnlyLinkedBucketList <KeyType, ValueType>> | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source First Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> First { get; } Property Value Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IsBucket Declaration bool IsBucket { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Last Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> Last { get; } Property Value Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source List Declaration IReadOnlyLinkedBucketList<KeyType, ValueType> List { get; } Property Value Type Description IReadOnlyLinkedBucketList <KeyType, ValueType> Methods | Improve this Doc View Source FindFirst(Predicate<ValueType>) Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindFirst(Predicate<ValueType> predicate) Parameters Type Name Description Predicate <ValueType> predicate Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source FindLast(Predicate<ValueType>) Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindLast(Predicate<ValueType> predicate) Parameters Type Name Description Predicate <ValueType> predicate Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> Extension Methods IReadOnlyLinkedBucketListExtensions.FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) IReadOnlyLinkedBucketListExtensions.FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) IReadOnlyLinkedBucketListExtensions.FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) IReadOnlyLinkedBucketListExtensions.FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListExtensions.html",
    "title": "Class IReadOnlyLinkedBucketListExtensions | Documentations",
    "keywords": "Class IReadOnlyLinkedBucketListExtensions Inheritance System.Object IReadOnlyLinkedBucketListExtensions Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public static class IReadOnlyLinkedBucketListExtensions : object Methods | Improve this Doc View Source FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindFirstReadOnly<KeyType, ValueType>(this IReadOnlyLinkedBucketList<KeyType, ValueType> bucketList, ValueType value) Parameters Type Name Description IReadOnlyLinkedBucketList <KeyType, ValueType> bucketList ValueType value Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindFirstReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) Declaration public static IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindFirstReadOnly<KeyType, ValueType>(this IReadOnlyLinkedBucketList<KeyType, ValueType> bucketList, ValueType value, IEqualityComparer<ValueType>? equalityComparer) Parameters Type Name Description IReadOnlyLinkedBucketList <KeyType, ValueType> bucketList ValueType value System.Nullable < IEqualityComparer <ValueType>> equalityComparer Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindLastReadOnly<KeyType, ValueType>(this IReadOnlyLinkedBucketList<KeyType, ValueType> bucketList, ValueType value) Parameters Type Name Description IReadOnlyLinkedBucketList <KeyType, ValueType> bucketList ValueType value Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source FindLastReadOnly<KeyType, ValueType>(IReadOnlyLinkedBucketList<KeyType, ValueType>, ValueType, Nullable<IEqualityComparer<ValueType>>) Declaration public static IReadOnlyLinkedBucketListNode<KeyType, ValueType> FindLastReadOnly<KeyType, ValueType>(this IReadOnlyLinkedBucketList<KeyType, ValueType> bucketList, ValueType value, IEqualityComparer<ValueType>? equalityComparer) Parameters Type Name Description IReadOnlyLinkedBucketList <KeyType, ValueType> bucketList ValueType value System.Nullable < IEqualityComparer <ValueType>> equalityComparer Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListNode-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListNode-2.html",
    "title": "Interface IReadOnlyLinkedBucketListNode<KeyType, ValueType> | Documentations",
    "keywords": "Interface IReadOnlyLinkedBucketListNode<KeyType, ValueType> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IReadOnlyLinkedBucketListNode<KeyType, out ValueType> Type Parameters Name Description KeyType ValueType Properties | Improve this Doc View Source Bucket Declaration IReadOnlyLinkedBucketList<KeyType, ValueType> Bucket { get; } Property Value Type Description IReadOnlyLinkedBucketList <KeyType, ValueType> | Improve this Doc View Source BucketPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart BucketPart { get; } Property Value Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> | Improve this Doc View Source Key Declaration IYetNullable<KeyType> Key { get; } Property Value Type Description IYetNullable <KeyType> | Improve this Doc View Source ListPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart ListPart { get; } Property Value Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> | Improve this Doc View Source Value Declaration ValueType Value { get; } Property Value Type Description ValueType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListNode-2.IReadOnlyLinkedBucketListNodePart.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.IReadOnlyLinkedBucketListNode-2.IReadOnlyLinkedBucketListNodePart.html",
    "title": "Interface IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart | Documentations",
    "keywords": "Interface IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public interface IReadOnlyLinkedBucketListNodePart Properties | Improve this Doc View Source Next Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> Next { get; } Property Value Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source NextPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart NextPart { get; } Property Value Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> | Improve this Doc View Source Owner Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> Owner { get; } Property Value Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source Previous Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> Previous { get; } Property Value Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source PreviousPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart PreviousPart { get; } Property Value Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketList-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketList-2.html",
    "title": "Class LinkedBucketList<KeyType, ValueType> | Documentations",
    "keywords": "Class LinkedBucketList<KeyType, ValueType> Inheritance System.Object LinkedBucketList<KeyType, ValueType> Implements ILinkedBucketList <KeyType, ValueType> IReadOnlyLinkedBucketList <KeyType, ValueType> IReadOnlyList <ValueType> IEnumerable <ValueType> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public class LinkedBucketList<KeyType, ValueType> : object, ILinkedBucketList<KeyType, ValueType>, IReadOnlyLinkedBucketList<KeyType, ValueType>, IReadOnlyList<ValueType>, IEnumerable<ValueType> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source LinkedBucketList() Declaration public LinkedBucketList() | Improve this Doc View Source LinkedBucketList(IEqualityComparer<KeyType>) Declaration public LinkedBucketList(IEqualityComparer<KeyType> equalityComparer) Parameters Type Name Description IEqualityComparer <KeyType> equalityComparer Properties | Improve this Doc View Source Buckets Declaration public ICovariantReadOnlyNullableKeyDictionary<KeyType, ILinkedBucketList<KeyType, ValueType>> Buckets { get; } Property Value Type Description ICovariantReadOnlyNullableKeyDictionary <KeyType, ILinkedBucketList <KeyType, ValueType>> | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source First Declaration public LinkedBucketListNode<KeyType, ValueType> First { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IsBucket Declaration public bool IsBucket { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public ValueType this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description ValueType | Improve this Doc View Source Last Declaration public LinkedBucketListNode<KeyType, ValueType> Last { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source List Declaration public ILinkedBucketList<KeyType, ValueType> List { get; } Property Value Type Description ILinkedBucketList <KeyType, ValueType> Methods | Improve this Doc View Source AddAfter(LinkedBucketListNode<KeyType, ValueType>, ValueType) Declaration public LinkedBucketListNode<KeyType, ValueType> AddAfter(LinkedBucketListNode<KeyType, ValueType> node, ValueType value) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddAfter(LinkedBucketListNode<KeyType, ValueType>, LinkedBucketListNode<KeyType, ValueType>) Declaration public void AddAfter(LinkedBucketListNode<KeyType, ValueType> node, LinkedBucketListNode<KeyType, ValueType> toBeInsertedNode) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node LinkedBucketListNode <KeyType, ValueType> toBeInsertedNode | Improve this Doc View Source AddBefore(LinkedBucketListNode<KeyType, ValueType>, ValueType) Declaration public LinkedBucketListNode<KeyType, ValueType> AddBefore(LinkedBucketListNode<KeyType, ValueType> node, ValueType value) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddBefore(LinkedBucketListNode<KeyType, ValueType>, LinkedBucketListNode<KeyType, ValueType>) Declaration public void AddBefore(LinkedBucketListNode<KeyType, ValueType> node, LinkedBucketListNode<KeyType, ValueType> toBeInsertedNode) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node LinkedBucketListNode <KeyType, ValueType> toBeInsertedNode | Improve this Doc View Source AddFirst(YetNullable<KeyType>, ValueType) Declaration public LinkedBucketListNode<KeyType, ValueType> AddFirst(YetNullable<KeyType> key, ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddFirst(YetNullable<KeyType>, LinkedBucketListNode<KeyType, ValueType>) Declaration public void AddFirst(YetNullable<KeyType> key, LinkedBucketListNode<KeyType, ValueType> node) Parameters Type Name Description YetNullable <KeyType> key LinkedBucketListNode <KeyType, ValueType> node | Improve this Doc View Source AddLast(YetNullable<KeyType>, ValueType) Declaration public LinkedBucketListNode<KeyType, ValueType> AddLast(YetNullable<KeyType> key, ValueType value) Parameters Type Name Description YetNullable <KeyType> key ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source AddLast(YetNullable<KeyType>, LinkedBucketListNode<KeyType, ValueType>) Declaration public void AddLast(YetNullable<KeyType> key, LinkedBucketListNode<KeyType, ValueType> node) Parameters Type Name Description YetNullable <KeyType> key LinkedBucketListNode <KeyType, ValueType> node | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source FindFirst(Predicate<ValueType>) Declaration public LinkedBucketListNode<KeyType, ValueType> FindFirst(Predicate<ValueType> value) Parameters Type Name Description Predicate <ValueType> value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source FindLast(Predicate<ValueType>) Declaration public LinkedBucketListNode<KeyType, ValueType> FindLast(Predicate<ValueType> value) Parameters Type Name Description Predicate <ValueType> value Returns Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ValueType> GetEnumerator() Returns Type Description IEnumerator <ValueType> | Improve this Doc View Source Remove(LinkedBucketListNode<KeyType, ValueType>, Boolean) Declaration public void Remove(LinkedBucketListNode<KeyType, ValueType> node, bool preserveEmptyBucket = false) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> node System.Boolean preserveEmptyBucket | Improve this Doc View Source RemoveFirst(Boolean) Declaration public void RemoveFirst(bool preserveEmptyBucket = false) Parameters Type Name Description System.Boolean preserveEmptyBucket | Improve this Doc View Source RemoveLast(Boolean) Declaration public void RemoveLast(bool preserveEmptyBucket = false) Parameters Type Name Description System.Boolean preserveEmptyBucket | Improve this Doc View Source TryGetBucket(YetNullable<KeyType>, out ILinkedBucketList<KeyType, ValueType>) Declaration public bool TryGetBucket(YetNullable<KeyType> key, out ILinkedBucketList<KeyType, ValueType> bucket) Parameters Type Name Description YetNullable <KeyType> key ILinkedBucketList <KeyType, ValueType> bucket Returns Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.Buckets Declaration ICovariantReadOnlyNullableKeyDictionary<KeyType, IReadOnlyLinkedBucketList<KeyType, ValueType>> IReadOnlyLinkedBucketList<KeyType, ValueType>.Buckets { get; } Returns Type Description ICovariantReadOnlyNullableKeyDictionary <KeyType, IReadOnlyLinkedBucketList <KeyType, ValueType>> | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.FindFirst(Predicate<ValueType>) Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType>.FindFirst(Predicate<ValueType> value) Parameters Type Name Description Predicate <ValueType> value Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.FindLast(Predicate<ValueType>) Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType>.FindLast(Predicate<ValueType> value) Parameters Type Name Description Predicate <ValueType> value Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.First Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType>.First { get; } Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.Last Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType>.Last { get; } Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketList<KeyType, ValueType>.List Declaration IReadOnlyLinkedBucketList<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType>.List { get; } Returns Type Description IReadOnlyLinkedBucketList <KeyType, ValueType> Implements ILinkedBucketList<KeyType, ValueType> IReadOnlyLinkedBucketList<KeyType, ValueType> IReadOnlyList<> IEnumerable<> Extension Methods LinkedBucketListExtensions.Add<KeyType, ValueType>(LinkedBucketList<KeyType, ValueType>, KeyType, ValueType) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListExtensions.html",
    "title": "Class LinkedBucketListExtensions | Documentations",
    "keywords": "Class LinkedBucketListExtensions Inheritance System.Object LinkedBucketListExtensions Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public static class LinkedBucketListExtensions : object Methods | Improve this Doc View Source Add<KeyType, ValueType>(LinkedBucketList<KeyType, ValueType>, KeyType, ValueType) Declaration public static void Add<KeyType, ValueType>(this LinkedBucketList<KeyType, ValueType> list, KeyType key, ValueType value) Parameters Type Name Description LinkedBucketList <KeyType, ValueType> list KeyType key ValueType value Type Parameters Name Description KeyType ValueType | Improve this Doc View Source AddFirst<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static LinkedBucketListNode<KeyType, ValueType> AddFirst<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> list, ValueType value) where ValueType : KeyType Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> list ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source AddLast<KeyType, ValueType>(ILinkedBucketList<KeyType, ValueType>, ValueType) Declaration public static LinkedBucketListNode<KeyType, ValueType> AddLast<KeyType, ValueType>(this ILinkedBucketList<KeyType, ValueType> list, ValueType value) where ValueType : KeyType Parameters Type Name Description ILinkedBucketList <KeyType, ValueType> list ValueType value Returns Type Description LinkedBucketListNode <KeyType, ValueType> Type Parameters Name Description KeyType ValueType | Improve this Doc View Source GetEnumerableButReversed<KeyType, ValueType>(LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart) Declaration public static IEnumerable<LinkedBucketListNode<KeyType, ValueType>> GetEnumerableButReversed<KeyType, ValueType>(this LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart node) where ValueType : KeyType Parameters Type Name Description LinkedBucketListNode.LinkedBucketListNodePart <> node Returns Type Description IEnumerable < LinkedBucketListNode <KeyType, ValueType>> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListNode-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListNode-2.html",
    "title": "Class LinkedBucketListNode<KeyType, ValueType> | Documentations",
    "keywords": "Class LinkedBucketListNode<KeyType, ValueType> Inheritance System.Object LinkedBucketListNode<KeyType, ValueType> Implements IReadOnlyLinkedBucketListNode <KeyType, ValueType> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public sealed class LinkedBucketListNode<KeyType, ValueType> : object, IReadOnlyLinkedBucketListNode<KeyType, ValueType> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source LinkedBucketListNode(ValueType) Declaration public LinkedBucketListNode(ValueType value) Parameters Type Name Description ValueType value Properties | Improve this Doc View Source Bucket Declaration public ILinkedBucketList<KeyType, ValueType> Bucket { get; } Property Value Type Description ILinkedBucketList <KeyType, ValueType> | Improve this Doc View Source BucketPart Declaration public LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart BucketPart { get; } Property Value Type Description LinkedBucketListNode.LinkedBucketListNodePart <> | Improve this Doc View Source Key Declaration public YetNullable<KeyType> Key { get; } Property Value Type Description YetNullable <KeyType> | Improve this Doc View Source ListPart Declaration public LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart ListPart { get; } Property Value Type Description LinkedBucketListNode.LinkedBucketListNodePart <> | Improve this Doc View Source Value Declaration public ValueType Value { get; set; } Property Value Type Description ValueType Explicit Interface Implementations | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.Bucket Declaration IReadOnlyLinkedBucketList<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.Bucket { get; } Returns Type Description IReadOnlyLinkedBucketList <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.BucketPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart IReadOnlyLinkedBucketListNode<KeyType, ValueType>.BucketPart { get; } Returns Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.Key Declaration IYetNullable<KeyType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.Key { get; } Returns Type Description IYetNullable <KeyType> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.ListPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart IReadOnlyLinkedBucketListNode<KeyType, ValueType>.ListPart { get; } Returns Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> Implements IReadOnlyLinkedBucketListNode<KeyType, ValueType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListNode-2.LinkedBucketListNodePart.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListNode-2.LinkedBucketListNodePart.html",
    "title": "Class LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart | Documentations",
    "keywords": "Class LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart Inheritance System.Object LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart Implements IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public abstract class LinkedBucketListNodePart : object, IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart Constructors | Improve this Doc View Source LinkedBucketListNodePart(LinkedBucketListNode<KeyType, ValueType>) Declaration public LinkedBucketListNodePart(LinkedBucketListNode<KeyType, ValueType> owner) Parameters Type Name Description LinkedBucketListNode <KeyType, ValueType> owner Properties | Improve this Doc View Source Next Declaration public LinkedBucketListNode<KeyType, ValueType> Next { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source NextPart Declaration public abstract LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart NextPart { get; } Property Value Type Description LinkedBucketListNode.LinkedBucketListNodePart <> | Improve this Doc View Source Owner Declaration public LinkedBucketListNode<KeyType, ValueType> Owner { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source Previous Declaration public LinkedBucketListNode<KeyType, ValueType> Previous { get; } Property Value Type Description LinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source PreviousPart Declaration public abstract LinkedBucketListNode<KeyType, ValueType>.LinkedBucketListNodePart PreviousPart { get; } Property Value Type Description LinkedBucketListNode.LinkedBucketListNodePart <> Methods | Improve this Doc View Source Invalidate() Declaration public void Invalidate() Explicit Interface Implementations | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Next Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Next { get; } Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.NextPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.NextPart { get; } Returns Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Owner Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Owner { get; } Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Previous Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType> IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.Previous { get; } Returns Type Description IReadOnlyLinkedBucketListNode <KeyType, ValueType> | Improve this Doc View Source IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.PreviousPart Declaration IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart.PreviousPart { get; } Returns Type Description IReadOnlyLinkedBucketListNode.IReadOnlyLinkedBucketListNodePart <> Implements IReadOnlyLinkedBucketListNode<KeyType, ValueType>.IReadOnlyLinkedBucketListNodePart Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListUtils.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.LinkedBucketListUtils.html",
    "title": "Class LinkedBucketListUtils | Documentations",
    "keywords": "Class LinkedBucketListUtils Inheritance System.Object LinkedBucketListUtils Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public static class LinkedBucketListUtils : object Methods | Improve this Doc View Source YieldNodesReversed<KeyType, ItemType>(LinkedBucketListNode<KeyType, ItemType>) Declaration public static IEnumerable<LinkedBucketListNode<KeyType, ItemType>> YieldNodesReversed<KeyType, ItemType>(LinkedBucketListNode<KeyType, ItemType> node) Parameters Type Name Description LinkedBucketListNode <KeyType, ItemType> node Returns Type Description IEnumerable < LinkedBucketListNode <KeyType, ItemType>> Type Parameters Name Description KeyType ItemType"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.OrderedDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.OrderedDictionary-2.html",
    "title": "Class OrderedDictionary<K, V> | Documentations",
    "keywords": "Class OrderedDictionary<K, V> A dictionary object that allows rapid hash lookups using keys, but also maintains the key insertion order so that values can be retrieved by key index. Inheritance System.Object OrderedDictionary<K, V> Implements IOrderedDictionary <K, V> IDictionary <K, V> Teronis.Collections.Specialized.IOrderedDictionary IReadOnlyDictionary <K, V> Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public class OrderedDictionary<K, V> : object, IOrderedDictionary<K, V>, IDictionary<K, V>, IOrderedDictionary, IReadOnlyDictionary<K, V> Type Parameters Name Description K V Remarks Similar to the way a DataColumn is indexed by column position and by column name, this advanced dictionary construct allows for a very natural and robust handling of indexed structured data. Constructors | Improve this Doc View Source OrderedDictionary() Declaration public OrderedDictionary() | Improve this Doc View Source OrderedDictionary(IEnumerable<KeyValuePair<K, V>>) Declaration public OrderedDictionary(IEnumerable<KeyValuePair<K, V>> items) Parameters Type Name Description IEnumerable < KeyValuePair <K, V>> items | Improve this Doc View Source OrderedDictionary(IEnumerable<KeyValuePair<K, V>>, IEqualityComparer<K>) Declaration public OrderedDictionary(IEnumerable<KeyValuePair<K, V>> items, IEqualityComparer<K> comparer) Parameters Type Name Description IEnumerable < KeyValuePair <K, V>> items IEqualityComparer <K> comparer | Improve this Doc View Source OrderedDictionary(IEqualityComparer<K>) Declaration public OrderedDictionary(IEqualityComparer<K> comparer) Parameters Type Name Description IEqualityComparer <K> comparer | Improve this Doc View Source OrderedDictionary(IOrderedDictionary<K, V>) Declaration public OrderedDictionary(IOrderedDictionary<K, V> dictionary) Parameters Type Name Description IOrderedDictionary <K, V> dictionary | Improve this Doc View Source OrderedDictionary(IOrderedDictionary<K, V>, IEqualityComparer<K>) Declaration public OrderedDictionary(IOrderedDictionary<K, V> dictionary, IEqualityComparer<K> comparer) Parameters Type Name Description IOrderedDictionary <K, V> dictionary IEqualityComparer <K> comparer Properties | Improve this Doc View Source Comparer Gets the key comparer for this dictionary Declaration public IEqualityComparer<K>? Comparer { get; } Property Value Type Description System.Nullable < IEqualityComparer <K>> | Improve this Doc View Source Count Gets the number of items in the dictionary Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[K] Gets or sets the value associated with the specified key. Declaration public V this[K key] { get; set; } Parameters Type Name Description K key The key associated with the value to get or set. Property Value Type Description V | Improve this Doc View Source Item[Int32] Gets or sets the value at the specified index. Declaration public KeyValuePair<K, V> this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index of the value to get or set. Property Value Type Description KeyValuePair <K, V> | Improve this Doc View Source Keys Gets all the keys in the ordered dictionary in their proper order. Declaration public ICollection<K> Keys { get; } Property Value Type Description ICollection <K> | Improve this Doc View Source Values Gets all the values in the ordered dictionary in their proper order. Declaration public ICollection<V> Values { get; } Property Value Type Description ICollection <V> Methods | Improve this Doc View Source Add(K, V) Adds the specified key and value to the dictionary. Declaration public void Add(K key, V value) Parameters Type Name Description K key The key of the element to add. V value The value of the element to add. The value can be null for reference types. | Improve this Doc View Source AsReadOnly() Declaration public ReadOnlyDictionary<K, V> AsReadOnly() Returns Type Description ReadOnlyDictionary <K, V> | Improve this Doc View Source Clear() Removes all keys and values from this object. Declaration public void Clear() | Improve this Doc View Source ContainsKey(K) Determines whether this object contains the specified key. Declaration public bool ContainsKey(K key) Parameters Type Name Description K key The key to locate in this object. Returns Type Description System.Boolean True if the key is found. False otherwise. | Improve this Doc View Source ContainsValue(V) Determines whether this object contains the specified value. Declaration public bool ContainsValue(V value) Parameters Type Name Description V value The value to locate in this object. Returns Type Description System.Boolean True if the value is found. False otherwise. | Improve this Doc View Source ContainsValue(V, IEqualityComparer<V>) Determines whether this object contains the specified value. Declaration public bool ContainsValue(V value, IEqualityComparer<V> comparer) Parameters Type Name Description V value The value to locate in this object. IEqualityComparer <V> comparer The equality comparer used to locate the specified value in this object. Returns Type Description System.Boolean True if the value is found. False otherwise. | Improve this Doc View Source GetEnumerator() Returns an enumerator that iterates through all the KeyValuePairs in this object. Declaration public IEnumerator<KeyValuePair<K, V>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <K, V>> | Improve this Doc View Source GetItem(Int32) Returns the KeyValuePair at the index specified. Declaration public KeyValuePair<K, V> GetItem(int index) Parameters Type Name Description System.Int32 index The index of the KeyValuePair desired Returns Type Description KeyValuePair <K, V> | Improve this Doc View Source GetValue(K) Gets the value associated with the specified key. Declaration public V GetValue(K key) Parameters Type Name Description K key The key associated with the value to get. Returns Type Description V | Improve this Doc View Source IndexOf(K) Gets the index of the key specified. Declaration public int IndexOf(K key) Parameters Type Name Description K key The key whose index will be located Returns Type Description System.Int32 Returns the index of the key specified if found. Returns -1 if the key could not be located. | Improve this Doc View Source Insert(Int32, K, V) Inserts a new key-value pair at the index specified. Declaration public void Insert(int index, K key, V value) Parameters Type Name Description System.Int32 index The insertion index. This value must be between 0 and the count of items in this object. K key A unique key for the element to add V value The value of the element to add. Can be null for reference types. | Improve this Doc View Source Insert(Int32, KeyValuePair<K, V>) Declaration public void Insert(int index, KeyValuePair<K, V> pair) Parameters Type Name Description System.Int32 index KeyValuePair <K, V> pair | Improve this Doc View Source Remove(K) Removes the key-value pair for the specified key. Declaration public bool Remove(K key) Parameters Type Name Description K key The key to remove from the dictionary. Returns Type Description System.Boolean True if the item specified existed and the removal was successful. False otherwise. | Improve this Doc View Source RemoveAt(Int32) Removes the key-value pair at the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index The index of the key-value pair to remove from the dictionary. | Improve this Doc View Source SetItem(Int32, V) Sets the value at the index specified. Declaration public void SetItem(int index, V value) Parameters Type Name Description System.Int32 index The index of the value desired V value The value to set | Improve this Doc View Source SetValue(K, V) Sets the value associated with the specified key. Declaration public void SetValue(K key, V value) Parameters Type Name Description K key The key associated with the value to set. V value The the value to set. | Improve this Doc View Source SortKeys() Declaration public void SortKeys() | Improve this Doc View Source SortKeys(Comparison<K>) Declaration public void SortKeys(Comparison<K> comparison) Parameters Type Name Description Comparison <K> comparison | Improve this Doc View Source SortKeys(IComparer<K>) Declaration public void SortKeys(IComparer<K> comparer) Parameters Type Name Description IComparer <K> comparer | Improve this Doc View Source SortValues() Declaration public void SortValues() | Improve this Doc View Source SortValues(Comparison<V>) Declaration public void SortValues(Comparison<V> comparison) Parameters Type Name Description Comparison <V> comparison | Improve this Doc View Source SortValues(IComparer<V>) Declaration public void SortValues(IComparer<V> comparer) Parameters Type Name Description IComparer <V> comparer | Improve this Doc View Source TryGetValue(K, out V) Tries to get the value associated with the specified key. Declaration public bool TryGetValue(K key, out V value) Parameters Type Name Description K key The key of the desired element. V value When this method returns, contains the value associated with the specified key if that key was found. Otherwise it will contain the default value for parameter's type. This parameter should be provided uninitialized. Returns Type Description System.Boolean True if the value was found. False otherwise. Implements IOrderedDictionary<TKey, TValue> IDictionary<, > Teronis.Collections.Specialized.IOrderedDictionary IReadOnlyDictionary<, > Extension Methods OrderedDictionaryExtensions.Swap<K, V>(OrderedDictionary<K, V>, Int32, Int32) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Specialized.OrderedDictionaryExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Specialized.OrderedDictionaryExtensions.html",
    "title": "Class OrderedDictionaryExtensions | Documentations",
    "keywords": "Class OrderedDictionaryExtensions Inheritance System.Object OrderedDictionaryExtensions Namespace : Teronis.Collections.Specialized Assembly : Teronis.NetStandard.Collections.dll Syntax public static class OrderedDictionaryExtensions : object Methods | Improve this Doc View Source Swap<K, V>(OrderedDictionary<K, V>, Int32, Int32) Declaration public static bool Swap<K, V>(this OrderedDictionary<K, V> source, int fromIndex, int toIndex) Parameters Type Name Description OrderedDictionary <K, V> source System.Int32 fromIndex System.Int32 toIndex Returns Type Description System.Boolean Type Parameters Name Description K V"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.AddRemoveResetBehaviourForCollectionItemByAddRemoveParents-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.AddRemoveResetBehaviourForCollectionItemByAddRemoveParents-2.html",
    "title": "Class AddRemoveResetBehaviourForCollectionItemByAddRemoveParents<ContentType, ItemType> | Documentations",
    "keywords": "Class AddRemoveResetBehaviourForCollectionItemByAddRemoveParents<ContentType, ItemType> Inheritance System.Object AddRemoveResetBehaviourForCollectionItemByAddRemoveParents<ContentType, ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class AddRemoveResetBehaviourForCollectionItemByAddRemoveParents<ContentType, ItemType> : object where ItemType : IHaveParents Type Parameters Name Description ContentType ItemType Constructors | Improve this Doc View Source AddRemoveResetBehaviourForCollectionItemByAddRemoveParents(INotifyCollectionModification<ContentType, ItemType>, Boolean) Declaration public AddRemoveResetBehaviourForCollectionItemByAddRemoveParents(INotifyCollectionModification<ContentType, ItemType> collectionModifiedNotifier, bool collectionModifiedNotifierIsParent) Parameters Type Name Description INotifyCollectionModification <ContentType, ItemType> collectionModifiedNotifier System.Boolean collectionModifiedNotifierIsParent | Improve this Doc View Source AddRemoveResetBehaviourForCollectionItemByAddRemoveParents(INotifyCollectionModification<ContentType, ItemType>, Object[]) Declaration public AddRemoveResetBehaviourForCollectionItemByAddRemoveParents(INotifyCollectionModification<ContentType, ItemType> collectionModifiedNotifier, params object[] parents) Parameters Type Name Description INotifyCollectionModification <ContentType, ItemType> collectionModifiedNotifier System.Object [] parents Properties | Improve this Doc View Source CollectionModifiedNotifier Declaration public INotifyCollectionModification<ContentType, ItemType> CollectionModifiedNotifier { get; } Property Value Type Description INotifyCollectionModification <ContentType, ItemType> | Improve this Doc View Source Parents Declaration public ReadOnlyCollection<object> Parents { get; } Property Value Type Description ReadOnlyCollection < System.Object > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DecoupledHandler.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DecoupledHandler.html",
    "title": "Class CollectionChangeHandler<ItemType>.DecoupledHandler | Documentations",
    "keywords": "Class CollectionChangeHandler<ItemType>.DecoupledHandler Inheritance System.Object CollectionChangeHandler<ItemType>.DecoupledHandler CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler Implements CollectionChangeHandler.IDecoupledHandler <> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class DecoupledHandler : object, CollectionChangeHandler<ItemType>.IDecoupledHandler Fields | Improve this Doc View Source Default Declaration public static CollectionChangeHandler<ItemType>.DecoupledHandler Default Field Value Type Description CollectionChangeHandler.DecoupledHandler <> Properties | Improve this Doc View Source CanReplaceItem Declaration public virtual bool CanReplaceItem { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source InsertItem(IList<ItemType>, Int32, ItemType) Declaration public virtual void InsertItem(IList<ItemType> list, int insertAt, ItemType item) Parameters Type Name Description IList <ItemType> list System.Int32 insertAt ItemType item | Improve this Doc View Source MoveItems(IList<ItemType>, Int32, Int32, Int32) Declaration public virtual void MoveItems(IList<ItemType> list, int fromIndex, int toIndex, int count) Parameters Type Name Description IList <ItemType> list System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source RemoveItem(IList<ItemType>, Int32) Declaration public virtual void RemoveItem(IList<ItemType> list, int removeAt) Parameters Type Name Description IList <ItemType> list System.Int32 removeAt | Improve this Doc View Source ReplaceItem(IList<ItemType>, Int32, Func<ItemType>) Declaration public virtual void ReplaceItem(IList<ItemType> list, int replaceAt, Func<ItemType> superItem) Parameters Type Name Description IList <ItemType> list System.Int32 replaceAt Func <ItemType> superItem | Improve this Doc View Source Reset(IList<ItemType>) Declaration public virtual void Reset(IList<ItemType> list) Parameters Type Name Description IList <ItemType> list Implements CollectionChangeHandler<ItemType>.IDecoupledHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DecoupledItemReplacingHandler.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DecoupledItemReplacingHandler.html",
    "title": "Class CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler | Documentations",
    "keywords": "Class CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler Inheritance System.Object CollectionChangeHandler.DecoupledHandler <> CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler Implements CollectionChangeHandler.IDecoupledHandler <> Inherited Members CollectionChangeHandler<ItemType>.DecoupledHandler.InsertItem(IList<ItemType>, Int32, ItemType) CollectionChangeHandler<ItemType>.DecoupledHandler.RemoveItem(IList<ItemType>, Int32) CollectionChangeHandler<ItemType>.DecoupledHandler.MoveItems(IList<ItemType>, Int32, Int32, Int32) CollectionChangeHandler<ItemType>.DecoupledHandler.Reset(IList<ItemType>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class DecoupledItemReplacingHandler : CollectionChangeHandler<ItemType>.DecoupledHandler, CollectionChangeHandler<ItemType>.IDecoupledHandler Fields | Improve this Doc View Source Default Declaration public static CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler Default Field Value Type Description CollectionChangeHandler.DecoupledItemReplacingHandler <> Properties | Improve this Doc View Source CanReplaceItem Declaration public override bool CanReplaceItem { get; } Property Value Type Description System.Boolean Overrides CollectionChangeHandler<ItemType>.DecoupledHandler.CanReplaceItem Methods | Improve this Doc View Source ReplaceItem(IList<ItemType>, Int32, Func<ItemType>) Declaration public override void ReplaceItem(IList<ItemType> list, int replaceAt, Func<ItemType> getItem) Parameters Type Name Description IList <ItemType> list System.Int32 replaceAt Func <ItemType> getItem Overrides Teronis.Collections.Synchronization.CollectionChangeHandler<ItemType>.DecoupledHandler.ReplaceItem(IList<ItemType>, System.Int32, Func<ItemType>) Implements CollectionChangeHandler<ItemType>.IDecoupledHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DependencyInjectedHandler.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.DependencyInjectedHandler.html",
    "title": "Class CollectionChangeHandler<ItemType>.DependencyInjectedHandler | Documentations",
    "keywords": "Class CollectionChangeHandler<ItemType>.DependencyInjectedHandler Inheritance System.Object CollectionChangeHandler<ItemType>.DependencyInjectedHandler Implements CollectionChangeHandler.IDependencyInjectedHandler <> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class DependencyInjectedHandler : object, CollectionChangeHandler<ItemType>.IDependencyInjectedHandler Constructors | Improve this Doc View Source DependencyInjectedHandler() Declaration protected DependencyInjectedHandler() | Improve this Doc View Source DependencyInjectedHandler(IList<ItemType>) Declaration public DependencyInjectedHandler(IList<ItemType> items) Parameters Type Name Description IList <ItemType> items | Improve this Doc View Source DependencyInjectedHandler(IList<ItemType>, CollectionChangeHandler<ItemType>.IDecoupledHandler) Declaration public DependencyInjectedHandler(IList<ItemType> items, CollectionChangeHandler<ItemType>.IDecoupledHandler handler) Parameters Type Name Description IList <ItemType> items CollectionChangeHandler.IDecoupledHandler <> handler Properties | Improve this Doc View Source CanReplaceItem Declaration public virtual bool CanReplaceItem { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Handler Declaration public virtual CollectionChangeHandler<ItemType>.IDecoupledHandler Handler { get; } Property Value Type Description CollectionChangeHandler.IDecoupledHandler <> | Improve this Doc View Source Items Declaration public virtual IList<ItemType> Items { get; } Property Value Type Description IList <ItemType> Methods | Improve this Doc View Source InsertItem(Int32, ItemType) Declaration public virtual void InsertItem(int insertAt, ItemType item) Parameters Type Name Description System.Int32 insertAt ItemType item | Improve this Doc View Source MoveItems(Int32, Int32, Int32) Declaration public virtual void MoveItems(int fromIndex, int toIndex, int count) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source RemoveItem(Int32) Declaration public virtual void RemoveItem(int removeAt) Parameters Type Name Description System.Int32 removeAt | Improve this Doc View Source ReplaceItem(Int32, Func<ItemType>) Declaration public virtual void ReplaceItem(int replaceAt, Func<ItemType> getItem) Parameters Type Name Description System.Int32 replaceAt Func <ItemType> getItem | Improve this Doc View Source Reset() Declaration public virtual void Reset() Implements CollectionChangeHandler<ItemType>.IDependencyInjectedHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.html",
    "title": "Class CollectionChangeHandler<ItemType> | Documentations",
    "keywords": "Class CollectionChangeHandler<ItemType> Inheritance System.Object CollectionChangeHandler<ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class CollectionChangeHandler<ItemType> : object Type Parameters Name Description ItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.IDecoupledHandler.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.IDecoupledHandler.html",
    "title": "Interface CollectionChangeHandler<ItemType>.IDecoupledHandler | Documentations",
    "keywords": "Interface CollectionChangeHandler<ItemType>.IDecoupledHandler Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface IDecoupledHandler Properties | Improve this Doc View Source CanReplaceItem Declaration bool CanReplaceItem { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source InsertItem(IList<ItemType>, Int32, ItemType) Declaration void InsertItem(IList<ItemType> list, int insertAt, ItemType item) Parameters Type Name Description IList <ItemType> list System.Int32 insertAt ItemType item | Improve this Doc View Source MoveItems(IList<ItemType>, Int32, Int32, Int32) Declaration void MoveItems(IList<ItemType> list, int fromIndex, int toIndex, int count) Parameters Type Name Description IList <ItemType> list System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source RemoveItem(IList<ItemType>, Int32) Declaration void RemoveItem(IList<ItemType> list, int removeAt) Parameters Type Name Description IList <ItemType> list System.Int32 removeAt | Improve this Doc View Source ReplaceItem(IList<ItemType>, Int32, Func<ItemType>) Declaration void ReplaceItem(IList<ItemType> list, int replaceAt, Func<ItemType> getItem) Parameters Type Name Description IList <ItemType> list System.Int32 replaceAt Func <ItemType> getItem | Improve this Doc View Source Reset(IList<ItemType>) Declaration void Reset(IList<ItemType> list) Parameters Type Name Description IList <ItemType> list Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.IDependencyInjectedHandler.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionChangeHandler-1.IDependencyInjectedHandler.html",
    "title": "Interface CollectionChangeHandler<ItemType>.IDependencyInjectedHandler | Documentations",
    "keywords": "Interface CollectionChangeHandler<ItemType>.IDependencyInjectedHandler Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface IDependencyInjectedHandler Properties | Improve this Doc View Source CanReplaceItem Declaration bool CanReplaceItem { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Declaration IList<ItemType> Items { get; } Property Value Type Description IList <ItemType> Methods | Improve this Doc View Source InsertItem(Int32, ItemType) Declaration void InsertItem(int insertAt, ItemType item) Parameters Type Name Description System.Int32 insertAt ItemType item | Improve this Doc View Source MoveItems(Int32, Int32, Int32) Declaration void MoveItems(int fromIndex, int toIndex, int count) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source RemoveItem(Int32) Declaration void RemoveItem(int removeAt) Parameters Type Name Description System.Int32 removeAt | Improve this Doc View Source ReplaceItem(Int32, Func<ItemType>) Declaration void ReplaceItem(int replaceAt, Func<ItemType> superItem) Parameters Type Name Description System.Int32 replaceAt Func <ItemType> superItem | Improve this Doc View Source Reset() Declaration void Reset() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationDelegate.html",
    "title": "Delegate CollectionModificationIterationDelegate | Documentations",
    "keywords": "Delegate CollectionModificationIterationDelegate Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public delegate void CollectionModificationIterationDelegate(); Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationTools.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationTools.html",
    "title": "Class CollectionModificationIterationTools | Documentations",
    "keywords": "Class CollectionModificationIterationTools Inheritance System.Object CollectionModificationIterationTools Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class CollectionModificationIterationTools : object Methods | Improve this Doc View Source BeginInsert(ICollectionModificationParameters) Creates an iterator builder. Declaration public static CollectionModificationIterationTools.IteratorBuilder BeginInsert(ICollectionModificationParameters modification) Parameters Type Name Description ICollectionModificationParameters modification Returns Type Description CollectionModificationIterationTools.IteratorBuilder | Improve this Doc View Source BeginRemove(ICollectionModificationParameters) Creates an iterator builder. Declaration public static CollectionModificationIterationTools.IteratorBuilder BeginRemove(ICollectionModificationParameters modification) Parameters Type Name Description ICollectionModificationParameters modification Returns Type Description CollectionModificationIterationTools.IteratorBuilder | Improve this Doc View Source BeginReplace(ICollectionModificationParameters) Creates an iterator builder. Declaration public static CollectionModificationIterationTools.IteratorBuilder BeginReplace(ICollectionModificationParameters modification) Parameters Type Name Description ICollectionModificationParameters modification Returns Type Description CollectionModificationIterationTools.IteratorBuilder | Improve this Doc View Source CheckMove(ICollectionModificationParameters) Checks move action. Declaration public static void CheckMove(ICollectionModificationParameters modification) Parameters Type Name Description ICollectionModificationParameters modification Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationTools.IteratorBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationTools.IteratorBuilder.html",
    "title": "Class CollectionModificationIterationTools.IteratorBuilder | Documentations",
    "keywords": "Class CollectionModificationIterationTools.IteratorBuilder Inheritance System.Object CollectionModificationIterationTools.IteratorBuilder Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class IteratorBuilder : object Constructors | Improve this Doc View Source IteratorBuilder(Int32, Int32, Boolean) Declaration public IteratorBuilder(int iterationCount, int backIndexOffset, bool iteratesBackward) Parameters Type Name Description System.Int32 iterationCount System.Int32 backIndexOffset System.Boolean iteratesBackward Properties | Improve this Doc View Source IteratesBackward Declaration public bool IteratesBackward { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Add(CollectionModificationIterationDelegate) Declaration public CollectionModificationIterationTools.IteratorBuilder Add(CollectionModificationIterationDelegate actionHandler) Parameters Type Name Description CollectionModificationIterationDelegate actionHandler Returns Type Description CollectionModificationIterationTools.IteratorBuilder | Improve this Doc View Source Add(CollectionModificationIterationWithIndexDelegate) Declaration public CollectionModificationIterationTools.IteratorBuilder Add(CollectionModificationIterationWithIndexDelegate actionHandler) Parameters Type Name Description CollectionModificationIterationWithIndexDelegate actionHandler Returns Type Description CollectionModificationIterationTools.IteratorBuilder | Improve this Doc View Source Iterate() Declaration public void Iterate() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationWithIndexDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModificationIterationWithIndexDelegate.html",
    "title": "Delegate CollectionModificationIterationWithIndexDelegate | Documentations",
    "keywords": "Delegate CollectionModificationIterationWithIndexDelegate Represents the delegate for the handler that is called from Iterate() . Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public delegate void CollectionModificationIterationWithIndexDelegate(int frontIndex, int backIndexOffset); Parameters Type Name Description System.Int32 frontIndex The modification item index without index offset. System.Int32 backIndexOffset The index offset that is when summed up with the index of the synchronized list. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModifiedEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModifiedEventArgs-1.html",
    "title": "Class CollectionModifiedEventArgs<ItemType> | Documentations",
    "keywords": "Class CollectionModifiedEventArgs<ItemType> Inheritance System.Object CollectionModifiedEventArgs<ItemType> Implements ICollectionModification <ItemType, ItemType> ICollectionModificationParameters Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class CollectionModifiedEventArgs<ItemType> : NotifyCollectionChangedEventArgs, ICollectionModification<ItemType, ItemType>, ICollectionModificationParameters Type Parameters Name Description ItemType Constructors | Improve this Doc View Source CollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType>) Declaration public CollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType> collectionModification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> collectionModification Properties | Improve this Doc View Source NewPart Declaration public ICollectionModificationPart<ItemType, ItemType, ItemType, ItemType> NewPart { get; } Property Value Type Description ICollectionModificationPart <ItemType, ItemType, ItemType, ItemType> | Improve this Doc View Source OldPart Declaration public ICollectionModificationPart<ItemType, ItemType, ItemType, ItemType> OldPart { get; } Property Value Type Description ICollectionModificationPart <ItemType, ItemType, ItemType, ItemType> Explicit Interface Implementations | Improve this Doc View Source ICollectionModification<ItemType, ItemType>.NewIndex Declaration int ICollectionModification<ItemType, ItemType>.NewIndex { get; } Returns Type Description System.Int32 | Improve this Doc View Source ICollectionModification<ItemType, ItemType>.OldIndex Declaration int ICollectionModification<ItemType, ItemType>.OldIndex { get; } Returns Type Description System.Int32 | Improve this Doc View Source ICollectionModificationParameters.NewIndex Declaration int ICollectionModificationParameters.NewIndex { get; } Returns Type Description System.Int32 | Improve this Doc View Source ICollectionModificationParameters.NewItemsCount Declaration int? ICollectionModificationParameters.NewItemsCount { get; } Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ICollectionModificationParameters.OldIndex Declaration int ICollectionModificationParameters.OldIndex { get; } Returns Type Description System.Int32 | Improve this Doc View Source ICollectionModificationParameters.OldItemsCount Declaration int? ICollectionModificationParameters.OldItemsCount { get; } Returns Type Description System.Nullable < System.Int32 > Implements ICollectionModification<NewItemType, OldItemType> ICollectionModificationParameters Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModifiedEventArgs-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionModifiedEventArgs-2.html",
    "title": "Class CollectionModifiedEventArgs<SuperItemType, SubItemType> | Documentations",
    "keywords": "Class CollectionModifiedEventArgs<SuperItemType, SubItemType> Inheritance System.Object CollectionModifiedEventArgs<SuperItemType, SubItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class CollectionModifiedEventArgs<SuperItemType, SubItemType> : EventArgs Type Parameters Name Description SuperItemType SubItemType Constructors | Improve this Doc View Source CollectionModifiedEventArgs(ICollectionModification<SubItemType, SubItemType>, ICollectionModification<SuperItemType, SubItemType>, ICollectionModification<SuperItemType, SuperItemType>) Declaration public CollectionModifiedEventArgs(ICollectionModification<SubItemType, SubItemType> subItemModification, ICollectionModification<SuperItemType, SubItemType> superSubItemModification, ICollectionModification<SuperItemType, SuperItemType> superItemModification) Parameters Type Name Description ICollectionModification <SubItemType, SubItemType> subItemModification ICollectionModification <SuperItemType, SubItemType> superSubItemModification ICollectionModification <SuperItemType, SuperItemType> superItemModification Properties | Improve this Doc View Source SubItemModification Declaration public ICollectionModification<SubItemType, SubItemType> SubItemModification { get; } Property Value Type Description ICollectionModification <SubItemType, SubItemType> | Improve this Doc View Source SuperItemModification Declaration public ICollectionModification<SuperItemType, SuperItemType> SuperItemModification { get; } Property Value Type Description ICollectionModification <SuperItemType, SuperItemType> | Improve this Doc View Source SuperSubItemModification Declaration public ICollectionModification<SuperItemType, SubItemType> SuperSubItemModification { get; } Property Value Type Description ICollectionModification <SuperItemType, SubItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionUpdateItemDelegate-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.CollectionUpdateItemDelegate-2.html",
    "title": "Delegate CollectionUpdateItemDelegate<ItemType, NewItemType> | Documentations",
    "keywords": "Delegate CollectionUpdateItemDelegate<ItemType, NewItemType> Used to update the item by new item. When the new item is not present at the time the modification is applying it will be created once and returned on subsequent calls. Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public delegate void CollectionUpdateItemDelegate<ItemType, NewItemType>(ItemType item, Func<NewItemType> createOrGetNewItem); Parameters Type Name Description ItemType item Func <NewItemType> createOrGetNewItem Creates or gets the new item from the modification. It gets created like the item that would be normally created at first at insertion. It is in such a way designed to return the same reference as previously once called. It will be the same reference that may be created through ReplaceItem(Int32, Func<ItemType>) . It won't return the existing item that resides in the global list. Type Parameters Name Description ItemType NewItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.html",
    "title": "Namespace Teronis.Collections.Synchronization | Documentations",
    "keywords": "Namespace Teronis.Collections.Synchronization Classes AddRemoveResetBehaviourForCollectionItemByAddRemoveParents<ContentType, ItemType> CollectionChangeHandler<ItemType> CollectionChangeHandler<ItemType>.DecoupledHandler CollectionChangeHandler<ItemType>.DecoupledItemReplacingHandler CollectionChangeHandler<ItemType>.DependencyInjectedHandler CollectionModificationIterationTools CollectionModificationIterationTools.IteratorBuilder CollectionModifiedEventArgs<ItemType> CollectionModifiedEventArgs<SuperItemType, SubItemType> ISynchronizedCollection_1Extensions SynchronizableCollection<ItemType> SynchronizableCollection<ItemType>.Options SynchronizableCollectionBase<ItemType, NewItemType> SynchronizationMirror<SuperItemType> SynchronizedDictionary<KeyType, ItemType> SynchronizedDictionary<KeyType, ItemType>.ItemEnumerator SynchronizingCollection<SuperItemType, SubItemType> SynchronizingCollectionBase<SuperItemType, SubItemType> A synchronizing collection. Bindable collections are SubItems and SuperItems . Remember: All childs are parents (because child extends parent), so all childs are a subset of parent / parent is a superset of child. SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<ItemType, NewItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.Options SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<ItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemCollection SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemCollection Structs SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications Interfaces CollectionChangeHandler<ItemType>.IDecoupledHandler CollectionChangeHandler<ItemType>.IDependencyInjectedHandler INotifyCollectionModification<ItemType> INotifyCollectionSynchronized<ItemType> INotifyCollectionSynchronizing<ItemType> ISynchronizedCollection<ItemType> Delegates CollectionModificationIterationDelegate CollectionModificationIterationWithIndexDelegate Represents the delegate for the handler that is called from Iterate() . CollectionUpdateItemDelegate<ItemType, NewItemType> Used to update the item by new item. When the new item is not present at the time the modification is applying it will be created once and returned on subsequent calls. NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType> NotifyNotifyCollectionModifiedEventHandler<ItemType>"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionModification-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionModification-1.html",
    "title": "Interface INotifyCollectionModification<ItemType> | Documentations",
    "keywords": "Interface INotifyCollectionModification<ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface INotifyCollectionModification<ItemType> Type Parameters Name Description ItemType Events | Improve this Doc View Source CollectionModified Declaration event NotifyNotifyCollectionModifiedEventHandler<ItemType> CollectionModified Event Type Type Description NotifyNotifyCollectionModifiedEventHandler <ItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionSynchronized-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionSynchronized-1.html",
    "title": "Interface INotifyCollectionSynchronized<ItemType> | Documentations",
    "keywords": "Interface INotifyCollectionSynchronized<ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface INotifyCollectionSynchronized<ItemType> Type Parameters Name Description ItemType Events | Improve this Doc View Source CollectionSynchronized Declaration event EventHandler CollectionSynchronized Event Type Type Description EventHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionSynchronizing-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.INotifyCollectionSynchronizing-1.html",
    "title": "Interface INotifyCollectionSynchronizing<ItemType> | Documentations",
    "keywords": "Interface INotifyCollectionSynchronizing<ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface INotifyCollectionSynchronizing<ItemType> Type Parameters Name Description ItemType Events | Improve this Doc View Source CollectionSynchronizing Declaration event EventHandler CollectionSynchronizing Event Type Type Description EventHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.ISynchronizedCollection_1Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.ISynchronizedCollection_1Extensions.html",
    "title": "Class ISynchronizedCollection_1Extensions | Documentations",
    "keywords": "Class ISynchronizedCollection_1Extensions Inheritance System.Object ISynchronizedCollection_1Extensions Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public static class ISynchronizedCollection_1Extensions : object Methods | Improve this Doc View Source CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>) Declaration public static SynchronizedDictionary<KeyType, ItemType> CreateSynchronizedDictionary<ItemType, KeyType>(this ISynchronizedCollection<ItemType> collection, Func<ItemType, KeyType> getItemKey) Parameters Type Name Description ISynchronizedCollection <ItemType> collection Func <ItemType, KeyType> getItemKey Returns Type Description SynchronizedDictionary <KeyType, ItemType> Type Parameters Name Description ItemType KeyType | Improve this Doc View Source CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) Declaration public static SynchronizedDictionary<KeyType, ItemType> CreateSynchronizedDictionary<ItemType, KeyType>(this ISynchronizedCollection<ItemType> collection, Func<ItemType, KeyType> getItemKey, IEqualityComparer<KeyType> keyEqualityComparer) Parameters Type Name Description ISynchronizedCollection <ItemType> collection Func <ItemType, KeyType> getItemKey IEqualityComparer <KeyType> keyEqualityComparer Returns Type Description SynchronizedDictionary <KeyType, ItemType> Type Parameters Name Description ItemType KeyType"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.ISynchronizedCollection-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.ISynchronizedCollection-1.html",
    "title": "Interface ISynchronizedCollection<ItemType> | Documentations",
    "keywords": "Interface ISynchronizedCollection<ItemType> Inherited Members INotifyCollectionSynchronizing<ItemType>.CollectionSynchronizing INotifyCollectionModification<ItemType>.CollectionModified INotifyCollectionSynchronized<ItemType>.CollectionSynchronized Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public interface ISynchronizedCollection<ItemType> : IEnumerable<ItemType>, IEnumerable, IReadOnlyCollection<ItemType>, IReadOnlyList<ItemType>, INotifyCollectionSynchronizing<ItemType>, INotifyCollectionModification<ItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<ItemType> Type Parameters Name Description ItemType Properties | Improve this Doc View Source Count Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Int32] Declaration ItemType this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description ItemType Methods | Improve this Doc View Source GetEnumerator() Declaration IEnumerator<ItemType> GetEnumerator() Returns Type Description IEnumerator <ItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.NotifyCollectionModifiedEventHandler-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.NotifyCollectionModifiedEventHandler-2.html",
    "title": "Delegate NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType> | Documentations",
    "keywords": "Delegate NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public delegate void NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType>(object sender, CollectionModifiedEventArgs<SuperItemType, SubItemType> args); Parameters Type Name Description System.Object sender CollectionModifiedEventArgs <SuperItemType, SubItemType> args Type Parameters Name Description SuperItemType SubItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.NotifyNotifyCollectionModifiedEventHandler-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.NotifyNotifyCollectionModifiedEventHandler-1.html",
    "title": "Delegate NotifyNotifyCollectionModifiedEventHandler<ItemType> | Documentations",
    "keywords": "Delegate NotifyNotifyCollectionModifiedEventHandler<ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public delegate void NotifyNotifyCollectionModifiedEventHandler<ItemType>(object sender, CollectionModifiedEventArgs<ItemType> args); Parameters Type Name Description System.Object sender CollectionModifiedEventArgs <ItemType> args Type Parameters Name Description ItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollection-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollection-1.html",
    "title": "Class SynchronizableCollection<ItemType> | Documentations",
    "keywords": "Class SynchronizableCollection<ItemType> Inheritance System.Object SynchronizableCollectionBase <ItemType, ItemType> SynchronizableCollection<ItemType> Implements ISynchronizedCollection <ItemType> IEnumerable <ItemType> IEnumerable IReadOnlyCollection <ItemType> IReadOnlyList <ItemType> INotifyCollectionSynchronizing <ItemType> INotifyCollectionModification <ItemType> INotifyCollectionChanged INotifyCollectionSynchronized <ItemType> INotifyPropertyChanged INotifyPropertyChanging Inherited Members SynchronizableCollectionBase<ItemType, ItemType>.PropertyChanged SynchronizableCollectionBase<ItemType, ItemType>.PropertyChanging SynchronizableCollectionBase<ItemType, ItemType>.CollectionSynchronizing SynchronizableCollectionBase<ItemType, ItemType>.CollectionModified SynchronizableCollectionBase<ItemType, ItemType>.CollectionSynchronized SynchronizableCollectionBase<ItemType, ItemType>.PropertyNotificationComponent SynchronizableCollectionBase<ItemType, ItemType>.CollectionChangeHandler SynchronizableCollectionBase<ItemType, ItemType>.InsertItem(Int32, ItemType) SynchronizableCollectionBase<ItemType, ItemType>.SetItem(Int32, ItemType) SynchronizableCollectionBase<ItemType, ItemType>.MoveItems(Int32, Int32, Int32) SynchronizableCollectionBase<ItemType, ItemType>.Move(Int32, Int32, Int32) SynchronizableCollectionBase<ItemType, ItemType>.Move(Int32, Int32) SynchronizableCollectionBase<ItemType, ItemType>.DisposeItem(Int32) SynchronizableCollectionBase<ItemType, ItemType>.RemoveItem(Int32) SynchronizableCollectionBase<ItemType, ItemType>.ClearItems() SynchronizableCollectionBase<ItemType, ItemType>.CreateCollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType>) SynchronizableCollectionBase<ItemType, ItemType>.InvokeCollectionSynchronizing() SynchronizableCollectionBase<ItemType, ItemType>.InvokeCollectionModified(ICollectionModification<ItemType, ItemType>) SynchronizableCollectionBase<ItemType, ItemType>.InvokeCollectionSynchronized() SynchronizableCollectionBase<ItemType, ItemType>.CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>, IEqualityComparer<KeyType>) SynchronizableCollectionBase<ItemType, ItemType>.CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SynchronizableCollection<ItemType> : SynchronizableCollectionBase<ItemType, ItemType>, ISynchronizedCollection<ItemType>, IEnumerable<ItemType>, IEnumerable, IReadOnlyCollection<ItemType>, IReadOnlyList<ItemType>, INotifyCollectionSynchronizing<ItemType>, INotifyCollectionModification<ItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<ItemType>, INotifyPropertyChanged, INotifyPropertyChanging, ICollectionSynchronizationContext<ItemType> Type Parameters Name Description ItemType Constructors | Improve this Doc View Source SynchronizableCollection() Declaration public SynchronizableCollection() | Improve this Doc View Source SynchronizableCollection(IComparer<ItemType>, Boolean) Declaration public SynchronizableCollection(IComparer<ItemType> comparer, bool descended) Parameters Type Name Description IComparer <ItemType> comparer System.Boolean descended | Improve this Doc View Source SynchronizableCollection(IEqualityComparer<ItemType>) Declaration public SynchronizableCollection(IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description IEqualityComparer <ItemType> equalityComparer | Improve this Doc View Source SynchronizableCollection(IList<ItemType>) Declaration public SynchronizableCollection(IList<ItemType> items) Parameters Type Name Description IList <ItemType> items | Improve this Doc View Source SynchronizableCollection(IList<ItemType>, IComparer<ItemType>, Boolean) Declaration public SynchronizableCollection(IList<ItemType> items, IComparer<ItemType> comparer, bool descended) Parameters Type Name Description IList <ItemType> items IComparer <ItemType> comparer System.Boolean descended | Improve this Doc View Source SynchronizableCollection(IList<ItemType>, IEqualityComparer<ItemType>) Declaration public SynchronizableCollection(IList<ItemType> items, IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description IList <ItemType> items IEqualityComparer <ItemType> equalityComparer | Improve this Doc View Source SynchronizableCollection(IList<ItemType>, ICollectionSynchronizationMethod<ItemType, ItemType>) Declaration public SynchronizableCollection(IList<ItemType> items, ICollectionSynchronizationMethod<ItemType, ItemType> synchronizationMethod) Parameters Type Name Description IList <ItemType> items ICollectionSynchronizationMethod <ItemType, ItemType> synchronizationMethod | Improve this Doc View Source SynchronizableCollection(ICollectionSynchronizationMethod<ItemType, ItemType>) Declaration public SynchronizableCollection(ICollectionSynchronizationMethod<ItemType, ItemType> synchronizationMethod) Parameters Type Name Description ICollectionSynchronizationMethod <ItemType, ItemType> synchronizationMethod | Improve this Doc View Source SynchronizableCollection(SynchronizableCollection<ItemType>.Options) Declaration public SynchronizableCollection(SynchronizableCollection<ItemType>.Options options) Parameters Type Name Description SynchronizableCollection.Options <> options Properties | Improve this Doc View Source SynchronizationMethod Declaration public ICollectionSynchronizationMethod<ItemType, ItemType> SynchronizationMethod { get; } Property Value Type Description ICollectionSynchronizationMethod <ItemType, ItemType> Methods | Improve this Doc View Source AddItemByModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void AddItemByModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source CreateSynchronizationMirror(ISynchronizedCollection<ItemType>) Creates for this instance a collection synchronisation mirror. The collection modifications from toBeMirroredCollection are forwarded to of this instance. Declaration public SynchronizationMirror<ItemType> CreateSynchronizationMirror(ISynchronizedCollection<ItemType> toBeMirroredCollection) Parameters Type Name Description ISynchronizedCollection <ItemType> toBeMirroredCollection The foreign collection that is about to be mirrored related to its modifications. Returns Type Description SynchronizationMirror <ItemType> A collection synchronization mirror. | Improve this Doc View Source GoThroughModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void GoThroughModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source MoveItemByModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void MoveItemByModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source RemoveItemByModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void RemoveItemByModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source ReplaceItemByModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void ReplaceItemByModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source ResetItemByModification(ICollectionModification<ItemType, ItemType>) Declaration protected virtual void ResetItemByModification(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification | Improve this Doc View Source SynchronizeCollection(Nullable<IEnumerable<ItemType>>) Declaration public void SynchronizeCollection(IEnumerable<ItemType>? enumerable) Parameters Type Name Description System.Nullable < IEnumerable <ItemType>> enumerable | Improve this Doc View Source SynchronizeCollection(Nullable<IEnumerable<ItemType>>, CollectionModificationsYieldCapabilities) Declaration public void SynchronizeCollection(IEnumerable<ItemType>? enumerable, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description System.Nullable < IEnumerable <ItemType>> enumerable CollectionModificationsYieldCapabilities yieldCapabilities Implements ISynchronizedCollection<ItemType> IEnumerable<> IEnumerable IReadOnlyCollection<> IReadOnlyList<> INotifyCollectionSynchronizing<ItemType> INotifyCollectionModification<ItemType> INotifyCollectionChanged INotifyCollectionSynchronized<ItemType> INotifyPropertyChanged INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollection-1.Options.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollection-1.Options.html",
    "title": "Class SynchronizableCollection<ItemType>.Options | Documentations",
    "keywords": "Class SynchronizableCollection<ItemType>.Options Inheritance System.Object SynchronizableCollection<ItemType>.Options Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public sealed class Options : object Properties | Improve this Doc View Source CollectionChangeHandler Declaration public CollectionChangeHandler<ItemType>.IDependencyInjectedHandler CollectionChangeHandler { get; set; } Property Value Type Description CollectionChangeHandler.IDependencyInjectedHandler <> | Improve this Doc View Source SynchronizationMethod Declaration public ICollectionSynchronizationMethod<ItemType, ItemType> SynchronizationMethod { get; set; } Property Value Type Description ICollectionSynchronizationMethod <ItemType, ItemType> | Improve this Doc View Source UpdateItem If not null it is called in ReplaceItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) but after the items could have been replaced. Declaration public CollectionUpdateItemDelegate<ItemType, ItemType> UpdateItem { get; set; } Property Value Type Description CollectionUpdateItemDelegate <ItemType, ItemType> Methods | Improve this Doc View Source SetAscendedSynchronizationMethod(IComparer<ItemType>) Declaration public SynchronizableCollection<ItemType>.Options SetAscendedSynchronizationMethod(IComparer<ItemType> comparer) Parameters Type Name Description IComparer <ItemType> comparer Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetDescendedSynchronizationMethod(IComparer<ItemType>) Declaration public SynchronizableCollection<ItemType>.Options SetDescendedSynchronizationMethod(IComparer<ItemType> comparer) Parameters Type Name Description IComparer <ItemType> comparer Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetItems(IList<ItemType>) Declaration public SynchronizableCollection<ItemType>.Options SetItems(IList<ItemType> items) Parameters Type Name Description IList <ItemType> items Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetItems(IList<ItemType>, CollectionChangeHandler<ItemType>.IDecoupledHandler) Declaration public SynchronizableCollection<ItemType>.Options SetItems(IList<ItemType> items, CollectionChangeHandler<ItemType>.IDecoupledHandler decoupledHandler) Parameters Type Name Description IList <ItemType> items CollectionChangeHandler.IDecoupledHandler <> decoupledHandler Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetItems(CollectionChangeHandler<ItemType>.IDecoupledHandler) Declaration public SynchronizableCollection<ItemType>.Options SetItems(CollectionChangeHandler<ItemType>.IDecoupledHandler decoupledHandler) Parameters Type Name Description CollectionChangeHandler.IDecoupledHandler <> decoupledHandler Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetSequentialSynchronizationMethod(IEqualityComparer<ItemType>) Declaration public SynchronizableCollection<ItemType>.Options SetSequentialSynchronizationMethod(IEqualityComparer<ItemType> equalityComparer) Parameters Type Name Description IEqualityComparer <ItemType> equalityComparer Returns Type Description SynchronizableCollection.Options <> | Improve this Doc View Source SetSortedSynchronizationMethod(IComparer<ItemType>, Boolean) Declaration public SynchronizableCollection<ItemType>.Options SetSortedSynchronizationMethod(IComparer<ItemType> comparer, bool descended) Parameters Type Name Description IComparer <ItemType> comparer System.Boolean descended Returns Type Description SynchronizableCollection.Options <> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollectionBase-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizableCollectionBase-2.html",
    "title": "Class SynchronizableCollectionBase<ItemType, NewItemType> | Documentations",
    "keywords": "Class SynchronizableCollectionBase<ItemType, NewItemType> Inheritance System.Object SynchronizableCollectionBase<ItemType, NewItemType> SynchronizableCollection<ItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<ItemType, NewItemType> Implements ISynchronizedCollection <ItemType> IEnumerable <ItemType> IEnumerable IReadOnlyCollection <ItemType> IReadOnlyList <ItemType> INotifyCollectionSynchronizing <ItemType> INotifyCollectionModification <ItemType> INotifyCollectionChanged INotifyCollectionSynchronized <ItemType> INotifyPropertyChanged INotifyPropertyChanging Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public abstract class SynchronizableCollectionBase<ItemType, NewItemType> : Collection<ItemType>, ISynchronizedCollection<ItemType>, IEnumerable<ItemType>, IEnumerable, IReadOnlyCollection<ItemType>, IReadOnlyList<ItemType>, INotifyCollectionSynchronizing<ItemType>, INotifyCollectionModification<ItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<ItemType>, INotifyPropertyChanged, INotifyPropertyChanging Type Parameters Name Description ItemType NewItemType Constructors | Improve this Doc View Source SynchronizableCollectionBase() Declaration public SynchronizableCollectionBase() | Improve this Doc View Source SynchronizableCollectionBase(IList<ItemType>) Declaration public SynchronizableCollectionBase(IList<ItemType> list) Parameters Type Name Description IList <ItemType> list | Improve this Doc View Source SynchronizableCollectionBase(IList<ItemType>, CollectionChangeHandler<ItemType>.IDecoupledHandler) Declaration public SynchronizableCollectionBase(IList<ItemType> list, CollectionChangeHandler<ItemType>.IDecoupledHandler handler) Parameters Type Name Description IList <ItemType> list CollectionChangeHandler.IDecoupledHandler <> handler | Improve this Doc View Source SynchronizableCollectionBase(CollectionChangeHandler<ItemType>.IDependencyInjectedHandler) Declaration public SynchronizableCollectionBase(CollectionChangeHandler<ItemType>.IDependencyInjectedHandler handler) Parameters Type Name Description CollectionChangeHandler.IDependencyInjectedHandler <> handler Properties | Improve this Doc View Source CollectionChangeHandler Declaration protected virtual CollectionChangeHandler<ItemType>.IDependencyInjectedHandler CollectionChangeHandler { get; } Property Value Type Description CollectionChangeHandler.IDependencyInjectedHandler <> | Improve this Doc View Source PropertyNotificationComponent Declaration protected PropertyNotificationComponent PropertyNotificationComponent { get; } Property Value Type Description PropertyNotificationComponent Methods | Improve this Doc View Source ClearItems() Declaration protected override void ClearItems() | Improve this Doc View Source CreateCollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType>) Declaration protected virtual CollectionModifiedEventArgs<ItemType> CreateCollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType> modification) Parameters Type Name Description ICollectionModification <ItemType, ItemType> modification Returns Type Description CollectionModifiedEventArgs <ItemType> | Improve this Doc View Source CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>) Declaration public SynchronizedDictionary<KeyType, ItemType> CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType> getItemKey) Parameters Type Name Description Func <ItemType, KeyType> getItemKey Returns Type Description SynchronizedDictionary <KeyType, ItemType> Type Parameters Name Description KeyType | Improve this Doc View Source CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>, IEqualityComparer<KeyType>) Declaration public SynchronizedDictionary<KeyType, ItemType> CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType> getItemKey, IEqualityComparer<KeyType> keyEqualityComparer) Parameters Type Name Description Func <ItemType, KeyType> getItemKey IEqualityComparer <KeyType> keyEqualityComparer Returns Type Description SynchronizedDictionary <KeyType, ItemType> Type Parameters Name Description KeyType | Improve this Doc View Source DisposeItem(Int32) Declaration protected virtual void DisposeItem(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source InsertItem(Int32, ItemType) Declaration protected override void InsertItem(int index, ItemType item) Parameters Type Name Description System.Int32 index ItemType item | Improve this Doc View Source InvokeCollectionModified(ICollectionModification<ItemType, ItemType>) Declaration protected void InvokeCollectionModified(ICollectionModification<ItemType, ItemType> collectionModifiaction) Parameters Type Name Description ICollectionModification <ItemType, ItemType> collectionModifiaction | Improve this Doc View Source InvokeCollectionSynchronized() Declaration protected void InvokeCollectionSynchronized() | Improve this Doc View Source InvokeCollectionSynchronizing() Declaration protected void InvokeCollectionSynchronizing() | Improve this Doc View Source Move(Int32, Int32) Declaration public void Move(int fromIndex, int toIndex) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex | Improve this Doc View Source Move(Int32, Int32, Int32) Declaration public void Move(int fromIndex, int toIndex, int count) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source MoveItems(Int32, Int32, Int32) Declaration protected virtual void MoveItems(int fromIndex, int toIndex, int count) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count | Improve this Doc View Source RemoveItem(Int32) Declaration protected override void RemoveItem(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source SetItem(Int32, ItemType) Declaration protected override void SetItem(int index, ItemType item) Parameters Type Name Description System.Int32 index ItemType item Events | Improve this Doc View Source CollectionModified Declaration public event NotifyNotifyCollectionModifiedEventHandler<ItemType> CollectionModified Event Type Type Description NotifyNotifyCollectionModifiedEventHandler <ItemType> | Improve this Doc View Source CollectionSynchronized Declaration public event EventHandler? CollectionSynchronized Event Type Type Description System.Nullable < EventHandler > | Improve this Doc View Source CollectionSynchronizing Declaration public event EventHandler? CollectionSynchronizing Event Type Type Description System.Nullable < EventHandler > | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > | Improve this Doc View Source PropertyChanging Declaration public event PropertyChangingEventHandler? PropertyChanging Event Type Type Description System.Nullable < PropertyChangingEventHandler > Implements ISynchronizedCollection<ItemType> IEnumerable<> IEnumerable IReadOnlyCollection<> IReadOnlyList<> INotifyCollectionSynchronizing<ItemType> INotifyCollectionModification<ItemType> INotifyCollectionChanged INotifyCollectionSynchronized<ItemType> INotifyPropertyChanged INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizationMirror-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizationMirror-1.html",
    "title": "Class SynchronizationMirror<SuperItemType> | Documentations",
    "keywords": "Class SynchronizationMirror<SuperItemType> Inheritance System.Object SynchronizationMirror<SuperItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SynchronizationMirror<SuperItemType> : object Type Parameters Name Description SuperItemType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizedDictionary-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizedDictionary-2.html",
    "title": "Class SynchronizedDictionary<KeyType, ItemType> | Documentations",
    "keywords": "Class SynchronizedDictionary<KeyType, ItemType> Inheritance System.Object SynchronizedDictionary<KeyType, ItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SynchronizedDictionary<KeyType, ItemType> : IReadOnlyDictionary<KeyType, ItemType> Type Parameters Name Description KeyType ItemType Constructors | Improve this Doc View Source SynchronizedDictionary(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>) Declaration public SynchronizedDictionary(ISynchronizedCollection<ItemType> itemCollection, Func<ItemType, KeyType> getItemKey) Parameters Type Name Description ISynchronizedCollection <ItemType> itemCollection Func <ItemType, KeyType> getItemKey | Improve this Doc View Source SynchronizedDictionary(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, Nullable<IEqualityComparer<KeyType>>) Declaration public SynchronizedDictionary(ISynchronizedCollection<ItemType> itemCollection, Func<ItemType, KeyType> getItemKey, IEqualityComparer<KeyType>? keyEqualityComparer) Parameters Type Name Description ISynchronizedCollection <ItemType> itemCollection Func <ItemType, KeyType> getItemKey System.Nullable < IEqualityComparer <KeyType>> keyEqualityComparer Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[KeyType] Declaration public ItemType this[KeyType key] { get; } Parameters Type Name Description KeyType key Property Value Type Description ItemType | Improve this Doc View Source KeyedIndexes Declaration public IReadOnlyDictionary<KeyType, IndexDirectoryEntry> KeyedIndexes { get; } Property Value Type Description IReadOnlyDictionary <KeyType, IndexDirectoryEntry > Methods | Improve this Doc View Source ContainsKey(KeyType) Declaration public bool ContainsKey(KeyType key) Parameters Type Name Description KeyType key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<KeyType, ItemType>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <KeyType, ItemType>> | Improve this Doc View Source GetItem(KeyType) Declaration public ItemType GetItem(KeyType key) Parameters Type Name Description KeyType key Returns Type Description ItemType | Improve this Doc View Source GetItemOrDefault(KeyType) Declaration public ItemType GetItemOrDefault(KeyType key) Parameters Type Name Description KeyType key Returns Type Description ItemType | Improve this Doc View Source TryGetItem(KeyType, out ItemType) Declaration public bool TryGetItem(KeyType key, out ItemType value) Parameters Type Name Description KeyType key ItemType value Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizedDictionary-2.ItemEnumerator.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizedDictionary-2.ItemEnumerator.html",
    "title": "Class SynchronizedDictionary<KeyType, ItemType>.ItemEnumerator | Documentations",
    "keywords": "Class SynchronizedDictionary<KeyType, ItemType>.ItemEnumerator Inheritance System.Object SynchronizedDictionary<KeyType, ItemType>.ItemEnumerator Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class ItemEnumerator : IEnumerator<KeyValuePair<KeyType, ItemType>> Properties | Improve this Doc View Source Current Declaration public KeyValuePair<KeyType, ItemType> Current { get; } Property Value Type Description KeyValuePair <KeyType, ItemType> Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean | Improve this Doc View Source Reset() Declaration public void Reset() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollection-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollection-2.html",
    "title": "Class SynchronizingCollection<SuperItemType, SubItemType> | Documentations",
    "keywords": "Class SynchronizingCollection<SuperItemType, SubItemType> Inheritance System.Object SynchronizingCollectionBase <SuperItemType, SubItemType> SynchronizingCollection<SuperItemType, SubItemType> Implements INotifyCollectionModification <SuperItemType, SubItemType> Inherited Members SynchronizingCollectionBase<SuperItemType, SubItemType>.CollectionSynchronizing SynchronizingCollectionBase<SuperItemType, SubItemType>.CollectionSynchronized SynchronizingCollectionBase<SuperItemType, SubItemType>.CollectionModified SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItems SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItems SynchronizingCollectionBase<SuperItemType, SubItemType>.SynchronizationMethod SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemChangeHandler SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemChangeHandler SynchronizingCollectionBase<SuperItemType, SubItemType>.ConfigureItems(SynchronizingCollectionBase.Options<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.CreateSubItem(SuperItemType) SynchronizingCollectionBase<SuperItemType, SubItemType>.CreateSynchronizationMirror(ISynchronizedCollection<SuperItemType>) SynchronizingCollectionBase<SuperItemType, SubItemType>.OnAddedItemByModification(Int32) SynchronizingCollectionBase<SuperItemType, SubItemType>.AddItemsByModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.RemoveItemsByModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.MoveItemsByModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.OnReplacedItemByModification(Int32) SynchronizingCollectionBase<SuperItemType, SubItemType>.ReplaceItemsByModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.ResetByModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.GoThroughModification(SynchronizingCollectionBase.ApplyingCollectionModifications<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.OnCollectionModified(CollectionModifiedEventArgs<SuperItemType, SubItemType>) SynchronizingCollectionBase<SuperItemType, SubItemType>.GoThroughModification(ICollectionModification<SuperItemType, SuperItemType>) SynchronizingCollectionBase<SuperItemType, SubItemType>.OnCollectionSynchronizing() SynchronizingCollectionBase<SuperItemType, SubItemType>.OnCollectionSynchronized() SynchronizingCollectionBase<SuperItemType, SubItemType>.SynchronizeCollection(Nullable<IEnumerable<SuperItemType>>, CollectionModificationsYieldCapabilities) SynchronizingCollectionBase<SuperItemType, SubItemType>.SynchronizeCollection(Nullable<IEnumerable<SuperItemType>>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SynchronizingCollection<SuperItemType, SubItemType> : SynchronizingCollectionBase<SuperItemType, SubItemType>, INotifyCollectionModification<SuperItemType, SubItemType>, ICollectionSynchronizationContext<SuperItemType> Type Parameters Name Description SuperItemType SubItemType Constructors | Improve this Doc View Source SynchronizingCollection(Func<SuperItemType, SubItemType>) Declaration public SynchronizingCollection(Func<SuperItemType, SubItemType> createSubItemHandler) Parameters Type Name Description Func <SuperItemType, SubItemType> createSubItemHandler | Improve this Doc View Source SynchronizingCollection(Func<SuperItemType, SubItemType>, IComparer<SuperItemType>, Boolean) Declaration public SynchronizingCollection(Func<SuperItemType, SubItemType> createSubItemHandler, IComparer<SuperItemType> equalityComparer, bool descended) Parameters Type Name Description Func <SuperItemType, SubItemType> createSubItemHandler IComparer <SuperItemType> equalityComparer System.Boolean descended | Improve this Doc View Source SynchronizingCollection(Func<SuperItemType, SubItemType>, IEqualityComparer<SuperItemType>) Declaration public SynchronizingCollection(Func<SuperItemType, SubItemType> createSubItemHandler, IEqualityComparer<SuperItemType> equalityComparer) Parameters Type Name Description Func <SuperItemType, SubItemType> createSubItemHandler IEqualityComparer <SuperItemType> equalityComparer | Improve this Doc View Source SynchronizingCollection(Func<SuperItemType, SubItemType>, SynchronizingCollectionBase<SuperItemType, SubItemType>.Options) Declaration public SynchronizingCollection(Func<SuperItemType, SubItemType> createSubItemHandler, SynchronizingCollectionBase<SuperItemType, SubItemType>.Options options) Parameters Type Name Description Func <SuperItemType, SubItemType> createSubItemHandler SynchronizingCollectionBase.Options <> options Methods | Improve this Doc View Source CreateSubItem(SuperItemType) Declaration protected override SubItemType CreateSubItem(SuperItemType superItem) Parameters Type Name Description SuperItemType superItem Returns Type Description SubItemType Overrides Teronis.Collections.Synchronization.SynchronizingCollectionBase<SuperItemType, SubItemType>.CreateSubItem(SuperItemType) Implements INotifyCollectionModification<SuperItemType, SubItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.ApplyingCollectionModifications.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.ApplyingCollectionModifications.html",
    "title": "Struct SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications | Documentations",
    "keywords": "Struct SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax protected struct ApplyingCollectionModifications Constructors | Improve this Doc View Source ApplyingCollectionModifications(ICollectionModification<SuperItemType, SubItemType>, ICollectionModification<SuperItemType, SuperItemType>) Declaration public ApplyingCollectionModifications(ICollectionModification<SuperItemType, SubItemType> subSuperItemModification, ICollectionModification<SuperItemType, SuperItemType> superItemModification) Parameters Type Name Description ICollectionModification <SuperItemType, SubItemType> subSuperItemModification ICollectionModification <SuperItemType, SuperItemType> superItemModification Properties | Improve this Doc View Source SuperItemModification Declaration public ICollectionModification<SuperItemType, SuperItemType> SuperItemModification { get; } Property Value Type Description ICollectionModification <SuperItemType, SuperItemType> | Improve this Doc View Source SuperSubItemModification Declaration public ICollectionModification<SuperItemType, SubItemType> SuperSubItemModification { get; } Property Value Type Description ICollectionModification <SuperItemType, SubItemType>"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType> | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType> A synchronizing collection. Bindable collections are SubItems and SuperItems . Remember: All childs are parents (because child extends parent), so all childs are a subset of parent / parent is a superset of child. Inheritance System.Object SynchronizingCollectionBase<SuperItemType, SubItemType> SynchronizingCollection<SuperItemType, SubItemType> Implements INotifyCollectionModification <SuperItemType, SubItemType> Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public abstract class SynchronizingCollectionBase<SuperItemType, SubItemType> : object, INotifyCollectionModification<SuperItemType, SubItemType>, ICollectionSynchronizationContext<SuperItemType> Type Parameters Name Description SuperItemType SubItemType Constructors | Improve this Doc View Source SynchronizingCollectionBase() Declaration public SynchronizingCollectionBase() | Improve this Doc View Source SynchronizingCollectionBase(IComparer<SuperItemType>, Boolean) Declaration public SynchronizingCollectionBase(IComparer<SuperItemType> equalityComparer, bool descended) Parameters Type Name Description IComparer <SuperItemType> equalityComparer System.Boolean descended | Improve this Doc View Source SynchronizingCollectionBase(IEqualityComparer<SuperItemType>) Declaration public SynchronizingCollectionBase(IEqualityComparer<SuperItemType> equalityComparer) Parameters Type Name Description IEqualityComparer <SuperItemType> equalityComparer | Improve this Doc View Source SynchronizingCollectionBase(ICollectionSynchronizationMethod<SuperItemType, SuperItemType>) Declaration public SynchronizingCollectionBase(ICollectionSynchronizationMethod<SuperItemType, SuperItemType> synchronizationMethod) Parameters Type Name Description ICollectionSynchronizationMethod <SuperItemType, SuperItemType> synchronizationMethod | Improve this Doc View Source SynchronizingCollectionBase(SynchronizingCollectionBase<SuperItemType, SubItemType>.Options) Declaration public SynchronizingCollectionBase(SynchronizingCollectionBase<SuperItemType, SubItemType>.Options options) Parameters Type Name Description SynchronizingCollectionBase.Options <> options Properties | Improve this Doc View Source SubItemChangeHandler Declaration protected CollectionChangeHandler<SubItemType>.IDependencyInjectedHandler SubItemChangeHandler { get; } Property Value Type Description CollectionChangeHandler.IDependencyInjectedHandler <> | Improve this Doc View Source SubItems Declaration public ISynchronizedCollection<SubItemType> SubItems { get; } Property Value Type Description ISynchronizedCollection <SubItemType> | Improve this Doc View Source SuperItemChangeHandler Declaration protected CollectionChangeHandler<SuperItemType>.IDependencyInjectedHandler SuperItemChangeHandler { get; } Property Value Type Description CollectionChangeHandler.IDependencyInjectedHandler <> | Improve this Doc View Source SuperItems Declaration public ISynchronizedCollection<SuperItemType> SuperItems { get; } Property Value Type Description ISynchronizedCollection <SuperItemType> | Improve this Doc View Source SynchronizationMethod Declaration public ICollectionSynchronizationMethod<SuperItemType, SuperItemType> SynchronizationMethod { get; } Property Value Type Description ICollectionSynchronizationMethod <SuperItemType, SuperItemType> Methods | Improve this Doc View Source AddItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Declaration protected virtual void AddItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source ConfigureItems(SynchronizingCollectionBase<SuperItemType, SubItemType>.Options) Configures items options. Declaration protected virtual void ConfigureItems(SynchronizingCollectionBase<SuperItemType, SubItemType>.Options options) Parameters Type Name Description SynchronizingCollectionBase.Options <> options The options that got passed to constructor or a new instance. | Improve this Doc View Source CreateSubItem(SuperItemType) Declaration protected abstract SubItemType CreateSubItem(SuperItemType superItem) Parameters Type Name Description SuperItemType superItem Returns Type Description SubItemType | Improve this Doc View Source CreateSynchronizationMirror(ISynchronizedCollection<SuperItemType>) Creates for this instance a collection synchronisation mirror. The collection modifications from toBeMirroredCollection are forwarded to of this instance. Declaration public SynchronizationMirror<SuperItemType> CreateSynchronizationMirror(ISynchronizedCollection<SuperItemType> toBeMirroredCollection) Parameters Type Name Description ISynchronizedCollection <SuperItemType> toBeMirroredCollection The foreign collection that is about to be mirrored related to its modifications. Returns Type Description SynchronizationMirror <SuperItemType> A collection synchronization mirror. | Improve this Doc View Source GoThroughModification(ICollectionModification<SuperItemType, SuperItemType>) Declaration protected void GoThroughModification(ICollectionModification<SuperItemType, SuperItemType> superItemModification) Parameters Type Name Description ICollectionModification <SuperItemType, SuperItemType> superItemModification | Improve this Doc View Source GoThroughModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Declaration protected virtual void GoThroughModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source MoveItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Does regards , otherwise it fallbacks to Declaration protected virtual void MoveItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source OnAddedItemByModification(Int32) Declaration protected virtual void OnAddedItemByModification(int addedItemIndex) Parameters Type Name Description System.Int32 addedItemIndex | Improve this Doc View Source OnCollectionModified(CollectionModifiedEventArgs<SuperItemType, SubItemType>) Declaration protected void OnCollectionModified(CollectionModifiedEventArgs<SuperItemType, SubItemType> args) Parameters Type Name Description CollectionModifiedEventArgs <SuperItemType, SubItemType> args | Improve this Doc View Source OnCollectionSynchronized() Declaration protected void OnCollectionSynchronized() | Improve this Doc View Source OnCollectionSynchronizing() Declaration protected void OnCollectionSynchronizing() | Improve this Doc View Source OnReplacedItemByModification(Int32) Declaration protected virtual void OnReplacedItemByModification(int replacedItemIndex) Parameters Type Name Description System.Int32 replacedItemIndex | Improve this Doc View Source RemoveItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Declaration protected virtual void RemoveItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source ReplaceItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Has default implementation: Calls SuperItemChangeHandler / SubItemChangeHandler its method when is true. Declaration protected virtual void ReplaceItemsByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source ResetByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications) Declaration protected virtual void ResetByModification(SynchronizingCollectionBase<SuperItemType, SubItemType>.ApplyingCollectionModifications applyingModifications) Parameters Type Name Description SynchronizingCollectionBase.ApplyingCollectionModifications <> applyingModifications | Improve this Doc View Source SynchronizeCollection(Nullable<IEnumerable<SuperItemType>>) Declaration public void SynchronizeCollection(IEnumerable<SuperItemType>? enumerable) Parameters Type Name Description System.Nullable < IEnumerable <SuperItemType>> enumerable | Improve this Doc View Source SynchronizeCollection(Nullable<IEnumerable<SuperItemType>>, CollectionModificationsYieldCapabilities) Synchronizes collection with items . Declaration public virtual void SynchronizeCollection(IEnumerable<SuperItemType>? items, CollectionModificationsYieldCapabilities yieldCapabilities) Parameters Type Name Description System.Nullable < IEnumerable <SuperItemType>> items CollectionModificationsYieldCapabilities yieldCapabilities Events | Improve this Doc View Source CollectionModified Declaration public event NotifyCollectionModifiedEventHandler<SuperItemType, SubItemType> CollectionModified Event Type Type Description NotifyCollectionModifiedEventHandler <SuperItemType, SubItemType> | Improve this Doc View Source CollectionSynchronized Declaration public event EventHandler? CollectionSynchronized Event Type Type Description System.Nullable < EventHandler > | Improve this Doc View Source CollectionSynchronizing Declaration public event EventHandler? CollectionSynchronizing Event Type Type Description System.Nullable < EventHandler > Implements INotifyCollectionModification<SuperItemType, SubItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.ItemCollection-2.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.ItemCollection-2.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<ItemType, NewItemType> | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<ItemType, NewItemType> Inheritance System.Object SynchronizableCollectionBase <ItemType, NewItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<ItemType, NewItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemCollection SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemCollection Implements ISynchronizedCollection <ItemType> IEnumerable <ItemType> IEnumerable IReadOnlyCollection <ItemType> IReadOnlyList <ItemType> INotifyCollectionSynchronizing <ItemType> INotifyCollectionModification <ItemType> INotifyCollectionChanged INotifyCollectionSynchronized <ItemType> INotifyPropertyChanged INotifyPropertyChanging Inherited Members SynchronizableCollectionBase<ItemType, NewItemType>.PropertyChanged SynchronizableCollectionBase<ItemType, NewItemType>.PropertyChanging SynchronizableCollectionBase<ItemType, NewItemType>.CollectionSynchronizing SynchronizableCollectionBase<ItemType, NewItemType>.CollectionModified SynchronizableCollectionBase<ItemType, NewItemType>.CollectionSynchronized SynchronizableCollectionBase<ItemType, NewItemType>.PropertyNotificationComponent SynchronizableCollectionBase<ItemType, NewItemType>.CollectionChangeHandler SynchronizableCollectionBase<ItemType, NewItemType>.InsertItem(Int32, ItemType) SynchronizableCollectionBase<ItemType, NewItemType>.SetItem(Int32, ItemType) SynchronizableCollectionBase<ItemType, NewItemType>.MoveItems(Int32, Int32, Int32) SynchronizableCollectionBase<ItemType, NewItemType>.Move(Int32, Int32, Int32) SynchronizableCollectionBase<ItemType, NewItemType>.Move(Int32, Int32) SynchronizableCollectionBase<ItemType, NewItemType>.DisposeItem(Int32) SynchronizableCollectionBase<ItemType, NewItemType>.RemoveItem(Int32) SynchronizableCollectionBase<ItemType, NewItemType>.ClearItems() SynchronizableCollectionBase<ItemType, NewItemType>.CreateCollectionModifiedEventArgs(ICollectionModification<ItemType, ItemType>) SynchronizableCollectionBase<ItemType, NewItemType>.InvokeCollectionSynchronizing() SynchronizableCollectionBase<ItemType, NewItemType>.InvokeCollectionModified(ICollectionModification<ItemType, ItemType>) SynchronizableCollectionBase<ItemType, NewItemType>.InvokeCollectionSynchronized() SynchronizableCollectionBase<ItemType, NewItemType>.CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>, IEqualityComparer<KeyType>) SynchronizableCollectionBase<ItemType, NewItemType>.CreateSynchronizedDictionary<KeyType>(Func<ItemType, KeyType>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public abstract class ItemCollection<ItemType, NewItemType> : SynchronizableCollectionBase<ItemType, NewItemType>, ISynchronizedCollection<ItemType>, IEnumerable<ItemType>, IEnumerable, IReadOnlyCollection<ItemType>, IReadOnlyList<ItemType>, INotifyCollectionSynchronizing<ItemType>, INotifyCollectionModification<ItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<ItemType>, INotifyPropertyChanged, INotifyPropertyChanging Type Parameters Name Description ItemType NewItemType Constructors | Improve this Doc View Source ItemCollection(IList<ItemType>, SynchronizingCollectionBase<SuperItemType, SubItemType>) Declaration public ItemCollection(IList<ItemType> list, SynchronizingCollectionBase<SuperItemType, SubItemType> synchronizingCollection) Parameters Type Name Description IList <ItemType> list SynchronizingCollectionBase <SuperItemType, SubItemType> synchronizingCollection Methods | Improve this Doc View Source GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType>) Declaration protected abstract ICollectionModification<ItemType, ItemType> GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType> args) Parameters Type Name Description CollectionModifiedEventArgs <SuperItemType, SubItemType> args Returns Type Description ICollectionModification <ItemType, ItemType> Implements ISynchronizedCollection<ItemType> IEnumerable<> IEnumerable IReadOnlyCollection<> IReadOnlyList<> INotifyCollectionSynchronizing<ItemType> INotifyCollectionModification<ItemType> INotifyCollectionChanged INotifyCollectionSynchronized<ItemType> INotifyPropertyChanged INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options Inheritance System.Object SynchronizingCollectionBase<SuperItemType, SubItemType>.Options Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public sealed class Options : object Constructors | Improve this Doc View Source Options() Declaration public Options() Properties | Improve this Doc View Source SubItemsOptions Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems SubItemsOptions { get; } Property Value Type Description SynchronizingCollectionBase.Options.OptionsForSubItems <> | Improve this Doc View Source SuperItemsOptions Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems SuperItemsOptions { get; } Property Value Type Description SynchronizingCollectionBase.Options.OptionsForSuperItems <> | Improve this Doc View Source SynchronizationMethod Declaration public ICollectionSynchronizationMethod<SuperItemType, SuperItemType> SynchronizationMethod { get; set; } Property Value Type Description ICollectionSynchronizationMethod <SuperItemType, SuperItemType> Methods | Improve this Doc View Source SetAscendedSynchronizationMethod(IComparer<SuperItemType>) Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options SetAscendedSynchronizationMethod(IComparer<SuperItemType> equalityComparer) Parameters Type Name Description IComparer <SuperItemType> equalityComparer Returns Type Description SynchronizingCollectionBase.Options <> | Improve this Doc View Source SetDescendedSynchronizationMethod(IComparer<SuperItemType>) Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options SetDescendedSynchronizationMethod(IComparer<SuperItemType> equalityComparer) Parameters Type Name Description IComparer <SuperItemType> equalityComparer Returns Type Description SynchronizingCollectionBase.Options <> | Improve this Doc View Source SetSequentialSynchronizationMethod(IEqualityComparer<SuperItemType>) Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options SetSequentialSynchronizationMethod(IEqualityComparer<SuperItemType> equalityComparer) Parameters Type Name Description IEqualityComparer <SuperItemType> equalityComparer Returns Type Description SynchronizingCollectionBase.Options <> | Improve this Doc View Source SetSortedSynchronizationMethod(IComparer<SuperItemType>, Boolean) Declaration public SynchronizingCollectionBase<SuperItemType, SubItemType>.Options SetSortedSynchronizationMethod(IComparer<SuperItemType> equalityComparer, bool descended) Parameters Type Name Description IComparer <SuperItemType> equalityComparer System.Boolean descended Returns Type Description SynchronizingCollectionBase.Options <> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.ItemsOptions-1.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.ItemsOptions-1.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<ItemType> | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<ItemType> Inheritance System.Object SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<ItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public abstract class ItemsOptions<ItemType> : object Type Parameters Name Description ItemType Properties | Improve this Doc View Source CollectionChangeHandler Declaration public CollectionChangeHandler<ItemType>.IDependencyInjectedHandler CollectionChangeHandler { get; } Property Value Type Description CollectionChangeHandler.IDependencyInjectedHandler <> | Improve this Doc View Source Items Declaration public ISynchronizedCollection<ItemType> Items { get; } Property Value Type Description ISynchronizedCollection <ItemType> Methods | Improve this Doc View Source SetItems(IList<ItemType>, CollectionChangeHandler<ItemType>.IDecoupledHandler) Sets CollectionChangeHandler by creating a CollectionChangeHandler<ItemType>.DependencyInjectedHandler with modificationHandlerItems and modificationHandler . The Items remains null and is initialized at contruction of SynchronizableCollectionBase<ItemType, NewItemType> . Declaration public void SetItems(IList<ItemType> modificationHandlerItems, CollectionChangeHandler<ItemType>.IDecoupledHandler modificationHandler) Parameters Type Name Description IList <ItemType> modificationHandlerItems CollectionChangeHandler.IDecoupledHandler <> modificationHandler | Improve this Doc View Source SetItems(CollectionChangeHandler<ItemType>.IDecoupledHandler) Sets CollectionChangeHandler by creating a CollectionChangeHandler<ItemType>.DependencyInjectedHandler with new and modificationHandler . The Items remains null and is initialized at contruction of SynchronizableCollectionBase<ItemType, NewItemType> . Declaration public void SetItems(CollectionChangeHandler<ItemType>.IDecoupledHandler modificationHandler) Parameters Type Name Description CollectionChangeHandler.IDecoupledHandler <> modificationHandler | Improve this Doc View Source SetItems(ISynchronizedCollection<ItemType>, CollectionChangeHandler<ItemType>.IDependencyInjectedHandler) Sets Items and CollectionChangeHandler . Declaration public void SetItems(ISynchronizedCollection<ItemType> items, CollectionChangeHandler<ItemType>.IDependencyInjectedHandler modificationHandler) Parameters Type Name Description ISynchronizedCollection <ItemType> items CollectionChangeHandler.IDependencyInjectedHandler <> modificationHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.OptionsForSubItems.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.OptionsForSubItems.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems Inheritance System.Object SynchronizingCollectionBase.Options.ItemsOptions <SubItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSubItems Inherited Members SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType>.Items SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType>.CollectionChangeHandler SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType>.SetItems(ISynchronizedCollection<SubItemType>, CollectionChangeHandler.IDependencyInjectedHandler<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType>.SetItems(IList<SubItemType>, CollectionChangeHandler.IDecoupledHandler<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType>.SetItems(CollectionChangeHandler.IDecoupledHandler<>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public sealed class OptionsForSubItems : SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SubItemType> Properties | Improve this Doc View Source UpdateItem If not null it is called by but after the items could have been replaced and before OnReplacedItemByModification(Int32) . (!) Take into regard, that UpdateItem is called at first if not null. Declaration public CollectionUpdateItemDelegate<SubItemType, SuperItemType> UpdateItem { get; set; } Property Value Type Description CollectionUpdateItemDelegate <SubItemType, SuperItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.OptionsForSuperItems.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.Options.OptionsForSuperItems.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems Inheritance System.Object SynchronizingCollectionBase.Options.ItemsOptions <SuperItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.OptionsForSuperItems Inherited Members SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType>.Items SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType>.CollectionChangeHandler SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType>.SetItems(ISynchronizedCollection<SuperItemType>, CollectionChangeHandler.IDependencyInjectedHandler<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType>.SetItems(IList<SuperItemType>, CollectionChangeHandler.IDecoupledHandler<>) SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType>.SetItems(CollectionChangeHandler.IDecoupledHandler<>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public sealed class OptionsForSuperItems : SynchronizingCollectionBase<SuperItemType, SubItemType>.Options.ItemsOptions<SuperItemType> Properties | Improve this Doc View Source UpdateItem If not null it is called in but after the items could have been replaced and before OnReplacedItemByModification(Int32) . Declaration public CollectionUpdateItemDelegate<SuperItemType, SubItemType> UpdateItem { get; set; } Property Value Type Description CollectionUpdateItemDelegate <SuperItemType, SubItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.SubItemCollection.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.SubItemCollection.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemCollection | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemCollection Inheritance System.Object SynchronizableCollectionBase <SubItemType, SuperItemType> SynchronizingCollectionBase.ItemCollection <SubItemType, SuperItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.SubItemCollection Implements ISynchronizedCollection <SubItemType> IEnumerable <SubItemType> IEnumerable IReadOnlyCollection <SubItemType> IReadOnlyList <SubItemType> INotifyCollectionSynchronizing <SubItemType> INotifyCollectionModification <SubItemType> INotifyCollectionChanged INotifyCollectionSynchronized <SubItemType> INotifyPropertyChanged INotifyPropertyChanging Inherited Members SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SubItemType, SuperItemType>.GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType>) SynchronizableCollectionBase<SubItemType, SuperItemType>.PropertyChanged SynchronizableCollectionBase<SubItemType, SuperItemType>.PropertyChanging SynchronizableCollectionBase<SubItemType, SuperItemType>.CollectionSynchronizing SynchronizableCollectionBase<SubItemType, SuperItemType>.CollectionModified SynchronizableCollectionBase<SubItemType, SuperItemType>.CollectionSynchronized SynchronizableCollectionBase<SubItemType, SuperItemType>.PropertyNotificationComponent SynchronizableCollectionBase<SubItemType, SuperItemType>.CollectionChangeHandler SynchronizableCollectionBase<SubItemType, SuperItemType>.InsertItem(Int32, SubItemType) SynchronizableCollectionBase<SubItemType, SuperItemType>.SetItem(Int32, SubItemType) SynchronizableCollectionBase<SubItemType, SuperItemType>.MoveItems(Int32, Int32, Int32) SynchronizableCollectionBase<SubItemType, SuperItemType>.Move(Int32, Int32, Int32) SynchronizableCollectionBase<SubItemType, SuperItemType>.Move(Int32, Int32) SynchronizableCollectionBase<SubItemType, SuperItemType>.DisposeItem(Int32) SynchronizableCollectionBase<SubItemType, SuperItemType>.RemoveItem(Int32) SynchronizableCollectionBase<SubItemType, SuperItemType>.ClearItems() SynchronizableCollectionBase<SubItemType, SuperItemType>.CreateCollectionModifiedEventArgs(ICollectionModification<SubItemType, SubItemType>) SynchronizableCollectionBase<SubItemType, SuperItemType>.InvokeCollectionSynchronizing() SynchronizableCollectionBase<SubItemType, SuperItemType>.InvokeCollectionModified(ICollectionModification<SubItemType, SubItemType>) SynchronizableCollectionBase<SubItemType, SuperItemType>.InvokeCollectionSynchronized() SynchronizableCollectionBase<SubItemType, SuperItemType>.CreateSynchronizedDictionary<KeyType>(Func<SubItemType, KeyType>, IEqualityComparer<KeyType>) SynchronizableCollectionBase<SubItemType, SuperItemType>.CreateSynchronizedDictionary<KeyType>(Func<SubItemType, KeyType>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SubItemCollection : SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SubItemType, SuperItemType>, ISynchronizedCollection<SubItemType>, IEnumerable<SubItemType>, IEnumerable, IReadOnlyCollection<SubItemType>, IReadOnlyList<SubItemType>, INotifyCollectionSynchronizing<SubItemType>, INotifyCollectionModification<SubItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<SubItemType>, INotifyPropertyChanged, INotifyPropertyChanging Constructors | Improve this Doc View Source SubItemCollection(IList<SubItemType>, SynchronizingCollectionBase<SuperItemType, SubItemType>) Declaration public SubItemCollection(IList<SubItemType> list, SynchronizingCollectionBase<SuperItemType, SubItemType> synchronizingCollection) Parameters Type Name Description IList <SubItemType> list SynchronizingCollectionBase <SuperItemType, SubItemType> synchronizingCollection Methods | Improve this Doc View Source GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType>) Declaration protected override ICollectionModification<SubItemType, SubItemType> GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType> args) Parameters Type Name Description CollectionModifiedEventArgs <SuperItemType, SubItemType> args Returns Type Description ICollectionModification <SubItemType, SubItemType> Overrides Teronis.Collections.Synchronization.SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SubItemType, SuperItemType>.GetCollectionModification(Teronis.Collections.Synchronization.CollectionModifiedEventArgs<SuperItemType, SubItemType>) Implements ISynchronizedCollection<ItemType> IEnumerable<> IEnumerable IReadOnlyCollection<> IReadOnlyList<> INotifyCollectionSynchronizing<ItemType> INotifyCollectionModification<ItemType> INotifyCollectionChanged INotifyCollectionSynchronized<ItemType> INotifyPropertyChanged INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.SuperItemCollection.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.SynchronizingCollectionBase-2.SuperItemCollection.html",
    "title": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemCollection | Documentations",
    "keywords": "Class SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemCollection Inheritance System.Object SynchronizableCollectionBase <SuperItemType, SubItemType> SynchronizingCollectionBase.ItemCollection <SuperItemType, SubItemType> SynchronizingCollectionBase<SuperItemType, SubItemType>.SuperItemCollection Implements ISynchronizedCollection <SuperItemType> IEnumerable <SuperItemType> IEnumerable IReadOnlyCollection <SuperItemType> IReadOnlyList <SuperItemType> INotifyCollectionSynchronizing <SuperItemType> INotifyCollectionModification <SuperItemType> INotifyCollectionChanged INotifyCollectionSynchronized <SuperItemType> INotifyPropertyChanged INotifyPropertyChanging Inherited Members SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SuperItemType, SubItemType>.GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType>) SynchronizableCollectionBase<SuperItemType, SubItemType>.PropertyChanged SynchronizableCollectionBase<SuperItemType, SubItemType>.PropertyChanging SynchronizableCollectionBase<SuperItemType, SubItemType>.CollectionSynchronizing SynchronizableCollectionBase<SuperItemType, SubItemType>.CollectionModified SynchronizableCollectionBase<SuperItemType, SubItemType>.CollectionSynchronized SynchronizableCollectionBase<SuperItemType, SubItemType>.PropertyNotificationComponent SynchronizableCollectionBase<SuperItemType, SubItemType>.CollectionChangeHandler SynchronizableCollectionBase<SuperItemType, SubItemType>.InsertItem(Int32, SuperItemType) SynchronizableCollectionBase<SuperItemType, SubItemType>.SetItem(Int32, SuperItemType) SynchronizableCollectionBase<SuperItemType, SubItemType>.MoveItems(Int32, Int32, Int32) SynchronizableCollectionBase<SuperItemType, SubItemType>.Move(Int32, Int32, Int32) SynchronizableCollectionBase<SuperItemType, SubItemType>.Move(Int32, Int32) SynchronizableCollectionBase<SuperItemType, SubItemType>.DisposeItem(Int32) SynchronizableCollectionBase<SuperItemType, SubItemType>.RemoveItem(Int32) SynchronizableCollectionBase<SuperItemType, SubItemType>.ClearItems() SynchronizableCollectionBase<SuperItemType, SubItemType>.CreateCollectionModifiedEventArgs(ICollectionModification<SuperItemType, SuperItemType>) SynchronizableCollectionBase<SuperItemType, SubItemType>.InvokeCollectionSynchronizing() SynchronizableCollectionBase<SuperItemType, SubItemType>.InvokeCollectionModified(ICollectionModification<SuperItemType, SuperItemType>) SynchronizableCollectionBase<SuperItemType, SubItemType>.InvokeCollectionSynchronized() SynchronizableCollectionBase<SuperItemType, SubItemType>.CreateSynchronizedDictionary<KeyType>(Func<SuperItemType, KeyType>, IEqualityComparer<KeyType>) SynchronizableCollectionBase<SuperItemType, SubItemType>.CreateSynchronizedDictionary<KeyType>(Func<SuperItemType, KeyType>) Namespace : Teronis.Collections.Synchronization Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public class SuperItemCollection : SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SuperItemType, SubItemType>, ISynchronizedCollection<SuperItemType>, IEnumerable<SuperItemType>, IEnumerable, IReadOnlyCollection<SuperItemType>, IReadOnlyList<SuperItemType>, INotifyCollectionSynchronizing<SuperItemType>, INotifyCollectionModification<SuperItemType>, INotifyCollectionChanged, INotifyCollectionSynchronized<SuperItemType>, INotifyPropertyChanged, INotifyPropertyChanging Constructors | Improve this Doc View Source SuperItemCollection(IList<SuperItemType>, SynchronizingCollectionBase<SuperItemType, SubItemType>) Declaration public SuperItemCollection(IList<SuperItemType> list, SynchronizingCollectionBase<SuperItemType, SubItemType> synchronizingCollection) Parameters Type Name Description IList <SuperItemType> list SynchronizingCollectionBase <SuperItemType, SubItemType> synchronizingCollection Methods | Improve this Doc View Source GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType>) Declaration protected override ICollectionModification<SuperItemType, SuperItemType> GetCollectionModification(CollectionModifiedEventArgs<SuperItemType, SubItemType> args) Parameters Type Name Description CollectionModifiedEventArgs <SuperItemType, SubItemType> args Returns Type Description ICollectionModification <SuperItemType, SuperItemType> Overrides Teronis.Collections.Synchronization.SynchronizingCollectionBase<SuperItemType, SubItemType>.ItemCollection<SuperItemType, SubItemType>.GetCollectionModification(Teronis.Collections.Synchronization.CollectionModifiedEventArgs<SuperItemType, SubItemType>) Implements ISynchronizedCollection<ItemType> IEnumerable<> IEnumerable IReadOnlyCollection<> IReadOnlyList<> INotifyCollectionSynchronizing<ItemType> INotifyCollectionModification<ItemType> INotifyCollectionChanged INotifyCollectionSynchronized<ItemType> INotifyPropertyChanged INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>, IEqualityComparer<KeyType>) ISynchronizedCollection_1Extensions.CreateSynchronizedDictionary<ItemType, KeyType>(ISynchronizedCollection<ItemType>, Func<ItemType, KeyType>)"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.Utils.html",
    "title": "Namespace Teronis.Collections.Synchronization.Utils | Documentations",
    "keywords": "Namespace Teronis.Collections.Synchronization.Utils Classes IEnumerableICollectionModificationUtils"
  },
  "Teronis.DotNet/Teronis.Collections.Synchronization.Utils.IEnumerableICollectionModificationUtils.html": {
    "href": "Teronis.DotNet/Teronis.Collections.Synchronization.Utils.IEnumerableICollectionModificationUtils.html",
    "title": "Class IEnumerableICollectionModificationUtils | Documentations",
    "keywords": "Class IEnumerableICollectionModificationUtils Inheritance System.Object IEnumerableICollectionModificationUtils Namespace : Teronis.Collections.Synchronization.Utils Assembly : Teronis.NetStandard.Collections.Synchronization.dll Syntax public static class IEnumerableICollectionModificationUtils : object"
  },
  "Teronis.DotNet/Teronis.Configuration.ApplicationSettingsHelper.html": {
    "href": "Teronis.DotNet/Teronis.Configuration.ApplicationSettingsHelper.html",
    "title": "Class ApplicationSettingsHelper | Documentations",
    "keywords": "Class ApplicationSettingsHelper Inheritance System.Object ApplicationSettingsHelper Namespace : Teronis.Configuration Assembly : Teronis.NetStandard.Core.dll Syntax public class ApplicationSettingsHelper : object Constructors | Improve this Doc View Source ApplicationSettingsHelper(ApplicationSettingsBase) Declaration public ApplicationSettingsHelper(ApplicationSettingsBase settingsBase) Parameters Type Name Description ApplicationSettingsBase settingsBase Properties | Improve this Doc View Source AreSettingsUnsaved Declaration public bool AreSettingsUnsaved { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Settings Declaration public ApplicationSettingsBase Settings { get; } Property Value Type Description ApplicationSettingsBase Methods | Improve this Doc View Source DetachEventHandlers() Declaration public void DetachEventHandlers() | Improve this Doc View Source Reload() Reloads only from disk if at least one property has been changed. Declaration public void Reload() | Improve this Doc View Source Save() Saves only to disk if at least one property has been changed. Declaration public void Save() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Configuration.CachedSettingsPropertyValue-1.html": {
    "href": "Teronis.DotNet/Teronis.Configuration.CachedSettingsPropertyValue-1.html",
    "title": "Class CachedSettingsPropertyValue<PropertyType> | Documentations",
    "keywords": "Class CachedSettingsPropertyValue<PropertyType> This class creates a shallow copy of a property value from a settings instance. Inheritance System.Object CachedSettingsPropertyValue<PropertyType> Implements ICachedSettingsPropertyValue INotifyPropertyChanged Namespace : Teronis.Configuration Assembly : Teronis.NetStandard.Core.dll Syntax public class CachedSettingsPropertyValue<PropertyType> : object, ICachedSettingsPropertyValue, INotifyPropertyChanged Type Parameters Name Description PropertyType Constructors | Improve this Doc View Source CachedSettingsPropertyValue(SettingsBase, String) Declaration public CachedSettingsPropertyValue(SettingsBase settings, string name) Parameters Type Name Description SettingsBase settings System.String name | Improve this Doc View Source CachedSettingsPropertyValue(SettingsBase, String, Nullable<IEqualityComparer<PropertyType>>) Declaration public CachedSettingsPropertyValue(SettingsBase settings, string name, IEqualityComparer<PropertyType>? propertyValueEqualityComparer) Parameters Type Name Description SettingsBase settings System.String name System.Nullable < IEqualityComparer <PropertyType>> propertyValueEqualityComparer Properties | Improve this Doc View Source CachedPropertyValue Declaration public PropertyType CachedPropertyValue { get; } Property Value Type Description PropertyType | Improve this Doc View Source IsCacheSynchronous Declaration public bool IsCacheSynchronous { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NotifySettingsAboutPropertyChange You may refer to an method that notifies about changes of a property of Teronis.Configuration.CachedSettingsPropertyValue`1.settings if it does not implement already. Declaration public Action<string>? NotifySettingsAboutPropertyChange { get; set; } Property Value Type Description System.Nullable < Action < System.String >> | Improve this Doc View Source PropertyName Declaration public string PropertyName { get; } Property Value Type Description System.String | Improve this Doc View Source PropertyValue If Teronis.Configuration.CachedSettingsPropertyValue`1.settings does not implement then you should NOT bind to this property, as this class won't know about any changes made to the property of Teronis.Configuration.CachedSettingsPropertyValue`1.settings . Declaration public PropertyType PropertyValue { get; set; } Property Value Type Description PropertyType | Improve this Doc View Source PropertyValueEqualityComparer Declaration public IEqualityComparer<PropertyType> PropertyValueEqualityComparer { get; } Property Value Type Description IEqualityComparer <PropertyType> Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName | Improve this Doc View Source RefreshCachedValue() Declaration public virtual void RefreshCachedValue() | Improve this Doc View Source ResetCachedValue() Declaration public virtual void ResetCachedValue() | Improve this Doc View Source SaveToDisk() Reminder: CachedPropertyValue gets renewed by calling SaveToDisk() . Declaration public void SaveToDisk() | Improve this Doc View Source SetOriginalFromCache() Declaration public void SetOriginalFromCache() | Improve this Doc View Source SetOriginalFromDefault() Declaration public void SetOriginalFromDefault() | Improve this Doc View Source SetOriginalFromDisk() It removes property value from cache and notifies Teronis.Configuration.CachedSettingsPropertyValue`1.settings about changes from settings property \" PropertyName \". Declaration public void SetOriginalFromDisk() | Improve this Doc View Source TriggerSettingsPropertyChanged() Notifies Teronis.Configuration.CachedSettingsPropertyValue`1.settings about changes from settings property \" PropertyName \". Declaration public void TriggerSettingsPropertyChanged() Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > Explicit Interface Implementations | Improve this Doc View Source ICachedSettingsPropertyValue.CachedPropertyValue Declaration object? ICachedSettingsPropertyValue.CachedPropertyValue { get; } Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source ICachedSettingsPropertyValue.PropertyValue Declaration object? ICachedSettingsPropertyValue.PropertyValue { get; set; } Returns Type Description System.Nullable < System.Object > Implements ICachedSettingsPropertyValue INotifyPropertyChanged Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Configuration.html": {
    "href": "Teronis.DotNet/Teronis.Configuration.html",
    "title": "Namespace Teronis.Configuration | Documentations",
    "keywords": "Namespace Teronis.Configuration Classes ApplicationSettingsHelper CachedSettingsPropertyValue<PropertyType> This class creates a shallow copy of a property value from a settings instance. Interfaces ICachedSettingsPropertyValue"
  },
  "Teronis.DotNet/Teronis.Configuration.ICachedSettingsPropertyValue.html": {
    "href": "Teronis.DotNet/Teronis.Configuration.ICachedSettingsPropertyValue.html",
    "title": "Interface ICachedSettingsPropertyValue | Documentations",
    "keywords": "Interface ICachedSettingsPropertyValue Namespace : Teronis.Configuration Assembly : Teronis.NetStandard.Core.dll Syntax public interface ICachedSettingsPropertyValue : INotifyPropertyChanged Properties | Improve this Doc View Source CachedPropertyValue Declaration object? CachedPropertyValue { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source IsCacheSynchronous Declaration bool IsCacheSynchronous { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NotifySettingsAboutPropertyChange Declaration Action<string>? NotifySettingsAboutPropertyChange { get; set; } Property Value Type Description System.Nullable < Action < System.String >> | Improve this Doc View Source PropertyName Declaration string PropertyName { get; } Property Value Type Description System.String | Improve this Doc View Source PropertyValue Declaration object? PropertyValue { get; set; } Property Value Type Description System.Nullable < System.Object > Methods | Improve this Doc View Source RefreshCachedValue() Declaration void RefreshCachedValue() | Improve this Doc View Source ResetCachedValue() Declaration void ResetCachedValue() | Improve this Doc View Source SaveToDisk() Reminder: CachedPropertyValue gets renewed by calling SaveToDisk() . Declaration void SaveToDisk() | Improve this Doc View Source SetOriginalFromCache() Declaration void SetOriginalFromCache() | Improve this Doc View Source SetOriginalFromDefault() Declaration void SetOriginalFromDefault() | Improve this Doc View Source SetOriginalFromDisk() It removes property value from cache and notifies about changes from settings property \" PropertyName \". Declaration void SetOriginalFromDisk() | Improve this Doc View Source TriggerSettingsPropertyChanged() Notifies about changes from settings property \" PropertyName \". Declaration void TriggerSettingsPropertyChanged() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.CovariantTuple-2.html": {
    "href": "Teronis.DotNet/Teronis.CovariantTuple-2.html",
    "title": "Class CovariantTuple<T1, T2> | Documentations",
    "keywords": "Class CovariantTuple<T1, T2> Inheritance System.Object CovariantTuple<T1, T2> Implements ICovariantTuple <T1, T2> IComparable IStructuralComparable IStructuralEquatable Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public class CovariantTuple<T1, T2> : Tuple<T1, T2>, ICovariantTuple<T1, T2>, IComparable, IStructuralComparable, IStructuralEquatable Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source CovariantTuple(T1, T2) Declaration public CovariantTuple(T1 item1, T2 item2) Parameters Type Name Description T1 item1 T2 item2 Implements ICovariantTuple<T1, T2> IComparable IStructuralComparable IStructuralEquatable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ICovariantTupleExtensions.Deconstruct<T1, T2>(ICovariantTuple<T1, T2>, out T1, out T2)"
  },
  "Teronis.DotNet/Teronis.Data.CachedValue-1.html": {
    "href": "Teronis.DotNet/Teronis.Data.CachedValue-1.html",
    "title": "Class CachedValue<T> | Documentations",
    "keywords": "Class CachedValue<T> Inheritance System.Object WrappedValue <T> CachedValue<T> Inherited Members WrappedValue<T>.GetValue() Namespace : Teronis.Data Assembly : Teronis.NetStandard.Core.dll Syntax public class CachedValue<T> : WrappedValue<T> Type Parameters Name Description T Constructors | Improve this Doc View Source CachedValue(Func<T>) Declaration public CachedValue(Func<T> getValue) Parameters Type Name Description Func <T> getValue Properties | Improve this Doc View Source IsValueCached Declaration public bool IsValueCached { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Declaration public override T Value { get; } Property Value Type Description T Overrides Teronis.Data.WrappedValue<T>.Value Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Data.html": {
    "href": "Teronis.DotNet/Teronis.Data.html",
    "title": "Namespace Teronis.Data | Documentations",
    "keywords": "Namespace Teronis.Data Classes CachedValue<T> MutableValue<T> TypeNamePair WrappedValue<T>"
  },
  "Teronis.DotNet/Teronis.Data.MutableValue-1.html": {
    "href": "Teronis.DotNet/Teronis.Data.MutableValue-1.html",
    "title": "Class MutableValue<T> | Documentations",
    "keywords": "Class MutableValue<T> Inheritance System.Object MutableValue<T> Namespace : Teronis.Data Assembly : Teronis.NetStandard.Core.dll Syntax public class MutableValue<T> : IEquatable<T> where T : IEquatable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source MutableValue(T) Declaration public MutableValue(T value) Parameters Type Name Description T value Properties | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Equals(T) Declaration public bool Equals(T other) Parameters Type Name Description T other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source MutateValue(T) Declaration public void MutateValue(T mutation) Parameters Type Name Description T mutation | Improve this Doc View Source ToString() Declaration public override string? ToString() Returns Type Description System.Nullable < System.String > Events | Improve this Doc View Source ValueMutated Declaration public event EventHandler<T>? ValueMutated Event Type Type Description System.Nullable < EventHandler <T>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Data.TypeNamePair.html": {
    "href": "Teronis.DotNet/Teronis.Data.TypeNamePair.html",
    "title": "Class TypeNamePair | Documentations",
    "keywords": "Class TypeNamePair Inheritance System.Object TypeNamePair Namespace : Teronis.Data Assembly : Teronis.NetStandard.Core.dll Syntax public class TypeNamePair : object Constructors | Improve this Doc View Source TypeNamePair(Type, String) Declaration public TypeNamePair(Type type, string name) Parameters Type Name Description Type type System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description Type Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Data.WrappedValue-1.html": {
    "href": "Teronis.DotNet/Teronis.Data.WrappedValue-1.html",
    "title": "Class WrappedValue<T> | Documentations",
    "keywords": "Class WrappedValue<T> Inheritance System.Object WrappedValue<T> CachedValue<T> Namespace : Teronis.Data Assembly : Teronis.NetStandard.Core.dll Syntax public class WrappedValue<T> : object Type Parameters Name Description T Constructors | Improve this Doc View Source WrappedValue(T) Declaration public WrappedValue(T value) Parameters Type Name Description T value Properties | Improve this Doc View Source Value Declaration public virtual T Value { get; set; } Property Value Type Description T Methods | Improve this Doc View Source GetValue() Declaration public virtual T GetValue() Returns Type Description T Operators | Improve this Doc View Source Implicit(T to WrappedValue<T>) Declaration public static implicit operator WrappedValue<T>(T value) Parameters Type Name Description T value Returns Type Description WrappedValue <T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.DelegatedComparer-1.html": {
    "href": "Teronis.DotNet/Teronis.DelegatedComparer-1.html",
    "title": "Class DelegatedComparer<T> | Documentations",
    "keywords": "Class DelegatedComparer<T> Inheritance System.Object DelegatedComparer<T> Namespace : Teronis Assembly : Teronis.NetStandard.Collections.dll Syntax public class DelegatedComparer<T> : Comparer<T> Type Parameters Name Description T Constructors | Improve this Doc View Source DelegatedComparer(Comparison<T>) Declaration public DelegatedComparer(Comparison<T> compareHandler) Parameters Type Name Description Comparison <T> compareHandler Methods | Improve this Doc View Source Compare(T, T) Declaration public override int Compare(T arg1, T arg2) Parameters Type Name Description T arg1 T arg2 Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.html",
    "title": "Namespace Teronis.Diagnostics | Documentations",
    "keywords": "Namespace Teronis.Diagnostics Classes IDebuggerDisplayLibrary IDebuggerDisplayUtils NonZeroExitCodeException ProcessNotSpawnedException ProcessStartInfoUtils SimpleAsyncProcess SimpleProcess SimpleProcessStartInfo Interfaces IDebuggerDisplay ISimpleAsyncProcess ISimpleProcess"
  },
  "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplay.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplay.html",
    "title": "Interface IDebuggerDisplay | Documentations",
    "keywords": "Interface IDebuggerDisplay Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public interface IDebuggerDisplay Properties | Improve this Doc View Source DebuggerDisplay Declaration string DebuggerDisplay { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplayLibrary.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplayLibrary.html",
    "title": "Class IDebuggerDisplayLibrary | Documentations",
    "keywords": "Class IDebuggerDisplayLibrary Inheritance System.Object IDebuggerDisplayLibrary Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public static class IDebuggerDisplayLibrary : object Fields | Improve this Doc View Source FullGetDebuggerDisplayMethodPathWithParameterizedThis Represents the call to DebuggerDisplay as string. It is full-namespace qualified and has \"this\" as first parameter. Useful when you need to fill in a this-referenced method to DebuggerDisplay in . Declaration public const string FullGetDebuggerDisplayMethodPathWithParameterizedThis = null Field Value Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplayUtils.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.IDebuggerDisplayUtils.html",
    "title": "Class IDebuggerDisplayUtils | Documentations",
    "keywords": "Class IDebuggerDisplayUtils Inheritance System.Object IDebuggerDisplayUtils Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public static class IDebuggerDisplayUtils : object Methods | Improve this Doc View Source GetDebuggerDisplay(Nullable<Object>) Looks for IDebuggerDisplay interface implementation. If implemented, DebuggerDisplay is returned, otherwise . Declaration public static string? GetDebuggerDisplay(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Nullable < System.String >"
  },
  "Teronis.DotNet/Teronis.Diagnostics.ISimpleAsyncProcess.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.ISimpleAsyncProcess.html",
    "title": "Interface ISimpleAsyncProcess | Documentations",
    "keywords": "Interface ISimpleAsyncProcess Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public interface ISimpleAsyncProcess : IDisposable Properties | Improve this Doc View Source CommandEchoPrefix Declaration string? CommandEchoPrefix { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source EchoCommand Declaration bool EchoCommand { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasProcessStarted Declaration bool HasProcessStarted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Kill() Declaration void Kill() | Improve this Doc View Source Start() Declaration void Start() | Improve this Doc View Source WaitForExitAsync() Declaration Task WaitForExitAsync() Returns Type Description Task | Improve this Doc View Source WaitForExitButReadOutputAsync() Declaration Task<string> WaitForExitButReadOutputAsync() Returns Type Description Task < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.ISimpleProcess.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.ISimpleProcess.html",
    "title": "Interface ISimpleProcess | Documentations",
    "keywords": "Interface ISimpleProcess Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public interface ISimpleProcess : IDisposable Properties | Improve this Doc View Source CommandEchoPrefix Declaration string? CommandEchoPrefix { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source EchoCommand Declaration bool EchoCommand { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasProcessStarted Declaration bool HasProcessStarted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Kill() Declaration void Kill() | Improve this Doc View Source Start() Declaration void Start() | Improve this Doc View Source WaitForExit() Declaration void WaitForExit() | Improve this Doc View Source WaitForExitButReadOutput() Declaration string WaitForExitButReadOutput() Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.NonZeroExitCodeException.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.NonZeroExitCodeException.html",
    "title": "Class NonZeroExitCodeException | Documentations",
    "keywords": "Class NonZeroExitCodeException Inheritance System.Object NonZeroExitCodeException Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public class NonZeroExitCodeException : Exception Constructors | Improve this Doc View Source NonZeroExitCodeException(Int32) Declaration public NonZeroExitCodeException(int exitCode) Parameters Type Name Description System.Int32 exitCode | Improve this Doc View Source NonZeroExitCodeException(Int32, Nullable<String>) Declaration public NonZeroExitCodeException(int exitCode, string? message) Parameters Type Name Description System.Int32 exitCode System.Nullable < System.String > message | Improve this Doc View Source NonZeroExitCodeException(Int32, Nullable<String>, Nullable<Exception>) Declaration public NonZeroExitCodeException(int exitCode, string? message, Exception? innerException) Parameters Type Name Description System.Int32 exitCode System.Nullable < System.String > message System.Nullable < Exception > innerException Properties | Improve this Doc View Source ExitCode Declaration public int ExitCode { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.ProcessNotSpawnedException.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.ProcessNotSpawnedException.html",
    "title": "Class ProcessNotSpawnedException | Documentations",
    "keywords": "Class ProcessNotSpawnedException Inheritance System.Object ProcessNotSpawnedException Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public class ProcessNotSpawnedException : Exception Constructors | Improve this Doc View Source ProcessNotSpawnedException() Declaration public ProcessNotSpawnedException() | Improve this Doc View Source ProcessNotSpawnedException(SerializationInfo, StreamingContext) Declaration protected ProcessNotSpawnedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ProcessNotSpawnedException(String) Declaration public ProcessNotSpawnedException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ProcessNotSpawnedException(String, Exception) Declaration public ProcessNotSpawnedException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.ProcessStartInfoUtils.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.ProcessStartInfoUtils.html",
    "title": "Class ProcessStartInfoUtils | Documentations",
    "keywords": "Class ProcessStartInfoUtils Inheritance System.Object ProcessStartInfoUtils Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public static class ProcessStartInfoUtils : object Methods | Improve this Doc View Source GetExecutionInfoText(ProcessStartInfo, Nullable<String>) Declaration public static string? GetExecutionInfoText(ProcessStartInfo startInfo, string? commandEchoPrefix = null) Parameters Type Name Description ProcessStartInfo startInfo System.Nullable < System.String > commandEchoPrefix Returns Type Description System.Nullable < System.String >"
  },
  "Teronis.DotNet/Teronis.Diagnostics.SimpleAsyncProcess.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.SimpleAsyncProcess.html",
    "title": "Class SimpleAsyncProcess | Documentations",
    "keywords": "Class SimpleAsyncProcess Inheritance System.Object SimpleProcess SimpleAsyncProcess GitVersionProcess Implements ISimpleProcess ISimpleAsyncProcess IDisposable Inherited Members SimpleProcess.EchoCommand SimpleProcess.CommandEchoPrefix SimpleProcess.HasProcessStarted SimpleProcess.GetCreatedProcess() SimpleProcess.GetOutputData() SimpleProcess.CreateOutputDataBuilder() SimpleProcess.CreateNonZeroExitCodeException() SimpleProcess.Start() SimpleProcess.EnsureProcessStarted() SimpleProcess.ThrowIfNonZeroExitCode() SimpleProcess.WaitForExit() SimpleProcess.WaitForExitButReadOutput() SimpleProcess.Kill() SimpleProcess.Dispose() SimpleProcess.StartAndWaitForExit(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitButReadOutput(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitButReadOutputAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public class SimpleAsyncProcess : SimpleProcess, ISimpleProcess, ISimpleAsyncProcess, IDisposable Constructors | Improve this Doc View Source SimpleAsyncProcess(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) Declaration public SimpleAsyncProcess(SimpleProcessStartInfo processStartInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? outputReceived = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo processStartInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> outputReceived System.Nullable < Action < System.Nullable < System.String >>> errorReceived Methods | Improve this Doc View Source Dispose(Boolean) Releases all resources used by SimpleAsyncProcess . Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides SimpleProcess.Dispose(Boolean) | Improve this Doc View Source OnProcessExited(Nullable<Object>, EventArgs) Declaration protected override void OnProcessExited(object? sender, EventArgs e) Parameters Type Name Description System.Nullable < System.Object > sender EventArgs e Overrides SimpleProcess.OnProcessExited(Nullable<Object>, EventArgs) | Improve this Doc View Source OnProcessNotStarted(Exception) Declaration protected override void OnProcessNotStarted(Exception error) Parameters Type Name Description Exception error Overrides SimpleProcess.OnProcessNotStarted(Exception) | Improve this Doc View Source PrepareProcess() Declaration protected override Process PrepareProcess() Returns Type Description Process Overrides SimpleProcess.PrepareProcess() | Improve this Doc View Source WaitForExitAsync() Declaration public Task WaitForExitAsync() Returns Type Description Task | Improve this Doc View Source WaitForExitButReadOutputAsync() Declaration public Task<string> WaitForExitButReadOutputAsync() Returns Type Description Task < System.String > Implements ISimpleProcess ISimpleAsyncProcess IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.SimpleProcess.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.SimpleProcess.html",
    "title": "Class SimpleProcess | Documentations",
    "keywords": "Class SimpleProcess Inheritance System.Object SimpleProcess SimpleAsyncProcess Implements ISimpleProcess IDisposable Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public class SimpleProcess : IDisposable, ISimpleProcess, IDisposable Constructors | Improve this Doc View Source SimpleProcess(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) Declaration public SimpleProcess(SimpleProcessStartInfo processStartInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? outputReceived = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo processStartInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> outputReceived System.Nullable < Action < System.Nullable < System.String >>> errorReceived Properties | Improve this Doc View Source CommandEchoPrefix Declaration public string? CommandEchoPrefix { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source EchoCommand Declaration public bool EchoCommand { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasProcessStarted Declaration public bool HasProcessStarted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateNonZeroExitCodeException() Declaration protected NonZeroExitCodeException CreateNonZeroExitCodeException() Returns Type Description NonZeroExitCodeException | Improve this Doc View Source CreateOutputDataBuilder() You may create it before the process starts. Declaration protected void CreateOutputDataBuilder() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc View Source EnsureProcessStarted() Declaration protected void EnsureProcessStarted() | Improve this Doc View Source GetCreatedProcess() Declaration protected Process GetCreatedProcess() Returns Type Description Process | Improve this Doc View Source GetOutputData() Declaration protected string GetOutputData() Returns Type Description System.String | Improve this Doc View Source Kill() Declaration public void Kill() | Improve this Doc View Source OnProcessExited(Nullable<Object>, EventArgs) Declaration protected virtual void OnProcessExited(object? sender, EventArgs e) Parameters Type Name Description System.Nullable < System.Object > sender EventArgs e | Improve this Doc View Source OnProcessNotStarted(Exception) When an error occurred during process start. Declaration protected virtual void OnProcessNotStarted(Exception error) Parameters Type Name Description Exception error | Improve this Doc View Source PrepareProcess() Declaration protected virtual Process PrepareProcess() Returns Type Description Process | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source StartAndWaitForExit(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) Declaration public static void StartAndWaitForExit(SimpleProcessStartInfo startInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? outputReceived = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo startInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> outputReceived System.Nullable < Action < System.Nullable < System.String >>> errorReceived | Improve this Doc View Source StartAndWaitForExitAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) Declaration public static Task StartAndWaitForExitAsync(SimpleProcessStartInfo startInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? outputReceived = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo startInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> outputReceived System.Nullable < Action < System.Nullable < System.String >>> errorReceived Returns Type Description Task | Improve this Doc View Source StartAndWaitForExitButReadOutput(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) Declaration public static string StartAndWaitForExitButReadOutput(SimpleProcessStartInfo startInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo startInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> errorReceived Returns Type Description System.String | Improve this Doc View Source StartAndWaitForExitButReadOutputAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) Declaration public static Task<string> StartAndWaitForExitButReadOutputAsync(SimpleProcessStartInfo startInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? errorReceived = null) Parameters Type Name Description SimpleProcessStartInfo startInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> errorReceived Returns Type Description Task < System.String > | Improve this Doc View Source ThrowIfNonZeroExitCode() Declaration protected void ThrowIfNonZeroExitCode() Exceptions Type Condition NonZeroExitCodeException | Improve this Doc View Source WaitForExit() Declaration public void WaitForExit() Exceptions Type Condition NonZeroExitCodeException | Improve this Doc View Source WaitForExitButReadOutput() Declaration public string WaitForExitButReadOutput() Returns Type Description System.String Implements ISimpleProcess IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Diagnostics.SimpleProcessStartInfo.html": {
    "href": "Teronis.DotNet/Teronis.Diagnostics.SimpleProcessStartInfo.html",
    "title": "Class SimpleProcessStartInfo | Documentations",
    "keywords": "Class SimpleProcessStartInfo Inheritance System.Object SimpleProcessStartInfo GitVersionProcessStartInfo Namespace : Teronis.Diagnostics Assembly : Teronis.NetStandard.Core.dll Syntax public class SimpleProcessStartInfo : object Constructors | Improve this Doc View Source SimpleProcessStartInfo(String, Nullable<String>, Nullable<String>) Declaration public SimpleProcessStartInfo(string name, string? args = null, string? workingDirectory = null) Parameters Type Name Description System.String name System.Nullable < System.String > args System.Nullable < System.String > workingDirectory The working directory is not used to find the executable. Instead, its value applies to the process that is started and only has meaning within the context of the new process. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.ECancelScanIteration.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.ECancelScanIteration.html",
    "title": "Enum ECancelScanIteration | Documentations",
    "keywords": "Enum ECancelScanIteration Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Drawing.dll Syntax public enum ECancelScanIteration : int Fields Name Description None OutOfIndex"
  },
  "Teronis.DotNet/Teronis.Drawing.EPointType.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.EPointType.html",
    "title": "Enum EPointType | Documentations",
    "keywords": "Enum EPointType Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Drawing.dll Syntax public enum EPointType : int Fields Name Description Client Relative Screen"
  },
  "Teronis.DotNet/Teronis.Drawing.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.html",
    "title": "Namespace Teronis.Drawing | Documentations",
    "keywords": "Namespace Teronis.Drawing Classes XYEqualityComparer XYZEqualityComparer Structs XY XYZ Interfaces IBitmapData ISnapshot IXY IXYZ Enums ECancelScanIteration EPointType"
  },
  "Teronis.DotNet/Teronis.Drawing.IBitmapData.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.IBitmapData.html",
    "title": "Interface IBitmapData | Documentations",
    "keywords": "Interface IBitmapData Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Drawing.dll Syntax public interface IBitmapData : IDisposable Properties | Improve this Doc View Source Rectangle Declaration Rectangle Rectangle { get; } Property Value Type Description Rectangle | Improve this Doc View Source ScreenData Declaration byte *ScreenData { get; } Property Value Type Description System.Byte * | Improve this Doc View Source Stride Declaration int Stride { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.ISnapshot.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.ISnapshot.html",
    "title": "Interface ISnapshot | Documentations",
    "keywords": "Interface ISnapshot Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Drawing.dll Syntax public interface ISnapshot Properties | Improve this Doc View Source BitmapData Declaration IBitmapData BitmapData { get; } Property Value Type Description IBitmapData Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.IXY.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.IXY.html",
    "title": "Interface IXY | Documentations",
    "keywords": "Interface IXY Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public interface IXY : IEquatable<IXY> Properties | Improve this Doc View Source X Declaration int X { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration int Y { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.IXYZ.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.IXYZ.html",
    "title": "Interface IXYZ | Documentations",
    "keywords": "Interface IXYZ Inherited Members IXY.X IXY.Y Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public interface IXYZ : IXY, IEquatable<IXY>, IEquatable<IXYZ> Properties | Improve this Doc View Source Z Declaration int Z { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.Utils.FontUtils.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.Utils.FontUtils.html",
    "title": "Class FontUtils | Documentations",
    "keywords": "Class FontUtils Inheritance System.Object FontUtils Namespace : Teronis.Drawing.Utils Assembly : Teronis.NetStandard.Drawing.dll Syntax public static class FontUtils : object Methods | Improve this Doc View Source GetAdjustedFont(Graphics, String, Font, Int32, Int32, Int32, Boolean) Declaration public static Font GetAdjustedFont(Graphics graphicRef, string graphicString, Font originalFont, int containerWidth, int maxFontSize, int minFontSize, bool smallestOnFail) Parameters Type Name Description Graphics graphicRef System.String graphicString Font originalFont System.Int32 containerWidth System.Int32 maxFontSize System.Int32 minFontSize System.Boolean smallestOnFail Returns Type Description Font"
  },
  "Teronis.DotNet/Teronis.Drawing.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.Utils.html",
    "title": "Namespace Teronis.Drawing.Utils | Documentations",
    "keywords": "Namespace Teronis.Drawing.Utils Classes FontUtils"
  },
  "Teronis.DotNet/Teronis.Drawing.XY.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.XY.html",
    "title": "Struct XY | Documentations",
    "keywords": "Struct XY Implements IXY IEquatable < IXY > Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public struct XY : IXY, IEquatable<IXY> Constructors | Improve this Doc View Source XY(Int32, Int32) Declaration public XY(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y | Improve this Doc View Source XY(IXY) Declaration public XY(IXY xy) Parameters Type Name Description IXY xy Fields | Improve this Doc View Source Empty Declaration public static readonly XY Empty Field Value Type Description XY Properties | Improve this Doc View Source X Declaration public int X { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source Equals(IXY) Declaration public bool Equals(IXY other) Parameters Type Name Description IXY other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IXY IEquatable<>"
  },
  "Teronis.DotNet/Teronis.Drawing.XYEqualityComparer.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.XYEqualityComparer.html",
    "title": "Class XYEqualityComparer | Documentations",
    "keywords": "Class XYEqualityComparer Inheritance System.Object XYEqualityComparer Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public class XYEqualityComparer : EqualityComparer<IXY> Properties | Improve this Doc View Source Default Declaration public static XYEqualityComparer Default { get; } Property Value Type Description XYEqualityComparer Methods | Improve this Doc View Source Equals(IXY, IXY) Declaration public override bool Equals(IXY x, IXY y) Parameters Type Name Description IXY x IXY y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(IXY) Declaration public override int GetHashCode(IXY obj) Parameters Type Name Description IXY obj Returns Type Description System.Int32 | Improve this Doc View Source ToString(IXY) Declaration public string ToString(IXY xy) Parameters Type Name Description IXY xy Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Drawing.XYZ.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.XYZ.html",
    "title": "Struct XYZ | Documentations",
    "keywords": "Struct XYZ Implements IXYZ IXY IEquatable < IXY > IEquatable < IXYZ > Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public struct XYZ : IXYZ, IXY, IEquatable<IXY>, IEquatable<IXYZ> Constructors | Improve this Doc View Source XYZ(Int32, Int32, Int32) Declaration public XYZ(int x, int y, int z) Parameters Type Name Description System.Int32 x System.Int32 y System.Int32 z Fields | Improve this Doc View Source Empty Declaration public static readonly XYZ Empty Field Value Type Description XYZ Properties | Improve this Doc View Source X Declaration public int X { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Z Declaration public int Z { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source Equals(IXY) Declaration public bool Equals(IXY other) Parameters Type Name Description IXY other Returns Type Description System.Boolean | Improve this Doc View Source Equals(IXYZ) Declaration public bool Equals(IXYZ other) Parameters Type Name Description IXYZ other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IXYZ IXY IEquatable<> IEquatable<>"
  },
  "Teronis.DotNet/Teronis.Drawing.XYZEqualityComparer.html": {
    "href": "Teronis.DotNet/Teronis.Drawing.XYZEqualityComparer.html",
    "title": "Class XYZEqualityComparer | Documentations",
    "keywords": "Class XYZEqualityComparer Inheritance System.Object XYZEqualityComparer Namespace : Teronis.Drawing Assembly : Teronis.NetStandard.Core.dll Syntax public class XYZEqualityComparer : EqualityComparer<IXYZ> Properties | Improve this Doc View Source Default Declaration public static XYZEqualityComparer Default { get; } Property Value Type Description XYZEqualityComparer Methods | Improve this Doc View Source Equals(IXYZ, IXYZ) Declaration public override bool Equals(IXYZ x, IXYZ y) Parameters Type Name Description IXYZ x IXYZ y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(IXYZ) Declaration public override int GetHashCode(IXYZ obj) Parameters Type Name Description IXYZ obj Returns Type Description System.Int32 | Improve this Doc View Source ToString(IXYZ) Declaration public string ToString(IXYZ xyz) Parameters Type Name Description IXYZ xyz Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-1.DeferredCreateBuilder-1.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-1.DeferredCreateBuilder-1.html",
    "title": "Struct CollectionConstantPredicateBuilder<SourceType>.DeferredCreateBuilder<ComparisonItemType> | Documentations",
    "keywords": "Struct CollectionConstantPredicateBuilder<SourceType>.DeferredCreateBuilder<ComparisonItemType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public struct DeferredCreateBuilder<ComparisonItemType> Type Parameters Name Description ComparisonItemType Constructors | Improve this Doc View Source DeferredCreateBuilder(IEnumerable<ComparisonItemType>) Declaration public DeferredCreateBuilder(IEnumerable<ComparisonItemType> comparisonItems) Parameters Type Name Description IEnumerable <ComparisonItemType> comparisonItems Methods | Improve this Doc View Source DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression>, Expression<SourceInConstantPredicateDelegate<SourceType, ComparisonItemType>>) Defines a predicate per item. The predicates are combined via consecutiveItemBinaryExpressionFactory . Declaration public CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression> consecutiveItemBinaryExpressionFactory, Expression<SourceInConstantPredicateDelegate<SourceType, ComparisonItemType>> sourceAndComparisonItemPredicate) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > consecutiveItemBinaryExpressionFactory The binary expression factory that combines an item predicate, an item predicate that is arisen from Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder`1.DeferredCreateBuilder`1.comparisonItems and that encloses every item predicate of item predicates of child collection and their collections, with another item predicate arisen from Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder`1.DeferredCreateBuilder`1.comparisonItems that encloses every item predicate of item predicates of child collection and their collections. Expression < SourceInConstantPredicateDelegate <SourceType, ComparisonItemType>> sourceAndComparisonItemPredicate The expression that represents the predicate. Returns Type Description CollectionConstantPredicateBuilder <SourceType, ComparisonItemType> The origin builder from which you called this method."
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-1.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-1.html",
    "title": "Class CollectionConstantPredicateBuilder<SourceType> | Documentations",
    "keywords": "Class CollectionConstantPredicateBuilder<SourceType> Inheritance System.Object CollectionConstantPredicateBuilder<SourceType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public static class CollectionConstantPredicateBuilder<SourceType> : object Type Parameters Name Description SourceType Methods | Improve this Doc View Source CreateFromCollection<ComparisonItemType>(IEnumerable<ComparisonItemType>) Creates a collection constant predicate builder from a non-null and non-empty collection. Otherwise will be thrown. When starting with a non-null and non-empty colection you are able to use ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) and this collection can then be null or empy. Declaration public static CollectionConstantPredicateBuilder<SourceType>.DeferredCreateBuilder<ComparisonItemType> CreateFromCollection<ComparisonItemType>(IEnumerable<ComparisonItemType> comparisonItems) Parameters Type Name Description IEnumerable <ComparisonItemType> comparisonItems A collection of comparison items with at least one item. Returns Type Description CollectionConstantPredicateBuilder.DeferredCreateBuilder <ComparisonItemType> A deferred collection constant predicate builder. Type Parameters Name Description ComparisonItemType The type of an item of comparisonItems ."
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.DeferredThenCreateBuilder-1.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.DeferredThenCreateBuilder-1.html",
    "title": "Struct CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.DeferredThenCreateBuilder<ThenComparisonItemType> | Documentations",
    "keywords": "Struct CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.DeferredThenCreateBuilder<ThenComparisonItemType> Implements CollectionConstantPredicateBuilder.IDeferredThenCreateCollectionConstantBuilder <ThenComparisonItemType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public struct DeferredThenCreateBuilder<ThenComparisonItemType> : CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> Type Parameters Name Description ThenComparisonItemType Constructors | Improve this Doc View Source DeferredThenCreateBuilder(CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>, Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) Declaration public DeferredThenCreateBuilder(CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> currentBuilder, Func<Expression, Expression, BinaryExpression> parentBinaryExpressionFactory, Func<ComparisonItemType, IEnumerable<ThenComparisonItemType>?> comparisonItemsFactory, ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags) Parameters Type Name Description CollectionConstantPredicateBuilder <SourceType, ComparisonItemType> currentBuilder Func < Expression , Expression , BinaryExpression > parentBinaryExpressionFactory Func <ComparisonItemType, System.Nullable < IEnumerable <ThenComparisonItemType>>> comparisonItemsFactory ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags Methods | Improve this Doc View Source ThenDefinePredicatePerItem(Func<Expression, Expression, BinaryExpression>, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>>, Nullable<Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>>) Declaration public CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> ThenDefinePredicatePerItem(Func<Expression, Expression, BinaryExpression> consecutiveItemBinaryExpressionFactory, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate, Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>? thenSourcePredicate = null) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > consecutiveItemBinaryExpressionFactory Expression < SourceInConstantPredicateDelegate <SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate System.Nullable < Action < IThenInCollectionConstantPredicateBuilder <SourceType, ThenComparisonItemType>>> thenSourcePredicate Returns Type Description CollectionConstantPredicateBuilder <SourceType, ComparisonItemType> Explicit Interface Implementations | Improve this Doc View Source CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType>.DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression>, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>>, Nullable<Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>>) Declaration IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType>.DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression> consecutiveItemBinaryExpressionFactory, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate, Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>? thenSourcePredicate) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > consecutiveItemBinaryExpressionFactory Expression < SourceInConstantPredicateDelegate <SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate System.Nullable < Action < IThenInCollectionConstantPredicateBuilder <SourceType, ThenComparisonItemType>>> thenSourcePredicate Returns Type Description IThenInCollectionConstantPredicateBuilder <SourceType, ComparisonItemType> Implements CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType>"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.html",
    "title": "Class CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> | Documentations",
    "keywords": "Class CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> The collection constant predicate builder produces one predicate that includes the comparison between the source of type SourceType and each collection item of type ComparisonItemType . Each collection item can be itself a source of type ComparisonItemType and therefore be compared to collection item of a collection that is member of ComparisonItemType and so on. (e.g. src1.A == cmpItem1.Z Inheritance System.Object CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> Implements IThenInCollectionConstantPredicateBuilder <SourceType, ComparisonItemType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public class CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> : object, IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType>, IChildCollectionConstantPredicateBuilder Type Parameters Name Description SourceType ComparisonItemType Constructors | Improve this Doc View Source CollectionConstantPredicateBuilder(Func<Expression, Expression, BinaryExpression>, IEnumerable<ComparisonItemType>, Expression<SourceInConstantPredicateDelegate<SourceType, ComparisonItemType>>) Creates a collection constant predicate builder from a non-null and non-empty collection. Otherwise will be thrown. When starting with a non-null and non-empty colection you are able to use ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) and this collection can then be null or empy. Declaration public CollectionConstantPredicateBuilder(Func<Expression, Expression, BinaryExpression> consecutiveItemBinaryExpressionFactory, IEnumerable<ComparisonItemType> comparisonItems, Expression<SourceInConstantPredicateDelegate<SourceType, ComparisonItemType>> sourceAndComparisonItemPredicate) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > consecutiveItemBinaryExpressionFactory The binary expression factory that combines an item predicate, an item predicate that is arisen from comparisonItems and that encloses every item predicate of item predicates of child collection and their collections, with another item predicate arisen from comparisonItems that encloses every item predicate of item predicates of child collection and their collections. IEnumerable <ComparisonItemType> comparisonItems A collection of comparison values with at least one item. Otherwise an is thrown. Expression < SourceInConstantPredicateDelegate <SourceType, ComparisonItemType>> sourceAndComparisonItemPredicate The expression that represents the predicate. Methods | Improve this Doc View Source BuildBodyExpression(Nullable<Func<Expression, Expression>>) Builds the body expression for a possible lambda expression. Declaration public Expression BuildBodyExpression(Func<Expression, Expression>? concatenatedExpressionFactory = null) Parameters Type Name Description System.Nullable < Func < Expression , Expression >> concatenatedExpressionFactory Manipulates the concatenated expression result. Returns Type Description Expression The body expression for a possible lambda expression. | Improve this Doc View Source BuildBodyExpression<TargetType>(Action<ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType>>, Nullable<Func<Expression, Expression>>) Builds the body expression for a possible lambda expression. Declaration public Expression BuildBodyExpression<TargetType>(Action<ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType>> configureMemberMappings, Func<Expression, Expression>? concatenatedExpressionFactory = null) Parameters Type Name Description Action < ICollectionConstantPredicateBuilderExpressionMapper <SourceType, TargetType>> configureMemberMappings Lets you map source type member accesses to target type member accesses. System.Nullable < Func < Expression , Expression >> concatenatedExpressionFactory Manipulates the concatenated expression result. Returns Type Description Expression The body expression for a possible lambda expression. Type Parameters Name Description TargetType The target type you can use for mapping in configureMemberMappings . | Improve this Doc View Source BuildLambdaExpression(Nullable<Func<Expression, Expression>>) Builds the lambda expression. Declaration public Expression<Func<SourceType, bool>> BuildLambdaExpression(Func<Expression, Expression>? concatenatedExpressionFactory = null) Parameters Type Name Description System.Nullable < Func < Expression , Expression >> concatenatedExpressionFactory Manipulates the concatenated expression result. Returns Type Description Expression < Func <SourceType, System.Boolean >> The lambda expression. | Improve this Doc View Source BuildLambdaExpression<TargetType>(Action<ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType>>, Nullable<Func<Expression, Expression>>) Builds the lambda expression. Declaration public Expression<Func<TargetType, bool>> BuildLambdaExpression<TargetType>(Action<ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType>> configureMemberMappings, Func<Expression, Expression>? concatenatedExpressionFactory = null) Parameters Type Name Description Action < ICollectionConstantPredicateBuilderExpressionMapper <SourceType, TargetType>> configureMemberMappings Lets you map source type member accesses to target type member accesses. System.Nullable < Func < Expression , Expression >> concatenatedExpressionFactory Manipulates the concatenated expression result. Returns Type Description Expression < Func <TargetType, System.Boolean >> The lambda expression. Type Parameters Name Description TargetType The target type you can use for mapping in configureMemberMappings . | Improve this Doc View Source concatenateComparisonExpressions() Declaration protected Expression concatenateComparisonExpressions() Returns Type Description Expression | Improve this Doc View Source ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) Creates a deferred collection constant predicate builder from comparisonItemsFactory that might return a null or empty collection. Declaration public CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.DeferredThenCreateBuilder<ThenComparisonItemType> ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression> parentBinaryExpressionFactory, Func<ComparisonItemType, IEnumerable<ThenComparisonItemType>?> comparisonItemsFactory, ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags = default(ComparisonItemsBehaviourFlags)) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > parentBinaryExpressionFactory Func <ComparisonItemType, System.Nullable < IEnumerable <ThenComparisonItemType>>> comparisonItemsFactory A collection expression that might return a comparison value list with at least one item. ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags Returns Type Description CollectionConstantPredicateBuilder.DeferredThenCreateBuilder <ThenComparisonItemType> A deferred collection constant predicate builder. Type Parameters Name Description ThenComparisonItemType The type of an item of the return value of comparisonItemsFactory . Explicit Interface Implementations | Improve this Doc View Source IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) Declaration CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression> parentBinaryExpressionFactory, Func<ComparisonItemType, IEnumerable<ThenComparisonItemType>?> comparisonItemsFactory, ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > parentBinaryExpressionFactory Func <ComparisonItemType, System.Nullable < IEnumerable <ThenComparisonItemType>>> comparisonItemsFactory ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags Returns Type Description CollectionConstantPredicateBuilder.IDeferredThenCreateCollectionConstantBuilder <ThenComparisonItemType> Type Parameters Name Description ThenComparisonItemType Implements IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.IDeferredThenCreateCollectionConstantBuilder-1.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.CollectionConstantPredicateBuilder-2.IDeferredThenCreateCollectionConstantBuilder-1.html",
    "title": "Interface CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> | Documentations",
    "keywords": "Interface CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public interface IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> Type Parameters Name Description ThenComparisonItemType Methods | Improve this Doc View Source DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression>, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>>, Nullable<Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>>) Defines predicate for each item in previous selected collection. Declaration IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> DefinePredicatePerItem(Func<Expression, Expression, BinaryExpression> consecutiveItemBinaryExpressionFactory, Expression<SourceInConstantPredicateDelegate<SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate, Action<IThenInCollectionConstantPredicateBuilder<SourceType, ThenComparisonItemType>>? thenSourcePredicate = null) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > consecutiveItemBinaryExpressionFactory Expression < SourceInConstantPredicateDelegate <SourceType, ThenComparisonItemType>> sourceAndComparisonItemPredicate System.Nullable < Action < IThenInCollectionConstantPredicateBuilder <SourceType, ThenComparisonItemType>>> thenSourcePredicate Returns Type Description IThenInCollectionConstantPredicateBuilder <SourceType, ComparisonItemType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.ComparisonItemsBehaviourFlags.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.ComparisonItemsBehaviourFlags.html",
    "title": "Enum ComparisonItemsBehaviourFlags | Documentations",
    "keywords": "Enum ComparisonItemsBehaviourFlags Controls the behaviour of the collection of comparison items. Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public enum ComparisonItemsBehaviourFlags : int Fields Name Description EmptyLeadsToFalse If the collection of the comparison items is empty, the boolean expression branch for each each item won't be created. Instead an expression is used that leads to false. NullLeadsToFalse If the collection of the comparison items is null, the boolean expression branch for each each item won't be created. Instead an expression is used that leads to false. NullOrEmptyLeadsToFalse If the collection of the comparison items is null or empty, the boolean expression branch for each each item won't be created. Instead an expression is used that leads to false. NullOrEmptyLeadsToSkip If the collection of the comparison items is null or empty, the boolean expression branch for each item won't be created."
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.html",
    "title": "Namespace Teronis.EntityFrameworkCore.Query | Documentations",
    "keywords": "Namespace Teronis.EntityFrameworkCore.Query Classes CollectionConstantPredicateBuilder<SourceType> CollectionConstantPredicateBuilder<SourceType, ComparisonItemType> The collection constant predicate builder produces one predicate that includes the comparison between the source of type SourceType and each collection item of type ComparisonItemType . Each collection item can be itself a source of type ComparisonItemType and therefore be compared to collection item of a collection that is member of ComparisonItemType and so on. (e.g. src1.A == cmpItem1.Z IDeterminedIncludableQueryableExtensions IQueryableExtensions Structs CollectionConstantPredicateBuilder<SourceType>.DeferredCreateBuilder<ComparisonItemType> CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.DeferredThenCreateBuilder<ThenComparisonItemType> Interfaces CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType> IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> Enums ComparisonItemsBehaviourFlags Controls the behaviour of the collection of comparison items."
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.ICollectionConstantPredicateBuilderExpressionMapper-2.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.ICollectionConstantPredicateBuilderExpressionMapper-2.html",
    "title": "Interface ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType> | Documentations",
    "keywords": "Interface ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType> Inherited Members Teronis.Linq.Expressions.IParameterReplacingExpressionMapper<SourceType, TargetType>.MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<>, Expression<>) IExpressionMapper.Map(Expression, Expression) IExpressionMapper.MapBody(LambdaExpression, LambdaExpression) Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public interface ICollectionConstantPredicateBuilderExpressionMapper<SourceType, TargetType> : IParameterReplacableExpressionMapper<SourceType, TargetType>, IParameterReplacingExpressionMapper<SourceType, TargetType>, IExpressionMapper Type Parameters Name Description SourceType TargetType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IDeterminedIncludableQueryable-2.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IDeterminedIncludableQueryable-2.html",
    "title": "Interface IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> | Documentations",
    "keywords": "Interface IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public interface IDeterminedIncludableQueryable<out EntityType, out PreviousPropertyType> where EntityType : class Type Parameters Name Description EntityType PreviousPropertyType Properties | Improve this Doc View Source Determinator Declaration bool Determinator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DeterminedQuery Declaration IQueryable<EntityType> DeterminedQuery { get; } Property Value Type Description IQueryable <EntityType> | Improve this Doc View Source IncludedQueryFactory Declaration Func<IIncludableQueryable<EntityType, PreviousPropertyType>> IncludedQueryFactory { get; } Property Value Type Description Func < IIncludableQueryable <EntityType, PreviousPropertyType>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IDeterminedIncludableQueryableExtensions.IncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<EntityType, PropertyType>>, Boolean) IDeterminedIncludableQueryableExtensions.Include<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<EntityType, PropertyType>>) IDeterminedIncludableQueryableExtensions.ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean)"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IDeterminedIncludableQueryableExtensions.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IDeterminedIncludableQueryableExtensions.html",
    "title": "Class IDeterminedIncludableQueryableExtensions | Documentations",
    "keywords": "Class IDeterminedIncludableQueryableExtensions Inheritance System.Object IDeterminedIncludableQueryableExtensions Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public static class IDeterminedIncludableQueryableExtensions : object Methods | Improve this Doc View Source Include<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<EntityType, PropertyType>>) Specifies related entities to include in the query results. The navigation property to be included is specified starting with the type of entity being queried ( EntityType ). If you wish to include additional types based on the navigation properties of the type being included, then chain a call to ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) after this call. Declaration public static IIncludableQueryable<EntityType, PropertyType> Include<EntityType, PreviousPropertyType, PropertyType>(this IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> determinedQuery, Expression<Func<EntityType, PropertyType>> includePath) where EntityType : class Parameters Type Name Description IDeterminedIncludableQueryable <EntityType, PreviousPropertyType> determinedQuery The source query. Expression < Func <EntityType, PropertyType>> includePath A lambda expression representing the navigation property to be included Returns Type Description IIncludableQueryable <EntityType, PropertyType> A new includable query with related entity to be included. Type Parameters Name Description EntityType The type of entity being queried. PreviousPropertyType PropertyType The type of related entity to be included. | Improve this Doc View Source IncludeIf<EntityType, PropertyType>(IQueryable<EntityType>, Expression<Func<EntityType, PropertyType>>, Boolean) Specifies related entities to include in the query results. The navigation property to be included is specified starting with the type of entity being queried ( EntityType ). If you wish to include additional types based on the navigation properties of the type being included, then chain a call to ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) after this call. Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> IncludeIf<EntityType, PropertyType>(this IQueryable<EntityType> query, Expression<Func<EntityType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IQueryable <EntityType> query The source query. Expression < Func <EntityType, PropertyType>> includePath A lambda expression representing the navigation property to be included System.Boolean determinator A boolean that determines the related entity being included or not. Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> A new includable query with related entity to be included if determinator is true. Type Parameters Name Description EntityType The type of entity being queried. PropertyType The type of related entity to be included. | Improve this Doc View Source IncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<EntityType, PropertyType>>, Boolean) Specifies related entities to include in the query results. The navigation property to be included is specified starting with the type of entity being queried ( EntityType ). If you wish to include additional types based on the navigation properties of the type being included, then chain a call to ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) after this call. Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> IncludeIf<EntityType, PreviousPropertyType, PropertyType>(this IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> determinedQuery, Expression<Func<EntityType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IDeterminedIncludableQueryable <EntityType, PreviousPropertyType> determinedQuery The source query. Expression < Func <EntityType, PropertyType>> includePath A lambda expression representing the navigation property to be included System.Boolean determinator A boolean that determines the related entity being included or not. Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> A new includable query with related entity to be included if determinator is true. Type Parameters Name Description EntityType The type of entity being queried. PreviousPropertyType PropertyType The type of related entity to be included. | Improve this Doc View Source ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(this IIncludableQueryable<EntityType, PreviousPropertyType> query, Expression<Func<PreviousPropertyType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IIncludableQueryable <EntityType, PreviousPropertyType> query Expression < Func <PreviousPropertyType, PropertyType>> includePath System.Boolean determinator Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> Type Parameters Name Description EntityType PreviousPropertyType PropertyType | Improve this Doc View Source ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(this IIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>> query, Expression<Func<PreviousPropertyType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IIncludableQueryable <EntityType, IEnumerable <PreviousPropertyType>> query Expression < Func <PreviousPropertyType, PropertyType>> includePath System.Boolean determinator Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> Type Parameters Name Description EntityType PreviousPropertyType PropertyType | Improve this Doc View Source ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, PreviousPropertyType>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(this IDeterminedIncludableQueryable<EntityType, PreviousPropertyType> determinedQuery, Expression<Func<PreviousPropertyType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IDeterminedIncludableQueryable <EntityType, PreviousPropertyType> determinedQuery Expression < Func <PreviousPropertyType, PropertyType>> includePath System.Boolean determinator Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> Type Parameters Name Description EntityType PreviousPropertyType PropertyType | Improve this Doc View Source ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(IDeterminedIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>>, Expression<Func<PreviousPropertyType, PropertyType>>, Boolean) Declaration public static IDeterminedIncludableQueryable<EntityType, PropertyType> ThenIncludeIf<EntityType, PreviousPropertyType, PropertyType>(this IDeterminedIncludableQueryable<EntityType, IEnumerable<PreviousPropertyType>> determinedQuery, Expression<Func<PreviousPropertyType, PropertyType>> includePath, bool determinator) where EntityType : class Parameters Type Name Description IDeterminedIncludableQueryable <EntityType, IEnumerable <PreviousPropertyType>> determinedQuery Expression < Func <PreviousPropertyType, PropertyType>> includePath System.Boolean determinator Returns Type Description IDeterminedIncludableQueryable <EntityType, PropertyType> Type Parameters Name Description EntityType PreviousPropertyType PropertyType"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IQueryableExtensions.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IQueryableExtensions.html",
    "title": "Class IQueryableExtensions | Documentations",
    "keywords": "Class IQueryableExtensions Inheritance System.Object IQueryableExtensions Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public static class IQueryableExtensions : object Methods | Improve this Doc View Source HasOneWithMany<EntityType, OneType, FlatManyType>(IQueryable<EntityType>, Expression<Func<EntityType, OneType>>, Expression<Func<EntityType, FlatManyType>>, Nullable<IEnumerable<ICovariantKeyValuePair<IYetNullable<OneType>, Nullable<IEnumerable<FlatManyType>>>>>, ComparisonItemsBehaviourFlags) This method is very complicated but listen: keyOneKeyManyEnumerablePairs is going to be flattened down to be compatible with EF Core - a sub query will be made of it. OneType must be a part of EntityType . getValue is the \"pointer\" of such part and is used in expression tree for EF Core. Accessing anything other than EntityType in scope of getValue is strictly prohibited. FlatManyType must be a part of EntityType . getFlattenedValue is the \"pointer\" of such part and is used in expression tree for EF Core. Accessing anything other than EntityType in scope of getValue is strictly prohibited. Declaration public static IQueryable<EntityType> HasOneWithMany<EntityType, OneType, FlatManyType>(this IQueryable<EntityType> query, Expression<Func<EntityType, OneType>> getValue, Expression<Func<EntityType, FlatManyType>> getFlattenedValue, IEnumerable<ICovariantKeyValuePair<IYetNullable<OneType>, IEnumerable<FlatManyType>?>>? keyOneKeyManyEnumerablePairs, ComparisonItemsBehaviourFlags keyManyEnumerableBehvaiourFlags = default(ComparisonItemsBehaviourFlags)) Parameters Type Name Description IQueryable <EntityType> query Expression < Func <EntityType, OneType>> getValue Expression < Func <EntityType, FlatManyType>> getFlattenedValue System.Nullable < IEnumerable < ICovariantKeyValuePair < IYetNullable <OneType>, System.Nullable < IEnumerable <FlatManyType>>>>> keyOneKeyManyEnumerablePairs ComparisonItemsBehaviourFlags keyManyEnumerableBehvaiourFlags Returns Type Description IQueryable <EntityType> Type Parameters Name Description EntityType OneType FlatManyType"
  },
  "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IThenInCollectionConstantPredicateBuilder-2.html": {
    "href": "Teronis.DotNet/Teronis.EntityFrameworkCore.Query.IThenInCollectionConstantPredicateBuilder-2.html",
    "title": "Interface IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> | Documentations",
    "keywords": "Interface IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> Namespace : Teronis.EntityFrameworkCore.Query Assembly : Teronis.NetStandard.EntityFrameworkCore.Query.dll Syntax public interface IThenInCollectionConstantPredicateBuilder<SourceType, ComparisonItemType> Type Parameters Name Description SourceType ComparisonItemType Methods | Improve this Doc View Source ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression>, Func<ComparisonItemType, Nullable<IEnumerable<ThenComparisonItemType>>>, ComparisonItemsBehaviourFlags) Creates a deferred collection constant predicate builder from comparisonItemsFactory that might return a null or empty collection. Declaration CollectionConstantPredicateBuilder<SourceType, ComparisonItemType>.IDeferredThenCreateCollectionConstantBuilder<ThenComparisonItemType> ThenCreateFromCollection<ThenComparisonItemType>(Func<Expression, Expression, BinaryExpression> parentBinaryExpressionFactory, Func<ComparisonItemType, IEnumerable<ThenComparisonItemType>?> comparisonItemsFactory, ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags) Parameters Type Name Description Func < Expression , Expression , BinaryExpression > parentBinaryExpressionFactory The binary expression factory combines a collection predicate with a previous collection predicate. Func <ComparisonItemType, System.Nullable < IEnumerable <ThenComparisonItemType>>> comparisonItemsFactory A collection expression that might return a comparison value list with at least one item. ComparisonItemsBehaviourFlags comparisonItemsBehaviourFlags Returns Type Description CollectionConstantPredicateBuilder.IDeferredThenCreateCollectionConstantBuilder <ThenComparisonItemType> A deferred collection constant predicate builder. Type Parameters Name Description ThenComparisonItemType The type of an item of the return value of comparisonItemsFactory . Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Extensions.ArrayGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ArrayGenericExtensions.html",
    "title": "Class ArrayGenericExtensions | Documentations",
    "keywords": "Class ArrayGenericExtensions Inheritance System.Object ArrayGenericExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ArrayGenericExtensions : object Methods | Improve this Doc View Source ExcludeNulls<T>(T[]) Declaration public static T[] ExcludeNulls<T>(this T[] array) where T : class Parameters Type Name Description T[] array Returns Type Description T[] Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.AttributeMemberInfoReceiverExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.AttributeMemberInfoReceiverExtensions.html",
    "title": "Class AttributeMemberInfoReceiverExtensions | Documentations",
    "keywords": "Class AttributeMemberInfoReceiverExtensions Inheritance System.Object AttributeMemberInfoReceiverExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class AttributeMemberInfoReceiverExtensions : object Methods | Improve this Doc View Source LetAttributesReceiveAttributeMemberInfo<T>(AttributeMemberInfo<T>) Declaration public static void LetAttributesReceiveAttributeMemberInfo<T>(this AttributeMemberInfo<T> attrVarInfo) where T : Attribute, IAttributeMemberInfoReceiver<T> Parameters Type Name Description AttributeMemberInfo <T> attrVarInfo Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.BitmapExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.BitmapExtensions.html",
    "title": "Class BitmapExtensions | Documentations",
    "keywords": "Class BitmapExtensions Inheritance System.Object BitmapExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Drawing.dll Syntax public static class BitmapExtensions : object Methods | Improve this Doc View Source GetRectangle(Bitmap) Declaration public static Rectangle GetRectangle(this Bitmap bmap) Parameters Type Name Description Bitmap bmap Returns Type Description Rectangle"
  },
  "Teronis.DotNet/Teronis.Extensions.CookieCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.CookieCollectionExtensions.html",
    "title": "Class CookieCollectionExtensions | Documentations",
    "keywords": "Class CookieCollectionExtensions Inheritance System.Object CookieCollectionExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class CookieCollectionExtensions : object Methods | Improve this Doc View Source Clone(CookieCollection) Declaration public static CookieCollection Clone(this CookieCollection cookies) Parameters Type Name Description CookieCollection cookies Returns Type Description CookieCollection | Improve this Doc View Source Clone(CookieCollection, SemaphoreSlim) Declaration public static CookieCollection Clone(this CookieCollection cookies, SemaphoreSlim sephoCookies) Parameters Type Name Description CookieCollection cookies SemaphoreSlim sephoCookies Returns Type Description CookieCollection | Improve this Doc View Source CloneAsync(CookieCollection, SemaphoreSlim) Declaration public static Task<CookieCollection> CloneAsync(this CookieCollection cookies, SemaphoreSlim sephoCookies) Parameters Type Name Description CookieCollection cookies SemaphoreSlim sephoCookies Returns Type Description Task < CookieCollection > | Improve this Doc View Source CopyIt(CookieCollection) Declaration public static CookieContainer CopyIt(this CookieCollection colCookies) Parameters Type Name Description CookieCollection colCookies Returns Type Description CookieContainer | Improve this Doc View Source CopyTo(CookieCollection, CookieContainer) Declaration public static CookieContainer CopyTo(this CookieCollection cookieCollection, CookieContainer cookieContainer) Parameters Type Name Description CookieCollection cookieCollection CookieContainer cookieContainer Returns Type Description CookieContainer | Improve this Doc View Source LetExpire(CookieCollection) Declaration public static void LetExpire(this CookieCollection cookies) Parameters Type Name Description CookieCollection cookies"
  },
  "Teronis.DotNet/Teronis.Extensions.CookieContainerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.CookieContainerExtensions.html",
    "title": "Class CookieContainerExtensions | Documentations",
    "keywords": "Class CookieContainerExtensions Inheritance System.Object CookieContainerExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class CookieContainerExtensions : object Methods | Improve this Doc View Source GetAllCookies(CookieContainer) Declaration public static IEnumerable<Cookie> GetAllCookies(this CookieContainer cookieContainer) Parameters Type Name Description CookieContainer cookieContainer Returns Type Description IEnumerable < Cookie > | Improve this Doc View Source GetCookies(CookieContainer, String) Uses Reflection to get ALL of the Cookies where contains part of the specified string. Will return cookies for any subdomain, as well as dotted-prefix cookies. Declaration public static IEnumerable<Cookie> GetCookies(this CookieContainer cookieContainer, string domain) Parameters Type Name Description CookieContainer cookieContainer The to extract the Cookies from. System.String domain The string that contains part of the domain you want to extract cookies for. Returns Type Description IEnumerable < Cookie > | Improve this Doc View Source PrintCookies(CookieContainer) Declaration public static void PrintCookies(this CookieContainer cookieContainer) Parameters Type Name Description CookieContainer cookieContainer"
  },
  "Teronis.DotNet/Teronis.Extensions.EnumExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.EnumExtensions.html",
    "title": "Class EnumExtensions | Documentations",
    "keywords": "Class EnumExtensions Inheritance System.Object EnumExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class EnumExtensions : object Fields | Improve this Doc View Source IgnoreZeroWhenCrushingContainingBits Declaration public const bool IgnoreZeroWhenCrushingContainingBits = null Field Value Type Description System.Boolean Methods | Improve this Doc View Source CombineEachEnumValue<EnumType>() Declaration public static EnumType CombineEachEnumValue<EnumType>() where EnumType : struct, IComparable, IFormattable, IConvertible Returns Type Description EnumType Type Parameters Name Description EnumType | Improve this Doc View Source CrushContainingBitsToArray<EnumType>(EnumType, Boolean) Declaration public static EnumType[] CrushContainingBitsToArray<EnumType>(this EnumType enumValue, bool ignoreZero = null) where EnumType : struct, IComparable, IFormattable, IConvertible Parameters Type Name Description EnumType enumValue System.Boolean ignoreZero Returns Type Description EnumType[] Type Parameters Name Description EnumType | Improve this Doc View Source CrushContainingBitsToEnumerable<EnumType>(EnumType, Boolean) Declaration public static IEnumerable<EnumType> CrushContainingBitsToEnumerable<EnumType>(this EnumType enumValue, bool ignoreZero = null) where EnumType : struct, IComparable, IFormattable, IConvertible Parameters Type Name Description EnumType enumValue System.Boolean ignoreZero Returns Type Description IEnumerable <EnumType> Type Parameters Name Description EnumType"
  },
  "Teronis.DotNet/Teronis.Extensions.ExceptionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ExceptionExtensions.html",
    "title": "Class ExceptionExtensions | Documentations",
    "keywords": "Class ExceptionExtensions Inheritance System.Object ExceptionExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ExceptionExtensions : object Methods | Improve this Doc View Source JoinInnerMessages(Nullable<Exception>, Nullable<String>) Joins the message of exception and the message of recursively. Declaration public static string JoinInnerMessages(this Exception? exception, string? separator = null) Parameters Type Name Description System.Nullable < Exception > exception The exception. System.Nullable < System.String > separator If null it is Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.html",
    "title": "Namespace Teronis.Extensions | Documentations",
    "keywords": "Namespace Teronis.Extensions Classes ArrayGenericExtensions AttributeMemberInfoReceiverExtensions BitmapExtensions CookieCollectionExtensions CookieContainerExtensions EnumExtensions ExceptionExtensions HttpClientExtensions HttpResponseStreamExtensions HttpWebRequestExtensions IAsyncDialogServiceExtensions ICollection_KeyValuePair_KeyType_ValueType__Extensions ICollectionGenericExtensions IDebuggerDisplayExtensions IDictionaryExtenions IDictionaryGenericExtensions IEnumerableCharacterExtensions IEnumerableCookieExtensions IEnumerableGenericExtensions IEnumerableMemberInfoExtensions IEnumerableMemberInfoUtils IHasAsyncableEventSequenceExtensions IListExtensions IListGenericExtensions IListPointExtensions ImageExtensions IntegerExtensions MemberInfoExtensions NameValueCollectionExtensions PointExtensions ProcessExtensions QueueExtensions RectangleExtensions ReflectionExtensions ResourceManagerExtensions SecureStringExtensions SettingsPropertyValueExtensions StringExtensions TypeExtensions UriExtensions VariableInfoSettingsExtensions WaitHandleExtensions Delegates StringExtensions.ManipulateFirstCharacterDelegate"
  },
  "Teronis.DotNet/Teronis.Extensions.HttpClientExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | Documentations",
    "keywords": "Class HttpClientExtensions Inheritance System.Object HttpClientExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class HttpClientExtensions : object Methods | Improve this Doc View Source PrepareHttpRequestAsync(HttpClient, Func<HttpClient, Task>) Declaration public static Task PrepareHttpRequestAsync(this HttpClient pseudoClient, Func<HttpClient, Task> clientHandler) Parameters Type Name Description HttpClient pseudoClient Func < HttpClient , Task > clientHandler Returns Type Description Task | Improve this Doc View Source PrepareHttpRequestAsync(HttpClient, Nullable<HttpClientHandler>, Func<HttpClient, Nullable<HttpClientHandler>, Task>) Declaration public static Task PrepareHttpRequestAsync(this HttpClient pseudoClient, HttpClientHandler? clientHandler, Func<HttpClient, HttpClientHandler?, Task> callback) Parameters Type Name Description HttpClient pseudoClient System.Nullable < HttpClientHandler > clientHandler Func < HttpClient , System.Nullable < HttpClientHandler >, Task > callback Returns Type Description Task | Improve this Doc View Source PrepareHttpRequestAsync<T>(HttpClient, Func<HttpClient, Task<T>>) Declaration public static Task<T> PrepareHttpRequestAsync<T>(this HttpClient pseudoClient, Func<HttpClient, Task<T>> clientHandler) Parameters Type Name Description HttpClient pseudoClient Func < HttpClient , Task <T>> clientHandler Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source PrepareHttpRequestAsync<T>(HttpClient, Nullable<HttpClientHandler>, Func<HttpClient, Nullable<HttpClientHandler>, Task<T>>) Declaration public static Task<T> PrepareHttpRequestAsync<T>(this HttpClient client, HttpClientHandler? clientHandler, Func<HttpClient, HttpClientHandler?, Task<T>> callback) Parameters Type Name Description HttpClient client System.Nullable < HttpClientHandler > clientHandler Func < HttpClient , System.Nullable < HttpClientHandler >, Task <T>> callback Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.HttpResponseStreamExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.HttpResponseStreamExtensions.html",
    "title": "Class HttpResponseStreamExtensions | Documentations",
    "keywords": "Class HttpResponseStreamExtensions Inheritance System.Object HttpResponseStreamExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class HttpResponseStreamExtensions : object Methods | Improve this Doc View Source ReadContentAsString(HttpWebResponse) Declaration public static string ReadContentAsString(this HttpWebResponse response) Parameters Type Name Description HttpWebResponse response Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Extensions.HttpWebRequestExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.HttpWebRequestExtensions.html",
    "title": "Class HttpWebRequestExtensions | Documentations",
    "keywords": "Class HttpWebRequestExtensions Inheritance System.Object HttpWebRequestExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class HttpWebRequestExtensions : object Methods | Improve this Doc View Source GetResponseAsync(HttpWebRequest, Nullable<CancellationToken>) Declaration public static Task<WebResponse> GetResponseAsync(this HttpWebRequest request, CancellationToken? nullableCancellationToken) Parameters Type Name Description HttpWebRequest request System.Nullable < CancellationToken > nullableCancellationToken Returns Type Description Task < WebResponse >"
  },
  "Teronis.DotNet/Teronis.Extensions.IAsyncDialogServiceExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IAsyncDialogServiceExtensions.html",
    "title": "Class IAsyncDialogServiceExtensions | Documentations",
    "keywords": "Class IAsyncDialogServiceExtensions Inheritance System.Object IAsyncDialogServiceExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IAsyncDialogServiceExtensions : object Methods | Improve this Doc View Source ShowErrorDialogAsync(IAsyncDialogService, Exception) Declaration public static Task<bool?> ShowErrorDialogAsync(this IAsyncDialogService dialogService, Exception error) Parameters Type Name Description IAsyncDialogService dialogService Exception error Returns Type Description Task < System.Nullable < System.Boolean >>"
  },
  "Teronis.DotNet/Teronis.Extensions.ICollection_KeyValuePair_KeyType_ValueType__Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ICollection_KeyValuePair_KeyType_ValueType__Extensions.html",
    "title": "Class ICollection_KeyValuePair_KeyType_ValueType__Extensions | Documentations",
    "keywords": "Class ICollection_KeyValuePair_KeyType_ValueType__Extensions Inheritance System.Object ICollection_KeyValuePair_KeyType_ValueType__Extensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ICollection_KeyValuePair_KeyType_ValueType__Extensions : object Methods | Improve this Doc View Source AsCollectionWithPairs<KeyType, ValueType>(ICollection<KeyValuePair<KeyType, ValueType>>) Declaration public static ICollection<KeyValuePair<KeyType, ValueType>> AsCollectionWithPairs<KeyType, ValueType>(this ICollection<KeyValuePair<KeyType, ValueType>> collection) Parameters Type Name Description ICollection < KeyValuePair <KeyType, ValueType>> collection Returns Type Description ICollection < KeyValuePair <KeyType, ValueType>> Type Parameters Name Description KeyType ValueType"
  },
  "Teronis.DotNet/Teronis.Extensions.ICollectionGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ICollectionGenericExtensions.html",
    "title": "Class ICollectionGenericExtensions | Documentations",
    "keywords": "Class ICollectionGenericExtensions Inheritance System.Object ICollectionGenericExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ICollectionGenericExtensions : object Methods | Improve this Doc View Source AddAndReturnItem<T>(ICollection<T>, T) Declaration public static T AddAndReturnItem<T>(this ICollection<T> source, T item) Parameters Type Name Description ICollection <T> source T item Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source TryAdd<T>(ICollection<T>, T) Declaration public static bool TryAdd<T>(this ICollection<T> list, T item) Parameters Type Name Description ICollection <T> list T item Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.IDebuggerDisplayExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IDebuggerDisplayExtensions.html",
    "title": "Class IDebuggerDisplayExtensions | Documentations",
    "keywords": "Class IDebuggerDisplayExtensions Inheritance System.Object IDebuggerDisplayExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IDebuggerDisplayExtensions : object Methods | Improve this Doc View Source GetDebuggerDisplay(Nullable<Object>) Looks for IDebuggerDisplay interface implementation. If implemented, DebuggerDisplay is returned, otherwise . Declaration public static string? GetDebuggerDisplay(this object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Nullable < System.String >"
  },
  "Teronis.DotNet/Teronis.Extensions.IDictionaryExtenions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IDictionaryExtenions.html",
    "title": "Class IDictionaryExtenions | Documentations",
    "keywords": "Class IDictionaryExtenions Inheritance System.Object IDictionaryExtenions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IDictionaryExtenions : object Methods | Improve this Doc View Source TryAdd(IDictionary, Object, Object) Declaration public static bool TryAdd(this IDictionary dictionary, object key, object value) Parameters Type Name Description IDictionary dictionary System.Object key System.Object value Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Extensions.IDictionaryGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IDictionaryGenericExtensions.html",
    "title": "Class IDictionaryGenericExtensions | Documentations",
    "keywords": "Class IDictionaryGenericExtensions Inheritance System.Object IDictionaryGenericExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IDictionaryGenericExtensions : object Methods | Improve this Doc View Source AddAndReturn<K, V>(IDictionary<K, V>, K, V) Declaration public static V AddAndReturn<K, V>(this IDictionary<K, V> source, K key, V value) Parameters Type Name Description IDictionary <K, V> source K key V value Returns Type Description V Type Parameters Name Description K V | Improve this Doc View Source AddOrUpdate<K, V>(IDictionary<K, V>, K, V) Declaration public static V AddOrUpdate<K, V>(this IDictionary<K, V> dictionary, K key, V value) Parameters Type Name Description IDictionary <K, V> dictionary K key V value Returns Type Description V Type Parameters Name Description K V | Improve this Doc View Source AddOrUpdate<K, V>(IDictionary<K, V>, K, V, Func<V, V>) Declaration public static V AddOrUpdate<K, V>(this IDictionary<K, V> dictionary, K key, V value, Func<V, V> repalceValue) Parameters Type Name Description IDictionary <K, V> dictionary K key V value Func <V, V> repalceValue Returns Type Description V Type Parameters Name Description K V | Improve this Doc View Source GetNullableStructureValue<K, V>(IDictionary<K, V>, K) Does not throw an exception when key does not exist, instead the default nullable value will be returned. Declaration public static V? GetNullableStructureValue<K, V>(this IDictionary<K, V> dictionary, K key) where V : struct Parameters Type Name Description IDictionary <K, V> dictionary K key Returns Type Description System.Nullable <V> Type Parameters Name Description K V | Improve this Doc View Source GetReadOnlyNullableStructureValue<K, V>(IReadOnlyDictionary<K, V>, K) Does not throw an exception when key does not exist, instead the default nullable value will be returned. Declaration public static V? GetReadOnlyNullableStructureValue<K, V>(this IReadOnlyDictionary<K, V> dictionary, K key) where V : struct Parameters Type Name Description IReadOnlyDictionary <K, V> dictionary K key Returns Type Description System.Nullable <V> Type Parameters Name Description K V | Improve this Doc View Source GetValue<K, V>(IDictionary<K, V>, K) Does not throw an exception when key does not exist, instead the default value will be returned. Declaration public static V GetValue<K, V>(this IDictionary<K, V> dictionary, K key) Parameters Type Name Description IDictionary <K, V> dictionary K key Returns Type Description V Type Parameters Name Description K V | Improve this Doc View Source RemoveAndReturn<K, V>(IDictionary<K, V>, K) Declaration public static V RemoveAndReturn<K, V>(this IDictionary<K, V> source, K key) Parameters Type Name Description IDictionary <K, V> source K key Returns Type Description V Type Parameters Name Description K V | Improve this Doc View Source TryRemove<K, V>(IDictionary<K, V>, K, out V) Declaration public static bool TryRemove<K, V>(this IDictionary<K, V> source, K key, out V value) Parameters Type Name Description IDictionary <K, V> source K key V value Returns Type Description System.Boolean Type Parameters Name Description K V"
  },
  "Teronis.DotNet/Teronis.Extensions.IEnumerableCharacterExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IEnumerableCharacterExtensions.html",
    "title": "Class IEnumerableCharacterExtensions | Documentations",
    "keywords": "Class IEnumerableCharacterExtensions Inheritance System.Object IEnumerableCharacterExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IEnumerableCharacterExtensions : object Methods | Improve this Doc View Source ConcatFaster(IEnumerable<Char>) Declaration public static string ConcatFaster(this IEnumerable<char> source) Parameters Type Name Description IEnumerable < System.Char > source Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Extensions.IEnumerableCookieExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IEnumerableCookieExtensions.html",
    "title": "Class IEnumerableCookieExtensions | Documentations",
    "keywords": "Class IEnumerableCookieExtensions Inheritance System.Object IEnumerableCookieExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IEnumerableCookieExtensions : object Methods | Improve this Doc View Source LetExpire(IEnumerable<Nullable<Cookie>>) Declaration public static void LetExpire(this IEnumerable<Cookie?> cookies) Parameters Type Name Description IEnumerable < System.Nullable < Cookie >> cookies"
  },
  "Teronis.DotNet/Teronis.Extensions.IEnumerableGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IEnumerableGenericExtensions.html",
    "title": "Class IEnumerableGenericExtensions | Documentations",
    "keywords": "Class IEnumerableGenericExtensions Inheritance System.Object IEnumerableGenericExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IEnumerableGenericExtensions : object Methods | Improve this Doc View Source Any<T>(IEnumerable<T>, Func<T, Boolean>, out T) Declaration public static bool Any<T>(this IEnumerable<T> collection, Func<T, bool> predicate, out T last) Parameters Type Name Description IEnumerable <T> collection Func <T, System.Boolean > predicate T last Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source ContinueWith<T>(IEnumerable<T>, T) Adds the item at the end of a new sequence without loosing the target items. Declaration public static IEnumerable<T> ContinueWith<T>(this IEnumerable<T> target, T item) Parameters Type Name Description IEnumerable <T> target T item Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source ContinueWith<T>(IEnumerable<T>, IEnumerable<T>) Adds the items at the end of a new sequence without loosing the target items. Declaration public static IEnumerable<T> ContinueWith<T>(this IEnumerable<T> target, IEnumerable<T> items) Parameters Type Name Description IEnumerable <T> target IEnumerable <T> items Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source ExcludeNulls<T>(IEnumerable<T>) Declaration public static IEnumerable<T> ExcludeNulls<T>(this IEnumerable<T> collection) where T : class Parameters Type Name Description IEnumerable <T> collection Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source FirstNonDefault<T, R>(IEnumerable<T>, Func<T, R>) Declaration public static R FirstNonDefault<T, R>(this IEnumerable<T> collection, Func<T, R> getObj) where R : class Parameters Type Name Description IEnumerable <T> collection Func <T, R> getObj Returns Type Description R Type Parameters Name Description T R | Improve this Doc View Source FirstNonDefaultOrDefault<T, R>(IEnumerable<T>, Func<T, R>) Declaration public static R FirstNonDefaultOrDefault<T, R>(this IEnumerable<T> collection, Func<T, R> getObj) Parameters Type Name Description IEnumerable <T> collection Func <T, R> getObj Returns Type Description R Type Parameters Name Description T R | Improve this Doc View Source WithIndex<T>(IEnumerable<T>) Declaration public static IEnumerable<ValueIndexPair<T>> WithIndex<T>(this IEnumerable<T> sequence) Parameters Type Name Description IEnumerable <T> sequence Returns Type Description IEnumerable < ValueIndexPair <T>> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.IEnumerableMemberInfoExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IEnumerableMemberInfoExtensions.html",
    "title": "Class IEnumerableMemberInfoExtensions | Documentations",
    "keywords": "Class IEnumerableMemberInfoExtensions Inheritance System.Object IEnumerableMemberInfoExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IEnumerableMemberInfoExtensions : object Methods | Improve this Doc View Source Intersect(IEnumerable<MemberInfo>, Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> Intersect(IEnumerable<MemberInfo> memberInfos, Type entityType, VariableInfoDescriptor descriptor = null) Parameters Type Name Description IEnumerable < MemberInfo > memberInfos Type entityType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo >"
  },
  "Teronis.DotNet/Teronis.Extensions.IEnumerableMemberInfoUtils.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IEnumerableMemberInfoUtils.html",
    "title": "Class IEnumerableMemberInfoUtils | Documentations",
    "keywords": "Class IEnumerableMemberInfoUtils Inheritance System.Object IEnumerableMemberInfoUtils Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IEnumerableMemberInfoUtils : object Methods | Improve this Doc View Source Intersect(IEnumerable<MemberInfo>, Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> Intersect(this IEnumerable<MemberInfo> memberInfos, Type entityType, VariableInfoDescriptor descriptor = null) Parameters Type Name Description IEnumerable < MemberInfo > memberInfos Type entityType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo >"
  },
  "Teronis.DotNet/Teronis.Extensions.IHasAsyncableEventSequenceExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IHasAsyncableEventSequenceExtensions.html",
    "title": "Class IHasAsyncableEventSequenceExtensions | Documentations",
    "keywords": "Class IHasAsyncableEventSequenceExtensions Inheritance System.Object IHasAsyncableEventSequenceExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IHasAsyncableEventSequenceExtensions : object Methods | Improve this Doc View Source IsAsyncEvent<KeyType>(IHasAsyncableEventSequence<KeyType>) Declaration public static bool IsAsyncEvent<KeyType>(this IHasAsyncableEventSequence<KeyType> asyncableEventSequenceContainer) Parameters Type Name Description IHasAsyncableEventSequence <KeyType> asyncableEventSequenceContainer Returns Type Description System.Boolean Type Parameters Name Description KeyType"
  },
  "Teronis.DotNet/Teronis.Extensions.IListExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IListExtensions.html",
    "title": "Class IListExtensions | Documentations",
    "keywords": "Class IListExtensions Inheritance System.Object IListExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IListExtensions : object Methods | Improve this Doc View Source Swap(IList, Int32, Int32) Declaration public static bool Swap(this IList source, int fromIndex, int toIndex) Parameters Type Name Description IList source System.Int32 fromIndex System.Int32 toIndex Returns Type Description System.Boolean | Improve this Doc View Source Swap(IList, Int32, Int32, Action<Int32, Nullable<Object>>) Declaration public static bool Swap(this IList source, int fromIndex, int toIndex, Action<int, object?> insertAt) Parameters Type Name Description IList source System.Int32 fromIndex System.Int32 toIndex Action < System.Int32 , System.Nullable < System.Object >> insertAt Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Extensions.IListGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IListGenericExtensions.html",
    "title": "Class IListGenericExtensions | Documentations",
    "keywords": "Class IListGenericExtensions Inheritance System.Object IListGenericExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IListGenericExtensions : object Methods | Improve this Doc View Source Move<T>(IList<T>, T, T) Declaration public static void Move<T>(this IList<T> list, T from, T to) Parameters Type Name Description IList <T> list T from T to Type Parameters Name Description T | Improve this Doc View Source Move<T>(IList<T>, Int32, Int32) Declaration public static void Move<T>(this IList<T> list, int fromIndex, int toIndex) Parameters Type Name Description IList <T> list System.Int32 fromIndex System.Int32 toIndex Type Parameters Name Description T | Improve this Doc View Source Move<T>(IList<T>, Int32, Int32, Int32) Declaration public static void Move<T>(this IList<T> list, int fromIndex, int toIndex, int count) Parameters Type Name Description IList <T> list System.Int32 fromIndex System.Int32 toIndex System.Int32 count Type Parameters Name Description T | Improve this Doc View Source Shuffle<T>(IList<T>) Declaration public static void Shuffle<T>(this IList<T> list) Parameters Type Name Description IList <T> list Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.IListPointExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IListPointExtensions.html",
    "title": "Class IListPointExtensions | Documentations",
    "keywords": "Class IListPointExtensions Inheritance System.Object IListPointExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IListPointExtensions : object Methods | Improve this Doc View Source IsInPolygon(IList<Point>, Point) Declaration public static bool IsInPolygon(this IList<Point> points, Point p) Parameters Type Name Description IList < Point > points Point p Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Extensions.ImageExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ImageExtensions.html",
    "title": "Class ImageExtensions | Documentations",
    "keywords": "Class ImageExtensions Inheritance System.Object ImageExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Drawing.dll Syntax public static class ImageExtensions : object Methods | Improve this Doc View Source ResizeImage(Image, Int32, Int32) Resize the image to the specified width and height. Declaration public static Bitmap ResizeImage(this Image image, int width, int height) Parameters Type Name Description Image image The image to resize. System.Int32 width The width to resize to. System.Int32 height The height to resize to. Returns Type Description Bitmap The resized image. | Improve this Doc View Source RotateImage(Image, PointF, Single) Declaration public static Bitmap RotateImage(this Image image, PointF offset, float angle) Parameters Type Name Description Image image PointF offset System.Single angle Returns Type Description Bitmap"
  },
  "Teronis.DotNet/Teronis.Extensions.IntegerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.IntegerExtensions.html",
    "title": "Class IntegerExtensions | Documentations",
    "keywords": "Class IntegerExtensions Inheritance System.Object IntegerExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class IntegerExtensions : object Methods | Improve this Doc View Source CompareFasterTo(Int32, Int32) Declaration public static int CompareFasterTo(this int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y Returns Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Extensions.Logging.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.Logging.html",
    "title": "Namespace Teronis.Extensions.Logging | Documentations",
    "keywords": "Namespace Teronis.Extensions.Logging Classes ILoggerExtensions"
  },
  "Teronis.DotNet/Teronis.Extensions.Logging.ILoggerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.Logging.ILoggerExtensions.html",
    "title": "Class ILoggerExtensions | Documentations",
    "keywords": "Class ILoggerExtensions Inheritance System.Object ILoggerExtensions Namespace : Teronis.Extensions.Logging Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ILoggerExtensions : object Methods | Improve this Doc View Source LogError(ILogger, EventId, Exception) Declaration public static void LogError(this ILogger logger, EventId eventId, Exception error) Parameters Type Name Description ILogger logger EventId eventId Exception error | Improve this Doc View Source LogError(ILogger, Nullable<Exception>) Declaration public static void LogError(this ILogger logger, Exception? error) Parameters Type Name Description ILogger logger System.Nullable < Exception > error"
  },
  "Teronis.DotNet/Teronis.Extensions.MemberInfoExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.MemberInfoExtensions.html",
    "title": "Class MemberInfoExtensions | Documentations",
    "keywords": "Class MemberInfoExtensions Inheritance System.Object MemberInfoExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class MemberInfoExtensions : object Methods | Improve this Doc View Source GetValue(MemberInfo, Object) Declaration public static object? GetValue(this MemberInfo memberInfo, object owner) Parameters Type Name Description MemberInfo memberInfo System.Object owner Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source GetVariableType(MemberInfo) Declaration public static Type GetVariableType(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description Type | Improve this Doc View Source IsFieldOrProperty(MemberInfo) Declaration public static bool IsFieldOrProperty(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsVariable(MemberInfo) Declaration public static bool IsVariable(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsVariable(MemberInfo, Type, Boolean) Declaration public static bool IsVariable(this MemberInfo memberInfo, Type attributeType, bool getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo Type attributeType System.Boolean getCustomAttributesInherit Returns Type Description System.Boolean | Improve this Doc View Source SetValue(MemberInfo, Object, Nullable<Object>) Declaration public static void SetValue(this MemberInfo memberInfo, object owner, object? value) Parameters Type Name Description MemberInfo memberInfo System.Object owner System.Nullable < System.Object > value"
  },
  "Teronis.DotNet/Teronis.Extensions.NameValueCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.NameValueCollectionExtensions.html",
    "title": "Class NameValueCollectionExtensions | Documentations",
    "keywords": "Class NameValueCollectionExtensions Inheritance System.Object NameValueCollectionExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class NameValueCollectionExtensions : object Methods | Improve this Doc View Source AsPostData(NameValueCollection) Declaration public static string AsPostData(this NameValueCollection collection) Parameters Type Name Description NameValueCollection collection Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Extensions.PointExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.PointExtensions.html",
    "title": "Class PointExtensions | Documentations",
    "keywords": "Class PointExtensions Inheritance System.Object PointExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class PointExtensions : object Methods | Improve this Doc View Source Compare(Point, Point) Declaration public static bool Compare(this Point point1, Point point2) Parameters Type Name Description Point point1 Point point2 Returns Type Description System.Boolean | Improve this Doc View Source Compare(Point, Int32, Int32) Declaration public static bool Compare(this Point point, int x, int y) Parameters Type Name Description Point point System.Int32 x System.Int32 y Returns Type Description System.Boolean | Improve this Doc View Source GetOffset(Point, Point) Declaration public static Point GetOffset(this Point point, Point offset) Parameters Type Name Description Point point Point offset Returns Type Description Point"
  },
  "Teronis.DotNet/Teronis.Extensions.ProcessExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ProcessExtensions.html",
    "title": "Class ProcessExtensions | Documentations",
    "keywords": "Class ProcessExtensions Inheritance System.Object ProcessExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ProcessExtensions : object Methods | Improve this Doc View Source Start(Process, Boolean, Nullable<String>) true if a process resource is started; false if no new process resource is started Declaration public static bool Start(this Process process, bool echoCommand = false, string? commandEchoPrefix = null) Parameters Type Name Description Process process System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Extensions.QueueExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.QueueExtensions.html",
    "title": "Class QueueExtensions | Documentations",
    "keywords": "Class QueueExtensions Inheritance System.Object QueueExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class QueueExtensions : object Methods | Improve this Doc View Source DequeueAt<T>(Queue<T>, Int32) Declaration public static T DequeueAt<T>(this Queue<T> queue, int index) Parameters Type Name Description Queue <T> queue System.Int32 index Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DequeueChunk<T>(Queue<T>, Int32) Declaration public static IEnumerable<T> DequeueChunk<T>(this Queue<T> queue, int chunkSize) Parameters Type Name Description Queue <T> queue System.Int32 chunkSize Returns Type Description IEnumerable <T> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.RectangleExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.RectangleExtensions.html",
    "title": "Class RectangleExtensions | Documentations",
    "keywords": "Class RectangleExtensions Inheritance System.Object RectangleExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class RectangleExtensions : object Methods | Improve this Doc View Source Contains(Rectangle, Int32, Int32, Boolean) Declaration public static bool Contains(this Rectangle rectangle, int x, int y, bool ellipse) Parameters Type Name Description Rectangle rectangle System.Int32 x System.Int32 y System.Boolean ellipse Returns Type Description System.Boolean | Improve this Doc View Source IsInEllipse(Rectangle, Int32, Int32) Declaration public static bool IsInEllipse(this Rectangle rectangle, int x, int y) Parameters Type Name Description Rectangle rectangle System.Int32 x System.Int32 y Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Extensions.ReflectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | Documentations",
    "keywords": "Class ReflectionExtensions Inheritance System.Object ReflectionExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ReflectionExtensions : object Methods | Improve this Doc View Source GetAttributeVariableMember(MemberInfo, Type, Nullable<Boolean>) Declaration public static AttributeMemberInfo GetAttributeVariableMember(this MemberInfo memberInfo, Type attributeType, bool? getCustomAttributesInherit = null) Parameters Type Name Description MemberInfo memberInfo Pass or . Type attributeType System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo | Improve this Doc View Source GetAttributeVariableMember<T>(MemberInfo, Nullable<Boolean>) Declaration public static AttributeMemberInfo<T> GetAttributeVariableMember<T>(this MemberInfo memberInfo, bool? getCustomAttributesInherit = null) where T : Attribute Parameters Type Name Description MemberInfo memberInfo Pass or . System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo <T> Type Parameters Name Description T | Improve this Doc View Source IsVariable(MemberInfo, VariableInfoDescriptor) Declaration public static bool IsVariable(this MemberInfo memberInfo, VariableInfoDescriptor variableInfoDescriptor) Parameters Type Name Description MemberInfo memberInfo VariableInfoDescriptor variableInfoDescriptor Returns Type Description System.Boolean | Improve this Doc View Source IsVariable(MemberInfo, VariableInfoDescriptor, Type, Boolean) Declaration public static bool IsVariable(this MemberInfo memberInfo, VariableInfoDescriptor descriptor, Type attributeType, bool getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo VariableInfoDescriptor descriptor Type attributeType System.Boolean getCustomAttributesInherit Returns Type Description System.Boolean | Improve this Doc View Source TryGetAttributeVariableMember(MemberInfo, Type, out AttributeMemberInfo, Nullable<Boolean>) Declaration public static bool TryGetAttributeVariableMember(this MemberInfo memberInfo, Type attributeType, out AttributeMemberInfo attrVarInfo, bool? getCustomAttributesInherit = null) Parameters Type Name Description MemberInfo memberInfo Pass or . Type attributeType AttributeMemberInfo attrVarInfo System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description System.Boolean | Improve this Doc View Source TryGetAttributeVariableMember<T>(MemberInfo, out AttributeMemberInfo<T>, Nullable<Boolean>) Declaration public static bool TryGetAttributeVariableMember<T>(this MemberInfo memberInfo, out AttributeMemberInfo<T> attrVarInfo, bool? getCustomAttributesInherit = null) where T : Attribute Parameters Type Name Description MemberInfo memberInfo Pass or . AttributeMemberInfo <T> attrVarInfo System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Extensions.ResourceManagerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.ResourceManagerExtensions.html",
    "title": "Class ResourceManagerExtensions | Documentations",
    "keywords": "Class ResourceManagerExtensions Inheritance System.Object ResourceManagerExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ResourceManagerExtensions : object Methods | Improve this Doc View Source GetSupportedCultures(ResourceManager) Declaration public static List<CultureInfo> GetSupportedCultures(this ResourceManager resourceManager) Parameters Type Name Description ResourceManager resourceManager Returns Type Description List < CultureInfo >"
  },
  "Teronis.DotNet/Teronis.Extensions.SecureStringExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.SecureStringExtensions.html",
    "title": "Class SecureStringExtensions | Documentations",
    "keywords": "Class SecureStringExtensions Inheritance System.Object SecureStringExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class SecureStringExtensions : object Methods | Improve this Doc View Source ToUnsecureString(SecureString) Declaration public static string? ToUnsecureString(this SecureString securedString) Parameters Type Name Description SecureString securedString Returns Type Description System.Nullable < System.String >"
  },
  "Teronis.DotNet/Teronis.Extensions.SettingsPropertyValueExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.SettingsPropertyValueExtensions.html",
    "title": "Class SettingsPropertyValueExtensions | Documentations",
    "keywords": "Class SettingsPropertyValueExtensions Inheritance System.Object SettingsPropertyValueExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class SettingsPropertyValueExtensions : object Methods | Improve this Doc View Source CopyDefaultValue(SettingsPropertyValue) Declaration public static object? CopyDefaultValue(this SettingsPropertyValue settingsPropertyValue) Parameters Type Name Description SettingsPropertyValue settingsPropertyValue Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source CopyDefaultValue<PropertyType>(SettingsPropertyValue) Declaration public static PropertyType CopyDefaultValue<PropertyType>(this SettingsPropertyValue propertyValue) Parameters Type Name Description SettingsPropertyValue propertyValue Returns Type Description PropertyType Type Parameters Name Description PropertyType | Improve this Doc View Source CopyPropertyValue(SettingsPropertyValue) Declaration public static object? CopyPropertyValue(this SettingsPropertyValue settingsPropertyValue) Parameters Type Name Description SettingsPropertyValue settingsPropertyValue Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source CopyPropertyValue<PropertyType>(SettingsPropertyValue) Declaration public static PropertyType CopyPropertyValue<PropertyType>(this SettingsPropertyValue propertyValue) Parameters Type Name Description SettingsPropertyValue propertyValue Returns Type Description PropertyType Type Parameters Name Description PropertyType | Improve this Doc View Source CopyValue(SettingsPropertyValue, Nullable<Object>, Boolean) Create a deep copy of value . Declaration public static object? CopyValue(this SettingsPropertyValue propertyValue, object? value, bool isDeserialized) Parameters Type Name Description SettingsPropertyValue propertyValue System.Nullable < System.Object > value Should be a deserialized value (ex. ) or a serialized value (ex. ). System.Boolean isDeserialized Indicates whether value is deserialized or serialized. Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source CopyValue<PropertyType>(SettingsPropertyValue, Object, Boolean) Declaration public static PropertyType CopyValue<PropertyType>(this SettingsPropertyValue propertyValue, object value, bool isDeserialized) Parameters Type Name Description SettingsPropertyValue propertyValue System.Object value System.Boolean isDeserialized Returns Type Description PropertyType Type Parameters Name Description PropertyType"
  },
  "Teronis.DotNet/Teronis.Extensions.StringExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Documentations",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class StringExtensions : object Methods | Improve this Doc View Source Contains(String, String, StringComparison) Declaration public static bool Contains(this string source, string search, StringComparison comparison) Parameters Type Name Description System.String source System.String search StringComparison comparison Returns Type Description System.Boolean | Improve this Doc View Source ConvertUmlauts(String) Converts umlauts to AE/Ae/ae, OE/Oe/oe and UE/Ue/ue. Declaration public static string ConvertUmlauts(this string content) Parameters Type Name Description System.String content Returns Type Description System.String | Improve this Doc View Source DecodeHtml(String) Declaration public static string DecodeHtml(this string htmlText) Parameters Type Name Description System.String htmlText Returns Type Description System.String | Improve this Doc View Source Format(String, Object[]) Declaration public static string? Format(this string text, params object[] args) Parameters Type Name Description System.String text System.Object [] args Returns Type Description System.Nullable < System.String > | Improve this Doc View Source GetUnicodeBytes(String) Declaration public static byte[] GetUnicodeBytes(this string input) Parameters Type Name Description System.String input Returns Type Description System.Byte [] | Improve this Doc View Source GetUnicodeString(Byte[]) Declaration public static string GetUnicodeString(this byte[] input) Parameters Type Name Description System.Byte [] input Returns Type Description System.String | Improve this Doc View Source LowerFirst(String) Returns the input string with the first character converted to uppercase, or mutates any nulls passed into string.Empty Declaration public static string LowerFirst(this string source) Parameters Type Name Description System.String source Returns Type Description System.String | Improve this Doc View Source ManipulateFirst(String, StringExtensions.ManipulateFirstCharacterDelegate) Returns the input string with the first character converted to uppercase, or mutates any nulls passed into string.Empty Declaration public static string ManipulateFirst(this string source, StringExtensions.ManipulateFirstCharacterDelegate manipulateFirstCharacter) Parameters Type Name Description System.String source StringExtensions.ManipulateFirstCharacterDelegate manipulateFirstCharacter Returns Type Description System.String | Improve this Doc View Source ToSecureString(String) Declaration public static SecureString ToSecureString(this string password) Parameters Type Name Description System.String password Returns Type Description SecureString | Improve this Doc View Source TrimEnd(String, String) Declaration public static string? TrimEnd(this string source, string value) Parameters Type Name Description System.String source System.String value Returns Type Description System.Nullable < System.String > | Improve this Doc View Source TrimEnd(String, String, StringComparison) Declaration public static string? TrimEnd(this string source, string value, StringComparison comparisonType) Parameters Type Name Description System.String source System.String value StringComparison comparisonType Returns Type Description System.Nullable < System.String > | Improve this Doc View Source TrimStart(String, String) Declaration public static string? TrimStart(this string source, string value) Parameters Type Name Description System.String source System.String value Returns Type Description System.Nullable < System.String > | Improve this Doc View Source TrimStart(String, String, StringComparison) Declaration public static string? TrimStart(this string source, string value, StringComparison comparisonType) Parameters Type Name Description System.String source System.String value StringComparison comparisonType Returns Type Description System.Nullable < System.String > | Improve this Doc View Source UpperFirst(String) Returns the input string with the first character converted to uppercase, or mutates any nulls passed into string.Empty Declaration public static string UpperFirst(this string source) Parameters Type Name Description System.String source Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Extensions.StringExtensions.ManipulateFirstCharacterDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.StringExtensions.ManipulateFirstCharacterDelegate.html",
    "title": "Delegate StringExtensions.ManipulateFirstCharacterDelegate | Documentations",
    "keywords": "Delegate StringExtensions.ManipulateFirstCharacterDelegate Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public delegate char ManipulateFirstCharacterDelegate(char firstChar); Parameters Type Name Description System.Char firstChar Returns Type Description System.Char Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Extensions.TypeExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | Documentations",
    "keywords": "Class TypeExtensions Inheritance System.Object TypeExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class TypeExtensions : object Methods | Improve this Doc View Source GetAttributeFieldMember(Type, Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo GetAttributeFieldMember(this Type type, Type attributeType, string fieldName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type type Type attributeType System.String fieldName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo | Improve this Doc View Source GetAttributeFieldMember<TAttribute>(Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo<TAttribute> GetAttributeFieldMember<TAttribute>(this Type type, string fieldName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type type System.String fieldName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo <TAttribute> Type Parameters Name Description TAttribute | Improve this Doc View Source GetAttributeFieldMembers(Type, Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo> GetAttributeFieldMembers(this Type beginningType, Type attributeType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type beginningType Type attributeType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo > | Improve this Doc View Source GetAttributeFieldMembers<TAttribute>(Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo<TAttribute>> GetAttributeFieldMembers<TAttribute>(this Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo <TAttribute>> Type Parameters Name Description TAttribute | Improve this Doc View Source GetAttributePropertyMember(Type, Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo GetAttributePropertyMember(this Type type, Type attributeType, string propertyName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type type Type attributeType System.String propertyName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo | Improve this Doc View Source GetAttributePropertyMember<TAttribute>(Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo<TAttribute> GetAttributePropertyMember<TAttribute>(this Type type, string propertyName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type type System.String propertyName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo <TAttribute> Type Parameters Name Description TAttribute | Improve this Doc View Source GetAttributePropertyMembers(Type, Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo> GetAttributePropertyMembers(this Type beginningType, Type attributeType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type beginningType Type attributeType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo > | Improve this Doc View Source GetAttributePropertyMembers<TAttribute>(Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo<TAttribute>> GetAttributePropertyMembers<TAttribute>(this Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo <TAttribute>> Type Parameters Name Description TAttribute | Improve this Doc View Source GetAttributeVariableMember(Type, Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo GetAttributeVariableMember(this Type type, Type attributeType, string variableName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type type Type attributeType System.String variableName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo | Improve this Doc View Source GetAttributeVariableMember<TAttribute>(Type, String, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo<TAttribute> GetAttributeVariableMember<TAttribute>(this Type type, string variableName, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type type System.String variableName VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo <TAttribute> Type Parameters Name Description TAttribute | Improve this Doc View Source GetAttributeVariableMembers(Type, Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo> GetAttributeVariableMembers(this Type beginningType, Type attributeType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type beginningType Type attributeType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo > | Improve this Doc View Source GetAttributeVariableMembers<TAttribute>(Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo<TAttribute>> GetAttributeVariableMembers<TAttribute>(this Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo <TAttribute>> Type Parameters Name Description TAttribute | Improve this Doc View Source GetFieldMember(Type, String, VariableInfoDescriptor) Declaration public static MemberInfo? GetFieldMember(this Type type, string fieldName, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type System.String fieldName VariableInfoDescriptor descriptor Returns Type Description System.Nullable < MemberInfo > | Improve this Doc View Source GetFieldMembers(Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetFieldMembers(this Type type, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source GetFieldMembers(Type, Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetFieldMembers(this Type beginningType, Type interruptingBaseType, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type beginningType Type interruptingBaseType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source GetPropertyMember(Type, String, VariableInfoDescriptor) Declaration public static MemberInfo? GetPropertyMember(this Type type, string propertyName, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type System.String propertyName VariableInfoDescriptor descriptor Returns Type Description System.Nullable < MemberInfo > | Improve this Doc View Source GetPropertyMembers(Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetPropertyMembers(this Type type, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source GetPropertyMembers(Type, Type, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetPropertyMembers(this Type beginningType, Type interruptingBaseType, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type beginningType Type interruptingBaseType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source GetVariableMember(Type, String, VariableInfoDescriptor) Declaration public static MemberInfo? GetVariableMember(this Type type, string variableName, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type System.String variableName VariableInfoDescriptor descriptor Returns Type Description System.Nullable < MemberInfo > | Improve this Doc View Source GetVariableMembers(Type, Nullable<VariableMemberTypes>, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetVariableMembers(this Type type, VariableMemberTypes? variableMemberType = null, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type type System.Nullable < VariableMemberTypes > variableMemberType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source GetVariableMembers(Type, Type, Nullable<VariableMemberTypes>, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetVariableMembers(this Type beginningType, Type interruptingBaseType, VariableMemberTypes? variableMemberType = null, VariableInfoDescriptor descriptor = null) Parameters Type Name Description Type beginningType Type interruptingBaseType System.Nullable < VariableMemberTypes > variableMemberType VariableInfoDescriptor descriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source TryGetOrderedAttributeMemberInfos<TAttribute>(Type, Func<TAttribute, Int32>, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static AttributeMemberInfo<TAttribute>[] TryGetOrderedAttributeMemberInfos<TAttribute>(this Type type, Func<TAttribute, int> getAttributeIndex, Type? interruptingBaseType = null, VariableInfoDescriptor descriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Type type Func <TAttribute, System.Int32 > getAttributeIndex System.Nullable < Type > interruptingBaseType VariableInfoDescriptor descriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description AttributeMemberInfo <TAttribute>[] Returns null if passed attribute allows multiple declarations. Type Parameters Name Description TAttribute"
  },
  "Teronis.DotNet/Teronis.Extensions.UriExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.UriExtensions.html",
    "title": "Class UriExtensions | Documentations",
    "keywords": "Class UriExtensions Inheritance System.Object UriExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class UriExtensions : object Methods | Improve this Doc View Source AddQueryParam(Uri, IEnumerable<(String name, String value)>) Declaration public static Uri AddQueryParam(this Uri uri, IEnumerable<(string name, string value)> items) Parameters Type Name Description Uri uri IEnumerable < System.ValueTuple < System.String , System.String >> items Returns Type Description Uri The return value is a new instance. | Improve this Doc View Source ParseQueryString(Uri) Declaration public static NameValueCollection ParseQueryString(this Uri uri) Parameters Type Name Description Uri uri Returns Type Description NameValueCollection"
  },
  "Teronis.DotNet/Teronis.Extensions.VariableInfoSettingsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.VariableInfoSettingsExtensions.html",
    "title": "Class VariableInfoSettingsExtensions | Documentations",
    "keywords": "Class VariableInfoSettingsExtensions Inheritance System.Object VariableInfoSettingsExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class VariableInfoSettingsExtensions : object"
  },
  "Teronis.DotNet/Teronis.Extensions.WaitHandleExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Extensions.WaitHandleExtensions.html",
    "title": "Class WaitHandleExtensions | Documentations",
    "keywords": "Class WaitHandleExtensions Inheritance System.Object WaitHandleExtensions Namespace : Teronis.Extensions Assembly : Teronis.NetStandard.Core.dll Syntax public static class WaitHandleExtensions : object Methods | Improve this Doc View Source AsTask(WaitHandle) Declaration public static Task AsTask(this WaitHandle handle) Parameters Type Name Description WaitHandle handle Returns Type Description Task | Improve this Doc View Source AsTask(WaitHandle, TimeSpan) Declaration public static Task AsTask(this WaitHandle handle, TimeSpan timeout) Parameters Type Name Description WaitHandle handle TimeSpan timeout Returns Type Description Task"
  },
  "Teronis.DotNet/Teronis.GitVersion.CommandLine.GitVersionProcess.html": {
    "href": "Teronis.DotNet/Teronis.GitVersion.CommandLine.GitVersionProcess.html",
    "title": "Class GitVersionProcess | Documentations",
    "keywords": "Class GitVersionProcess Inheritance System.Object SimpleProcess SimpleAsyncProcess GitVersionProcess Implements ISimpleProcess IDisposable ISimpleAsyncProcess IDisposable Inherited Members SimpleAsyncProcess.OnProcessExited(Nullable<Object>, EventArgs) SimpleAsyncProcess.PrepareProcess() SimpleAsyncProcess.OnProcessNotStarted(Exception) SimpleAsyncProcess.WaitForExitAsync() SimpleAsyncProcess.WaitForExitButReadOutputAsync() SimpleAsyncProcess.Dispose(Boolean) SimpleProcess.EchoCommand SimpleProcess.CommandEchoPrefix SimpleProcess.HasProcessStarted SimpleProcess.GetCreatedProcess() SimpleProcess.GetOutputData() SimpleProcess.CreateOutputDataBuilder() SimpleProcess.CreateNonZeroExitCodeException() SimpleProcess.Start() SimpleProcess.EnsureProcessStarted() SimpleProcess.ThrowIfNonZeroExitCode() SimpleProcess.WaitForExit() SimpleProcess.WaitForExitButReadOutput() SimpleProcess.Kill() SimpleProcess.Dispose() SimpleProcess.StartAndWaitForExit(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitButReadOutput(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) SimpleProcess.StartAndWaitForExitButReadOutputAsync(SimpleProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>) Namespace : Teronis.GitVersion.CommandLine Assembly : Teronis.GitVersion.CommandLine.Library.dll Syntax public class GitVersionProcess : SimpleAsyncProcess, ISimpleProcess, IDisposable, ISimpleAsyncProcess, IDisposable Constructors | Improve this Doc View Source GitVersionProcess(GitVersionProcessStartInfo, Boolean, Nullable<String>, Nullable<Action<Nullable<String>>>, Nullable<Action<Nullable<String>>>) Declaration public GitVersionProcess(GitVersionProcessStartInfo processStartInfo, bool echoCommand = false, string? commandEchoPrefix = null, Action<string?>? outputReceived = null, Action<string?>? errorReceived = null) Parameters Type Name Description GitVersionProcessStartInfo processStartInfo System.Boolean echoCommand System.Nullable < System.String > commandEchoPrefix System.Nullable < Action < System.Nullable < System.String >>> outputReceived System.Nullable < Action < System.Nullable < System.String >>> errorReceived Implements ISimpleProcess IDisposable ISimpleAsyncProcess IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersion.CommandLine.GitVersionProcessStartInfo.html": {
    "href": "Teronis.DotNet/Teronis.GitVersion.CommandLine.GitVersionProcessStartInfo.html",
    "title": "Class GitVersionProcessStartInfo | Documentations",
    "keywords": "Class GitVersionProcessStartInfo Inheritance System.Object SimpleProcessStartInfo GitVersionProcessStartInfo Namespace : Teronis.GitVersion.CommandLine Assembly : Teronis.GitVersion.CommandLine.Library.dll Syntax public class GitVersionProcessStartInfo : SimpleProcessStartInfo Constructors | Improve this Doc View Source GitVersionProcessStartInfo(Nullable<String>, Nullable<String>, Nullable<String>) Declaration public GitVersionProcessStartInfo(string? name = null, string? args = null, string? workingDirectory = null) Parameters Type Name Description System.Nullable < System.String > name If null the absolute executable path will be evaluated. System.Nullable < System.String > args System.Nullable < System.String > workingDirectory Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersion.CommandLine.html": {
    "href": "Teronis.DotNet/Teronis.GitVersion.CommandLine.html",
    "title": "Namespace Teronis.GitVersion.CommandLine | Documentations",
    "keywords": "Namespace Teronis.GitVersion.CommandLine Classes GitVersionProcess GitVersionProcessStartInfo"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskExecutor.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskExecutor.html",
    "title": "Class BuildTaskExecutor | Documentations",
    "keywords": "Class BuildTaskExecutor Inheritance System.Object BuildTaskExecutor Namespace : Teronis.GitVersionCache.BuildTasks Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public class BuildTaskExecutor : object Constructors | Improve this Doc View Source BuildTaskExecutor(ICacheIdentification) Declaration public BuildTaskExecutor(ICacheIdentification cacheIdentification) Parameters Type Name Description ICacheIdentification cacheIdentification Fields | Improve this Doc View Source cacheIdentification Declaration public readonly ICacheIdentification cacheIdentification Field Value Type Description ICacheIdentification Properties | Improve this Doc View Source CacheDirectory Declaration public string CacheDirectory { get; } Property Value Type Description System.String | Improve this Doc View Source CacheDirectoryName Declaration public string CacheDirectoryName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CacheFile Declaration public string CacheFile { get; } Property Value Type Description System.String | Improve this Doc View Source GitVersionYamlFileInfo Declaration public FileInfo GitVersionYamlFileInfo { get; } Property Value Type Description FileInfo | Improve this Doc View Source ParentOfGitDirectoryInfo Declaration public DirectoryInfo ParentOfGitDirectoryInfo { get; } Property Value Type Description DirectoryInfo Methods | Improve this Doc View Source EnsureCacheDirectoryExistence() Declaration public void EnsureCacheDirectoryExistence() | Improve this Doc View Source LoadCacheOrGetVersion(GetVersionCacheTask) Gets the cached, or if not existing, the new calculated git version variables. Declaration public bool LoadCacheOrGetVersion(GetVersionCacheTask buildTask) Parameters Type Name Description GetVersionCacheTask buildTask Returns Type Description System.Boolean If true the cache could be retrieved. | Improve this Doc View Source SaveToFilesystem(GetVersionCacheTask) Declaration public void SaveToFilesystem(GetVersionCacheTask buildTask) Parameters Type Name Description GetVersionCacheTask buildTask Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskExecutorDefaults.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskExecutorDefaults.html",
    "title": "Class BuildTaskExecutorDefaults | Documentations",
    "keywords": "Class BuildTaskExecutorDefaults Inheritance System.Object BuildTaskExecutorDefaults Namespace : Teronis.GitVersionCache.BuildTasks Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public static class BuildTaskExecutorDefaults : object Fields | Improve this Doc View Source CacheDirectoryName Declaration public const string CacheDirectoryName = null Field Value Type Description System.String | Improve this Doc View Source GitVersionFileNameWithExtension Declaration public const string GitVersionFileNameWithExtension = null Field Value Type Description System.String"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskUtilities.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.BuildTaskUtilities.html",
    "title": "Class BuildTaskUtilities | Documentations",
    "keywords": "Class BuildTaskUtilities Inheritance System.Object BuildTaskUtilities Namespace : Teronis.GitVersionCache.BuildTasks Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public static class BuildTaskUtilities : object Methods | Improve this Doc View Source GetParentDirectoryOfGitDirectory(String) Declaration public static DirectoryInfo GetParentDirectoryOfGitDirectory(string beginningDirectory) Parameters Type Name Description System.String beginningDirectory Returns Type Description DirectoryInfo | Improve this Doc View Source GetParentDirectoryOfGitVersionYamlFile(String) Declaration public static DirectoryInfo GetParentDirectoryOfGitVersionYamlFile(string beginningDirectory) Parameters Type Name Description System.String beginningDirectory Returns Type Description DirectoryInfo | Improve this Doc View Source SetUndefinedAsDefault(Object, String) Declaration public static void SetUndefinedAsDefault(object instance, string propertyName) Parameters Type Name Description System.Object instance System.String propertyName"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.GetVersionCacheTask.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.GetVersionCacheTask.html",
    "title": "Class GetVersionCacheTask | Documentations",
    "keywords": "Class GetVersionCacheTask Inheritance System.Object GetVersionCacheTask Implements ICacheIdentification Namespace : Teronis.GitVersionCache.BuildTasks Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public class GetVersionCacheTask : Task, ICacheIdentification Properties | Improve this Doc View Source AssemblySemFileVer Declaration public string AssemblySemFileVer { get; set; } Property Value Type Description System.String | Improve this Doc View Source AssemblySemVer Declaration public string AssemblySemVer { get; set; } Property Value Type Description System.String | Improve this Doc View Source BranchName Declaration public string BranchName { get; set; } Property Value Type Description System.String | Improve this Doc View Source BuildMetaData Declaration public string BuildMetaData { get; set; } Property Value Type Description System.String | Improve this Doc View Source BuildMetaDataPadded Declaration public string BuildMetaDataPadded { get; set; } Property Value Type Description System.String | Improve this Doc View Source CacheIdentifier Declaration public string CacheIdentifier { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommitDate Declaration public string CommitDate { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommitsSinceVersionSource Declaration public string CommitsSinceVersionSource { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommitsSinceVersionSourcePadded Declaration public string CommitsSinceVersionSourcePadded { get; set; } Property Value Type Description System.String | Improve this Doc View Source ConfigFile Declaration public string ConfigFile { get; set; } Property Value Type Description System.String | Improve this Doc View Source EscapedBranchName Declaration public string EscapedBranchName { get; set; } Property Value Type Description System.String | Improve this Doc View Source FullBuildMetaData Declaration public string FullBuildMetaData { get; set; } Property Value Type Description System.String | Improve this Doc View Source FullSemVer Declaration public string FullSemVer { get; set; } Property Value Type Description System.String | Improve this Doc View Source InformationalVersion Declaration public string InformationalVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source LegacySemVer Declaration public string LegacySemVer { get; set; } Property Value Type Description System.String | Improve this Doc View Source LegacySemVerPadded Declaration public string LegacySemVerPadded { get; set; } Property Value Type Description System.String | Improve this Doc View Source Major Declaration public string Major { get; set; } Property Value Type Description System.String | Improve this Doc View Source MajorMinorPatch Declaration public string MajorMinorPatch { get; set; } Property Value Type Description System.String | Improve this Doc View Source Minor Declaration public string Minor { get; set; } Property Value Type Description System.String | Improve this Doc View Source NoFetch Declaration public bool NoFetch { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NoNormalize Declaration public bool NoNormalize { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NuGetPreReleaseTag Declaration public string NuGetPreReleaseTag { get; set; } Property Value Type Description System.String | Improve this Doc View Source NuGetPreReleaseTagV2 Declaration public string NuGetPreReleaseTagV2 { get; set; } Property Value Type Description System.String | Improve this Doc View Source NuGetVersion Declaration public string NuGetVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source NuGetVersionV2 Declaration public string NuGetVersionV2 { get; set; } Property Value Type Description System.String | Improve this Doc View Source Patch Declaration public string Patch { get; set; } Property Value Type Description System.String | Improve this Doc View Source PreReleaseLabel Declaration public string PreReleaseLabel { get; set; } Property Value Type Description System.String | Improve this Doc View Source PreReleaseNumber Declaration public string PreReleaseNumber { get; set; } Property Value Type Description System.String | Improve this Doc View Source PreReleaseTag Declaration public string PreReleaseTag { get; set; } Property Value Type Description System.String | Improve this Doc View Source PreReleaseTagWithDash Declaration public string PreReleaseTagWithDash { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProjectDirectory Declaration public string ProjectDirectory { get; set; } Property Value Type Description System.String | Improve this Doc View Source SemVer Declaration public string SemVer { get; set; } Property Value Type Description System.String | Improve this Doc View Source Sha Declaration public string Sha { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShortSha Declaration public string ShortSha { get; set; } Property Value Type Description System.String | Improve this Doc View Source VersionSourceSha Declaration public string VersionSourceSha { get; set; } Property Value Type Description System.String | Improve this Doc View Source WeightedPreReleaseNumber Declaration public string WeightedPreReleaseNumber { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute() Declaration public override bool Execute() Returns Type Description System.Boolean Implements ICacheIdentification Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.html",
    "title": "Namespace Teronis.GitVersionCache.BuildTasks | Documentations",
    "keywords": "Namespace Teronis.GitVersionCache.BuildTasks Classes BuildTaskExecutor BuildTaskExecutorDefaults BuildTaskUtilities GetVersionCacheTask"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.Models.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.Models.html",
    "title": "Namespace Teronis.GitVersionCache.BuildTasks.Models | Documentations",
    "keywords": "Namespace Teronis.GitVersionCache.BuildTasks.Models Interfaces ICacheIdentification"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.Models.ICacheIdentification.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.BuildTasks.Models.ICacheIdentification.html",
    "title": "Interface ICacheIdentification | Documentations",
    "keywords": "Interface ICacheIdentification Namespace : Teronis.GitVersionCache.BuildTasks.Models Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public interface ICacheIdentification Properties | Improve this Doc View Source CacheIdentifier Declaration string CacheIdentifier { get; } Property Value Type Description System.String | Improve this Doc View Source ConfigFile Declaration string ConfigFile { get; } Property Value Type Description System.String | Improve this Doc View Source ProjectDirectory Declaration string ProjectDirectory { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.html",
    "title": "Namespace Teronis.GitVersionCache | Documentations",
    "keywords": "Namespace Teronis.GitVersionCache Classes NonZeroExitCodeException"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.NonZeroExitCodeException.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.NonZeroExitCodeException.html",
    "title": "Class NonZeroExitCodeException | Documentations",
    "keywords": "Class NonZeroExitCodeException Inheritance System.Object NonZeroExitCodeException Namespace : Teronis.GitVersionCache Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public class NonZeroExitCodeException : Exception Constructors | Improve this Doc View Source NonZeroExitCodeException(Int32) Declaration public NonZeroExitCodeException(int exitCode) Parameters Type Name Description System.Int32 exitCode | Improve this Doc View Source NonZeroExitCodeException(Int32, String) Declaration public NonZeroExitCodeException(int exitCode, string message) Parameters Type Name Description System.Int32 exitCode System.String message | Improve this Doc View Source NonZeroExitCodeException(Int32, String, Exception) Declaration public NonZeroExitCodeException(int exitCode, string message, Exception innerException) Parameters Type Name Description System.Int32 exitCode System.String message Exception innerException Properties | Improve this Doc View Source ExitCode Declaration public int ExitCode { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.Utilities.DirectoryUtils.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.Utilities.DirectoryUtils.html",
    "title": "Class DirectoryUtils | Documentations",
    "keywords": "Class DirectoryUtils Inheritance System.Object DirectoryUtils Namespace : Teronis.GitVersionCache.Utilities Assembly : Teronis.MSBuild.Packaging.GitVersionCache.dll Syntax public static class DirectoryUtils : object Methods | Improve this Doc View Source GetDirectoryOfFileAbove(String, DirectoryInfo, Boolean) Gets the absolute directory path of file above beginning from the parent directory of directory , unless includePassedDirectory is true. Declaration public static DirectoryInfo GetDirectoryOfFileAbove(string fileNameWithExtension, DirectoryInfo directory, bool includePassedDirectory = false) Parameters Type Name Description System.String fileNameWithExtension DirectoryInfo directory System.Boolean includePassedDirectory Returns Type Description DirectoryInfo | Improve this Doc View Source GetDirectoryOfFileAbove(String, Boolean) Gets the absolute directory path of file above beginning from the parent directory of the entry point, unless includePassedDirectory is true. Declaration public static DirectoryInfo GetDirectoryOfFileAbove(string fileNameWithExtension, bool includePassedDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.Boolean includePassedDirectory Returns Type Description DirectoryInfo | Improve this Doc View Source GetDirectoryOfFileAbove(String, String, Boolean) Gets the absolute directory path of file above beginning from the parent directory of directory , unless includePassedDirectory is true. Declaration public static DirectoryInfo GetDirectoryOfFileAbove(string fileNameWithExtension, string directory, bool includePassedDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.String directory System.Boolean includePassedDirectory Returns Type Description DirectoryInfo"
  },
  "Teronis.DotNet/Teronis.GitVersionCache.Utilities.html": {
    "href": "Teronis.DotNet/Teronis.GitVersionCache.Utilities.html",
    "title": "Namespace Teronis.GitVersionCache.Utilities | Documentations",
    "keywords": "Namespace Teronis.GitVersionCache.Utilities Classes DirectoryUtils"
  },
  "Teronis.DotNet/Teronis.html": {
    "href": "Teronis.DotNet/Teronis.html",
    "title": "Namespace Teronis | Documentations",
    "keywords": "Namespace Teronis Classes CovariantTuple<T1, T2> DelegatedComparer<T> ICovariantTupleExtensions IYetNullableExtensions KeyedAggregateException LazyTask Class that inherits SlimLazy<T> where generic type is . Singleton SlimLazy<T> YetNullable YetNullableExtensions Structs YetNullable<T> Interfaces IAttributeMemberInfoReceiver<T> ICovariantTuple<T1, T2> IPbkdf2Hash ISingleton This interface has no purpose. It just serves as helper interface being usable as constraint. IStringFormatter IYetNullable<T>"
  },
  "Teronis.DotNet/Teronis.IAttributeMemberInfoReceiver-1.html": {
    "href": "Teronis.DotNet/Teronis.IAttributeMemberInfoReceiver-1.html",
    "title": "Interface IAttributeMemberInfoReceiver<T> | Documentations",
    "keywords": "Interface IAttributeMemberInfoReceiver<T> Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface IAttributeMemberInfoReceiver<T> where T : Attribute Type Parameters Name Description T Methods | Improve this Doc View Source ReceiveAttributeVariableInfo(AttributeMemberInfo<T>) Declaration void ReceiveAttributeVariableInfo(AttributeMemberInfo<T> attrVarInfo) Parameters Type Name Description AttributeMemberInfo <T> attrVarInfo Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ICovariantTuple-2.html": {
    "href": "Teronis.DotNet/Teronis.ICovariantTuple-2.html",
    "title": "Interface ICovariantTuple<T1, T2> | Documentations",
    "keywords": "Interface ICovariantTuple<T1, T2> Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface ICovariantTuple<out T1, out T2> : IComparable, IStructuralComparable, IStructuralEquatable Type Parameters Name Description T1 T2 Properties | Improve this Doc View Source Item1 Declaration T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration T2 Item2 { get; } Property Value Type Description T2 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ICovariantTupleExtensions.Deconstruct<T1, T2>(ICovariantTuple<T1, T2>, out T1, out T2)"
  },
  "Teronis.DotNet/Teronis.ICovariantTupleExtensions.html": {
    "href": "Teronis.DotNet/Teronis.ICovariantTupleExtensions.html",
    "title": "Class ICovariantTupleExtensions | Documentations",
    "keywords": "Class ICovariantTupleExtensions Inheritance System.Object ICovariantTupleExtensions Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public static class ICovariantTupleExtensions : object Methods | Improve this Doc View Source Deconstruct<T1, T2>(ICovariantTuple<T1, T2>, out T1, out T2) Declaration public static void Deconstruct<T1, T2>(this ICovariantTuple<T1, T2> tuple, out T1 item1, out T2 item2) Parameters Type Name Description ICovariantTuple <T1, T2> tuple T1 item1 T2 item2 Type Parameters Name Description T1 T2"
  },
  "Teronis.DotNet/Teronis.IO.DirectoryOfPathAbovePredicate.html": {
    "href": "Teronis.DotNet/Teronis.IO.DirectoryOfPathAbovePredicate.html",
    "title": "Delegate DirectoryOfPathAbovePredicate | Documentations",
    "keywords": "Delegate DirectoryOfPathAbovePredicate Namespace : Teronis.IO Assembly : Teronis.NetStandard.Core.dll Syntax public delegate bool DirectoryOfPathAbovePredicate(DirectoryInfo directoryInfo); Parameters Type Name Description DirectoryInfo directoryInfo Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.DirectoryUtils.html": {
    "href": "Teronis.DotNet/Teronis.IO.DirectoryUtils.html",
    "title": "Class DirectoryUtils | Documentations",
    "keywords": "Class DirectoryUtils Inheritance System.Object DirectoryUtils Namespace : Teronis.IO Assembly : Teronis.NetStandard.Core.dll Syntax public static class DirectoryUtils : object Methods | Improve this Doc View Source GetDirectoryOfDirectoryAbove(String, DirectoryInfo, Boolean) Gets the absolute directory path of directory above beginning from the parent directory of beginningDirectory , unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfDirectoryAbove(string directoryName, DirectoryInfo beginningDirectory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String directoryName DirectoryInfo beginningDirectory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfDirectoryAbove(String, Boolean) Gets the absolute directory path of directory above beginning from the parent directory of the entry point, unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfDirectoryAbove(string directoryName, bool includeBeginningDirectory = false) Parameters Type Name Description System.String directoryName System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfDirectoryAbove(String, String, Boolean) Gets the absolute directory path of directory above beginning from the parent directory of directory , unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfDirectoryAbove(string directoryName, string directory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String directoryName System.String directory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfFileAbove(String, DirectoryInfo, Boolean) Gets the absolute directory path of file above beginning from the parent directory of beginningDirectory , unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfFileAbove(string fileNameWithExtension, DirectoryInfo beginningDirectory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension DirectoryInfo beginningDirectory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfFileAbove(String, Boolean) Gets the absolute directory path of file above beginning from the parent directory of the entry point, unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfFileAbove(string fileNameWithExtension, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfFileAbove(String, String, Boolean) Gets the absolute directory path of file above beginning from the parent directory of directory , unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfFileAbove(string fileNameWithExtension, string directory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.String directory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo > | Improve this Doc View Source GetDirectoryOfPathAbove(DirectoryOfPathAbovePredicate, DirectoryInfo, Boolean) Gets the absolute directory path of file or directory above beginning from the parent directory of beginningDirectory , unless includeBeginningDirectory is true. Declaration public static DirectoryInfo? GetDirectoryOfPathAbove(DirectoryOfPathAbovePredicate isDirectoryOfPathAbove, DirectoryInfo beginningDirectory, bool includeBeginningDirectory = false) Parameters Type Name Description DirectoryOfPathAbovePredicate isDirectoryOfPathAbove DirectoryInfo beginningDirectory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < DirectoryInfo >"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.FileLocker.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.FileLocker.html",
    "title": "Class FileLocker | Documentations",
    "keywords": "Class FileLocker Provides a file locker for one file that is thread-safe and supports nesting. Inheritance System.Object FileLocker Implements IFileLocker Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public sealed class FileLocker : object, IFileLocker Constructors | Improve this Doc View Source FileLocker(String, FileMode, FileAccess, FileShare) Declaration public FileLocker(string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath FileMode fileMode FileAccess fileAccess FileShare fileShare | Improve this Doc View Source FileLocker(String, Int32, FileMode, FileAccess, FileShare) Declaration public FileLocker(string filePath, int timeoutInMilliseconds, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath System.Int32 timeoutInMilliseconds FileMode fileMode FileAccess fileAccess FileShare fileShare | Improve this Doc View Source FileLocker(String, TimeSpan, FileMode, FileAccess, FileShare) Declaration public FileLocker(string filePath, TimeSpan timeout, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath TimeSpan timeout FileMode fileMode FileAccess fileAccess FileShare fileShare | Improve this Doc View Source FileLocker(IFileStreamLocker, String, FileMode, FileAccess, FileShare) Declaration public FileLocker(IFileStreamLocker fileStreamLocker, string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description IFileStreamLocker fileStreamLocker System.String filePath FileMode fileMode FileAccess fileAccess FileShare fileShare Properties | Improve this Doc View Source EnableConcurrentRethrow If true, the lock attempts are going to throw the exception which occured in the lock before. This happens to all locks until the manual unlock within the lock in which the excpetion initially begun has been processed. Declaration public bool EnableConcurrentRethrow { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FileAccess Declaration public FileAccess FileAccess { get; } Property Value Type Description FileAccess | Improve this Doc View Source FileMode Declaration public FileMode FileMode { get; } Property Value Type Description FileMode | Improve this Doc View Source FilePath Declaration public string FilePath { get; } Property Value Type Description System.String | Improve this Doc View Source FileShare Declaration public FileShare FileShare { get; } Property Value Type Description FileShare | Improve this Doc View Source FileStream Declaration public FileStream? FileStream { get; } Property Value Type Description System.Nullable < FileStream > | Improve this Doc View Source LocksInUse Declaration public int LocksInUse { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TimeoutInMilliseconds Declaration public int TimeoutInMilliseconds { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetCurrentThreadWithLockIdPrefixString(String) Declaration public static string GetCurrentThreadWithLockIdPrefixString(string lockId) Parameters Type Name Description System.String lockId Returns Type Description System.String | Improve this Doc View Source TryAcquire() Tries to acquire once the lock for file located at FilePath . Declaration public FileLockUse TryAcquire() Returns Type Description FileLockUse The file lock use that can be revoked by disposing it. Exceptions Type Condition Teronis.IO.FileLocking.FileLockException Trying to acquire file lock once failed. | Improve this Doc View Source WaitUntilAcquired(CancellationToken) Tries to acquire the lock for file located at FilePath as long as timeout is not hit and cancellation not requested. Declaration public FileLockUse WaitUntilAcquired(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description FileLockUse The file lock use that can be revoked by disposing it. Implements IFileLocker Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.FileLockUse.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.FileLockUse.html",
    "title": "Struct FileLockUse | Documentations",
    "keywords": "Struct FileLockUse Implements IDisposable Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public struct FileLockUse : IDisposable Fields | Improve this Doc View Source LockId Declaration public readonly string LockId Field Value Type Description System.String Properties | Improve this Doc View Source FileStream Declaration public FileStream FileStream { get; } Property Value Type Description FileStream Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.FileStreamLocker.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.FileStreamLocker.html",
    "title": "Struct FileStreamLocker | Documentations",
    "keywords": "Struct FileStreamLocker This Windows and Linux compliant API offers to lock files via . Implements IFileStreamLocker Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public struct FileStreamLocker : IFileStreamLocker Constructors | Improve this Doc View Source FileStreamLocker(ILockFileSystem) Declaration public FileStreamLocker(ILockFileSystem fileSystem) Parameters Type Name Description ILockFileSystem fileSystem Fields | Improve this Doc View Source Default Declaration public static FileStreamLocker Default Field Value Type Description FileStreamLocker | Improve this Doc View Source DefaultFileAccess Declaration public const FileAccess DefaultFileAccess = null Field Value Type Description FileAccess | Improve this Doc View Source DefaultFileMode Declaration public const FileMode DefaultFileMode = null Field Value Type Description FileMode | Improve this Doc View Source DefaultFileShare Declaration public const FileShare DefaultFileShare = null Field Value Type Description FileShare | Improve this Doc View Source DefaultTimeoutInMilliseconds Declaration public const int DefaultTimeoutInMilliseconds = null Field Value Type Description System.Int32 Methods | Improve this Doc View Source TryAcquire(String, FileMode, FileAccess, FileShare) Try to acquire lock on file but only as long the file stream is opened. Declaration public FileStream? TryAcquire(string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file Returns Type Description System.Nullable < FileStream > If not null the lock acquirement was successful. | Improve this Doc View Source TryAcquire(String, out FileStream, FileMode, FileAccess, FileShare) Try to acquire lock on file but only as long the file stream is opened. Declaration public bool TryAcquire(string filePath, out FileStream fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. FileStream fileStream The locked file as file stream. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file Returns Type Description System.Boolean If true the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public FileStream? WaitUntilAcquired(string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean noThrowOnTimeout Prevents throwing exception when lock fails. CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > If not null the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, out FileStream, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public bool WaitUntilAcquired(string filePath, out FileStream fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. FileStream fileStream The locked file as file stream. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean throwOnTimeout Enable throw when exception occured due due to timeout. CancellationToken cancellationToken Returns Type Description System.Boolean If true the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, Int32, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public FileStream? WaitUntilAcquired(string filePath, int timeoutInMilliseconds, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. System.Int32 timeoutInMilliseconds The number of milliseconds to hold on, or System.Threading.Timeout.Infinite (-1) to wait indefinitely. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean noThrowOnTimeout Prevents throwing exception when lock fails. CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > If not null the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, Int32, out FileStream, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public bool WaitUntilAcquired(string filePath, int timeoutInMilliseconds, out FileStream fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. System.Int32 timeoutInMilliseconds The number of milliseconds to hold on, or System.Threading.Timeout.Infinite (-1) to hold on indefinitely. FileStream fileStream The locked file as file stream. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean throwOnTimeout Enable throw when exception occured due due to timeout. CancellationToken cancellationToken Returns Type Description System.Boolean If true the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, TimeSpan, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public FileStream? WaitUntilAcquired(string filePath, TimeSpan timeout, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. TimeSpan timeout The timeout specified as . FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean noThrowOnTimeout Prevents throwing exception when lock fails. CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > If not null the lock acquirement was successful. | Improve this Doc View Source WaitUntilAcquired(String, TimeSpan, out FileStream, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Wait until file gets acquired lock but only as long the file stream is opened. Declaration public bool WaitUntilAcquired(string filePath, TimeSpan timeout, out FileStream fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath The path to file that is tried to get locked.. TimeSpan timeout The timeout specified as . FileStream fileStream The locked file as file stream. FileMode fileMode The file mode when opening file. FileAccess fileAccess The file access when opening file. FileShare fileShare The file share when opening file System.Boolean throwOnTimeout Enable throw when exception occured due due to timeout. CancellationToken cancellationToken Returns Type Description System.Boolean If true the lock acquirement was successful. Implements IFileStreamLocker"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.html",
    "title": "Namespace Teronis.IO.FileLocking | Documentations",
    "keywords": "Namespace Teronis.IO.FileLocking Classes FileLocker Provides a file locker for one file that is thread-safe and supports nesting. LockFileSystem Structs FileLockUse FileStreamLocker This Windows and Linux compliant API offers to lock files via . Interfaces IFileLocker IFileStreamLocker ILockFileSystem"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.IFileLocker.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.IFileLocker.html",
    "title": "Interface IFileLocker | Documentations",
    "keywords": "Interface IFileLocker Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public interface IFileLocker Methods | Improve this Doc View Source TryAcquire() Tries once to acquire file lock. Declaration FileLockUse TryAcquire() Returns Type Description FileLockUse | Improve this Doc View Source WaitUntilAcquired(CancellationToken) Waits until file lock is acquired. Declaration FileLockUse WaitUntilAcquired(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description FileLockUse Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.IFileStreamLocker.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.IFileStreamLocker.html",
    "title": "Interface IFileStreamLocker | Documentations",
    "keywords": "Interface IFileStreamLocker Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public interface IFileStreamLocker Methods | Improve this Doc View Source TryAcquire(String, FileMode, FileAccess, FileShare) Declaration FileStream? TryAcquire(string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath FileMode fileMode FileAccess fileAccess FileShare fileShare Returns Type Description System.Nullable < FileStream > | Improve this Doc View Source TryAcquire(String, out Nullable<FileStream>, FileMode, FileAccess, FileShare) Declaration bool TryAcquire(string filePath, out FileStream? fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null) Parameters Type Name Description System.String filePath System.Nullable < FileStream > fileStream FileMode fileMode FileAccess fileAccess FileShare fileShare Returns Type Description System.Boolean | Improve this Doc View Source WaitUntilAcquired(String, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration FileStream? WaitUntilAcquired(string filePath, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean noThrowOnTimeout CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > | Improve this Doc View Source WaitUntilAcquired(String, Int32, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration FileStream? WaitUntilAcquired(string filePath, int timeoutInMilliseconds, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath System.Int32 timeoutInMilliseconds FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean noThrowOnTimeout CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > | Improve this Doc View Source WaitUntilAcquired(String, Int32, out Nullable<FileStream>, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration bool WaitUntilAcquired(string filePath, int timeoutInMilliseconds, out FileStream? fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath System.Int32 timeoutInMilliseconds System.Nullable < FileStream > fileStream FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean throwOnTimeout CancellationToken cancellationToken Returns Type Description System.Boolean | Improve this Doc View Source WaitUntilAcquired(String, out Nullable<FileStream>, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration bool WaitUntilAcquired(string filePath, out FileStream? fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath System.Nullable < FileStream > fileStream FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean throwOnTimeout CancellationToken cancellationToken Returns Type Description System.Boolean | Improve this Doc View Source WaitUntilAcquired(String, TimeSpan, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration FileStream? WaitUntilAcquired(string filePath, TimeSpan timeout, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool noThrowOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath TimeSpan timeout FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean noThrowOnTimeout CancellationToken cancellationToken Returns Type Description System.Nullable < FileStream > | Improve this Doc View Source WaitUntilAcquired(String, TimeSpan, out Nullable<FileStream>, FileMode, FileAccess, FileShare, Boolean, CancellationToken) Declaration bool WaitUntilAcquired(string filePath, TimeSpan timeout, out FileStream? fileStream, FileMode fileMode = null, FileAccess fileAccess = null, FileShare fileShare = null, bool throwOnTimeout = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String filePath TimeSpan timeout System.Nullable < FileStream > fileStream FileMode fileMode FileAccess fileAccess FileShare fileShare System.Boolean throwOnTimeout CancellationToken cancellationToken Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.ILockFileSystem.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.ILockFileSystem.html",
    "title": "Interface ILockFileSystem | Documentations",
    "keywords": "Interface ILockFileSystem Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public interface ILockFileSystem Methods | Improve this Doc View Source Open(String, FileMode, FileAccess, FileShare) Declaration FileStream Open(string path, FileMode mode, FileAccess access, FileShare share) Parameters Type Name Description System.String path FileMode mode FileAccess access FileShare share Returns Type Description FileStream Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.FileLocking.LockFileSystem.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileLocking.LockFileSystem.html",
    "title": "Class LockFileSystem | Documentations",
    "keywords": "Class LockFileSystem Inheritance System.Object LockFileSystem Implements ILockFileSystem Namespace : Teronis.IO.FileLocking Assembly : Teronis.NetStandard.Core.dll Syntax public class LockFileSystem : object, ILockFileSystem Methods | Improve this Doc View Source Open(String, FileMode, FileAccess, FileShare) Declaration public FileStream Open(string filePath, FileMode fileMode, FileAccess fileAccess, FileShare fileShare) Parameters Type Name Description System.String filePath FileMode fileMode FileAccess fileAccess FileShare fileShare Returns Type Description FileStream Implements ILockFileSystem Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IO.FileUtils.html": {
    "href": "Teronis.DotNet/Teronis.IO.FileUtils.html",
    "title": "Class FileUtils | Documentations",
    "keywords": "Class FileUtils Inheritance System.Object FileUtils Namespace : Teronis.IO Assembly : Teronis.NetStandard.Core.dll Syntax public static class FileUtils : object Methods | Improve this Doc View Source GetPathOfFileAbove(String, DirectoryInfo, Boolean) Gets the absolute file path of file above beginning from the parent directory of directory , unless includeBeginningDirectory is true. Declaration public static FileInfo? GetPathOfFileAbove(string fileNameWithExtension, DirectoryInfo directory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension DirectoryInfo directory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < FileInfo > | Improve this Doc View Source GetPathOfFileAbove(String, Boolean) Gets the absolute file path of file above beginning from the parent directory of the entry point, unless includeBeginningDirectory is true. Declaration public static FileInfo? GetPathOfFileAbove(string fileNameWithExtension, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < FileInfo > | Improve this Doc View Source GetPathOfFileAbove(String, String, Boolean) Gets the absolute file path of file above beginning from the parent directory of directory , unless includeBeginningDirectory is true. Declaration public static FileInfo? GetPathOfFileAbove(string fileNameWithExtension, string directory, bool includeBeginningDirectory = false) Parameters Type Name Description System.String fileNameWithExtension System.String directory System.Boolean includeBeginningDirectory Returns Type Description System.Nullable < FileInfo >"
  },
  "Teronis.DotNet/Teronis.IO.html": {
    "href": "Teronis.DotNet/Teronis.IO.html",
    "title": "Namespace Teronis.IO | Documentations",
    "keywords": "Namespace Teronis.IO Classes DirectoryUtils FileUtils Delegates DirectoryOfPathAbovePredicate"
  },
  "Teronis.DotNet/Teronis.IPbkdf2Hash.html": {
    "href": "Teronis.DotNet/Teronis.IPbkdf2Hash.html",
    "title": "Interface IPbkdf2Hash | Documentations",
    "keywords": "Interface IPbkdf2Hash Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface IPbkdf2Hash Properties | Improve this Doc View Source Hash Declaration string? Hash { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Interations Declaration int Interations { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Salt Declaration string? Salt { get; set; } Property Value Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ISingleton.html": {
    "href": "Teronis.DotNet/Teronis.ISingleton.html",
    "title": "Interface ISingleton | Documentations",
    "keywords": "Interface ISingleton This interface has no purpose. It just serves as helper interface being usable as constraint. Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface ISingleton Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IStringFormatter.html": {
    "href": "Teronis.DotNet/Teronis.IStringFormatter.html",
    "title": "Interface IStringFormatter | Documentations",
    "keywords": "Interface IStringFormatter Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface IStringFormatter Methods | Improve this Doc View Source Format(String) Declaration string Format(string source) Parameters Type Name Description System.String source Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.IYetNullable-1.html": {
    "href": "Teronis.DotNet/Teronis.IYetNullable-1.html",
    "title": "Interface IYetNullable<T> | Documentations",
    "keywords": "Interface IYetNullable<T> Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public interface IYetNullable<out T> Type Parameters Name Description T Properties | Improve this Doc View Source IsNotNull Declaration bool IsNotNull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNull Declaration bool IsNull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Declaration T Value { get; } Property Value Type Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IYetNullableExtensions.TryGetNotNull<T>(IYetNullable<T>, out T)"
  },
  "Teronis.DotNet/Teronis.IYetNullableExtensions.html": {
    "href": "Teronis.DotNet/Teronis.IYetNullableExtensions.html",
    "title": "Class IYetNullableExtensions | Documentations",
    "keywords": "Class IYetNullableExtensions Inheritance System.Object IYetNullableExtensions Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public static class IYetNullableExtensions : object Methods | Improve this Doc View Source TryGetNotNull<T>(IYetNullable<T>, out T) Declaration public static bool TryGetNotNull<T>(this IYetNullable<T> nullable, out T value) Parameters Type Name Description IYetNullable <T> nullable T value Returns Type Description System.Boolean Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Json.Converters.ByteArrayConverter.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.ByteArrayConverter.html",
    "title": "Class ByteArrayConverter | Documentations",
    "keywords": "Class ByteArrayConverter It won't translate it to Base64. E.g. [JsonConverter(typeof(ByteArrayConverter))] Inheritance System.Object ByteArrayConverter Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public class ByteArrayConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description System.Boolean | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType System.Object existingValue JsonSerializer serializer Returns Type Description System.Object | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer System.Object value JsonSerializer serializer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Converters.ECMAScriptTimestampConverter.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.ECMAScriptTimestampConverter.html",
    "title": "Class ECMAScriptTimestampConverter | Documentations",
    "keywords": "Class ECMAScriptTimestampConverter Inheritance System.Object ECMAScriptTimestampConverter Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public class ECMAScriptTimestampConverter : JsonConverter Constructors | Improve this Doc View Source ECMAScriptTimestampConverter() Declaration public ECMAScriptTimestampConverter() | Improve this Doc View Source ECMAScriptTimestampConverter(Boolean) Declaration public ECMAScriptTimestampConverter(bool isExceptionUnwanted) Parameters Type Name Description System.Boolean isExceptionUnwanted Properties | Improve this Doc View Source IsExceptionUnwanted Declaration public bool IsExceptionUnwanted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description System.Boolean | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType System.Object existingValue JsonSerializer serializer Returns Type Description System.Object | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer System.Object value JsonSerializer serializer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Converters.ExceptionalDefaultValueConverter.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.ExceptionalDefaultValueConverter.html",
    "title": "Class ExceptionalDefaultValueConverter | Documentations",
    "keywords": "Class ExceptionalDefaultValueConverter Inheritance System.Object ExceptionalDefaultValueConverter Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public class ExceptionalDefaultValueConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description System.Boolean | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType System.Object existingValue JsonSerializer serializer Returns Type Description System.Object | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer System.Object value JsonSerializer serializer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Converters.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.html",
    "title": "Namespace Teronis.Json.Converters | Documentations",
    "keywords": "Namespace Teronis.Json.Converters Classes ByteArrayConverter It won't translate it to Base64. E.g. [JsonConverter(typeof(ByteArrayConverter))] ECMAScriptTimestampConverter ExceptionalDefaultValueConverter JsonPropertyNameAnnouncingConverter<KeyType, ValueType> This converter notifies instantiating classes about their property name. It supports to deserialize a JSON object to or . TruthyValueConverter Interfaces IAnnounceJsonPropertyName<KeyType> If implemented on a class that is used as JSON object value, it will announce its property name from its origin JSON object that wouldn't be available otherwise."
  },
  "Teronis.DotNet/Teronis.Json.Converters.IAnnounceJsonPropertyName-1.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.IAnnounceJsonPropertyName-1.html",
    "title": "Interface IAnnounceJsonPropertyName<KeyType> | Documentations",
    "keywords": "Interface IAnnounceJsonPropertyName<KeyType> If implemented on a class that is used as JSON object value, it will announce its property name from its origin JSON object that wouldn't be available otherwise. Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public interface IAnnounceJsonPropertyName<KeyType> Type Parameters Name Description KeyType Methods | Improve this Doc View Source AnnouncePropertyName(KeyType) Declaration void AnnouncePropertyName(KeyType key) Parameters Type Name Description KeyType key Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Converters.JsonPropertyNameAnnouncingConverter-2.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.JsonPropertyNameAnnouncingConverter-2.html",
    "title": "Class JsonPropertyNameAnnouncingConverter<KeyType, ValueType> | Documentations",
    "keywords": "Class JsonPropertyNameAnnouncingConverter<KeyType, ValueType> This converter notifies instantiating classes about their property name. It supports to deserialize a JSON object to or . Inheritance System.Object JsonPropertyNameAnnouncingConverter<KeyType, ValueType> Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public class JsonPropertyNameAnnouncingConverter<KeyType, ValueType> : JsonConverter where ValueType : IAnnounceJsonPropertyName<KeyType> Type Parameters Name Description KeyType ValueType Constructors | Improve this Doc View Source JsonPropertyNameAnnouncingConverter() Declaration public JsonPropertyNameAnnouncingConverter() | Improve this Doc View Source JsonPropertyNameAnnouncingConverter(Type) Declaration public JsonPropertyNameAnnouncingConverter(Type jsonPropertyReaderType) Parameters Type Name Description Type jsonPropertyReaderType Properties | Improve this Doc View Source CanWrite Declaration public override bool CanWrite { get; } Property Value Type Description System.Boolean | Improve this Doc View Source JsonPropertyEntitifier Declaration public IJsonPropertyEntitifiable<ValueType> JsonPropertyEntitifier { get; } Property Value Type Description IJsonPropertyEntitifiable <ValueType> Methods | Improve this Doc View Source CanConvert(Type) Returns true if not an exception is thrown before. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description System.Boolean | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType System.Object existingValue JsonSerializer serializer Returns Type Description System.Object Return a . | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer System.Object value JsonSerializer serializer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Converters.TruthyValueConverter.html": {
    "href": "Teronis.DotNet/Teronis.Json.Converters.TruthyValueConverter.html",
    "title": "Class TruthyValueConverter | Documentations",
    "keywords": "Class TruthyValueConverter Inheritance System.Object TruthyValueConverter Namespace : Teronis.Json.Converters Assembly : Teronis.NetStandard.Json.dll Syntax public class TruthyValueConverter : JsonConverter Constructors | Improve this Doc View Source TruthyValueConverter(Object) Declaration public TruthyValueConverter(object comparisonValue) Parameters Type Name Description System.Object comparisonValue Properties | Improve this Doc View Source ComparisonValue Declaration public object ComparisonValue { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description System.Boolean | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description JsonReader reader Type objectType System.Object existingValue JsonSerializer serializer Returns Type Description System.Object | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description JsonWriter writer System.Object value JsonSerializer serializer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Json.Extensions.html",
    "title": "Namespace Teronis.Json.Extensions | Documentations",
    "keywords": "Namespace Teronis.Json.Extensions Classes JsonSerializerExtensions ObjectExtensions StringExtensions"
  },
  "Teronis.DotNet/Teronis.Json.Extensions.JsonSerializerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Json.Extensions.JsonSerializerExtensions.html",
    "title": "Class JsonSerializerExtensions | Documentations",
    "keywords": "Class JsonSerializerExtensions Inheritance System.Object JsonSerializerExtensions Namespace : Teronis.Json.Extensions Assembly : Teronis.NetStandard.Json.dll Syntax public static class JsonSerializerExtensions : object Methods | Improve this Doc View Source GetSettings(JsonSerializer) Declaration public static JsonSerializerSettings GetSettings(this JsonSerializer serializer) Parameters Type Name Description JsonSerializer serializer Returns Type Description JsonSerializerSettings"
  },
  "Teronis.DotNet/Teronis.Json.Extensions.ObjectExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Json.Extensions.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Documentations",
    "keywords": "Class ObjectExtensions Inheritance System.Object ObjectExtensions Namespace : Teronis.Json.Extensions Assembly : Teronis.NetStandard.Json.dll Syntax public static class ObjectExtensions : object Methods | Improve this Doc View Source SerializeObject(Object) Declaration public static string SerializeObject(this object obj) Parameters Type Name Description System.Object obj Returns Type Description System.String | Improve this Doc View Source SerializeObject(Object, JsonSerializerSettings) Declaration public static string SerializeObject(this object obj, JsonSerializerSettings settings) Parameters Type Name Description System.Object obj JsonSerializerSettings settings Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Json.Extensions.StringExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Json.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Documentations",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Namespace : Teronis.Json.Extensions Assembly : Teronis.NetStandard.Json.dll Syntax public static class StringExtensions : object Methods | Improve this Doc View Source DeserializeJson(String, Type) Declaration public static object DeserializeJson(this string str, Type type) Parameters Type Name Description System.String str Type type Returns Type Description System.Object | Improve this Doc View Source DeserializeJson(String, Type, JsonSerializerSettings) Declaration public static object DeserializeJson(this string str, Type type, JsonSerializerSettings settings) Parameters Type Name Description System.String str Type type JsonSerializerSettings settings Returns Type Description System.Object | Improve this Doc View Source DeserializeJson<T>(String) Declaration public static T DeserializeJson<T>(this string str) Parameters Type Name Description System.String str Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeJson<T>(String, JsonSerializerSettings) Declaration public static T DeserializeJson<T>(this string str, JsonSerializerSettings settings) Parameters Type Name Description System.String str JsonSerializerSettings settings Returns Type Description T Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.DefaultJsonPropertyEntitifier-1.html": {
    "href": "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.DefaultJsonPropertyEntitifier-1.html",
    "title": "Class DefaultJsonPropertyEntitifier<ValueType> | Documentations",
    "keywords": "Class DefaultJsonPropertyEntitifier<ValueType> Inheritance System.Object DefaultJsonPropertyEntitifier<ValueType> Implements IJsonPropertyEntitifiable <ValueType> Namespace : Teronis.Json.PropertyEntitifiers Assembly : Teronis.NetStandard.Json.dll Syntax public class DefaultJsonPropertyEntitifier<ValueType> : object, IJsonPropertyEntitifiable<ValueType> Type Parameters Name Description ValueType Methods | Improve this Doc View Source EntitifyJsonProperty(JProperty, JsonSerializer) Declaration public ValueType EntitifyJsonProperty(JProperty property, JsonSerializer serializer) Parameters Type Name Description JProperty property JsonSerializer serializer Returns Type Description ValueType Expect a value. Implements IJsonPropertyEntitifiable<EntityType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.html": {
    "href": "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.html",
    "title": "Namespace Teronis.Json.PropertyEntitifiers | Documentations",
    "keywords": "Namespace Teronis.Json.PropertyEntitifiers Classes DefaultJsonPropertyEntitifier<ValueType> Interfaces IJsonPropertyEntitifiable<EntityType>"
  },
  "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.IJsonPropertyEntitifiable-1.html": {
    "href": "Teronis.DotNet/Teronis.Json.PropertyEntitifiers.IJsonPropertyEntitifiable-1.html",
    "title": "Interface IJsonPropertyEntitifiable<EntityType> | Documentations",
    "keywords": "Interface IJsonPropertyEntitifiable<EntityType> Namespace : Teronis.Json.PropertyEntitifiers Assembly : Teronis.NetStandard.Json.dll Syntax public interface IJsonPropertyEntitifiable<EntityType> Type Parameters Name Description EntityType Methods | Improve this Doc View Source EntitifyJsonProperty(JProperty, JsonSerializer) Declaration EntityType EntitifyJsonProperty(JProperty property, JsonSerializer serializer) Parameters Type Name Description JProperty property JsonSerializer serializer Returns Type Description EntityType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Serialization.html": {
    "href": "Teronis.DotNet/Teronis.Json.Serialization.html",
    "title": "Namespace Teronis.Json.Serialization | Documentations",
    "keywords": "Namespace Teronis.Json.Serialization Classes IgnorableVariablesContractResolver Special JsonConvert resolver that allows you to ignore properties. See https://stackoverflow.com/a/13588192/1037948 IncludedVariablesContractResolver Special JsonConvert resolver that only resolves included properties."
  },
  "Teronis.DotNet/Teronis.Json.Serialization.IgnorableVariablesContractResolver.html": {
    "href": "Teronis.DotNet/Teronis.Json.Serialization.IgnorableVariablesContractResolver.html",
    "title": "Class IgnorableVariablesContractResolver | Documentations",
    "keywords": "Class IgnorableVariablesContractResolver Special JsonConvert resolver that allows you to ignore properties. See https://stackoverflow.com/a/13588192/1037948 Inheritance System.Object IgnorableVariablesContractResolver Implements IVariablesClusionHelper Namespace : Teronis.Json.Serialization Assembly : Teronis.NetStandard.Json.dll Syntax public class IgnorableVariablesContractResolver : DefaultContractResolver, IVariablesClusionHelper Constructors | Improve this Doc View Source IgnorableVariablesContractResolver() Declaration public IgnorableVariablesContractResolver() | Improve this Doc View Source IgnorableVariablesContractResolver(IEnumerable<KeyValuePair<Type, String>>) Declaration public IgnorableVariablesContractResolver(IEnumerable<KeyValuePair<Type, string>> includedVariables) Parameters Type Name Description IEnumerable < KeyValuePair < Type , System.String >> includedVariables Properties | Improve this Doc View Source IgnorableVariablesByTypeList Declaration protected Dictionary<Type, HashSet<string>> IgnorableVariablesByTypeList { get; } Property Value Type Description Dictionary < Type , HashSet < System.String >> Methods | Improve this Doc View Source CreateProperty(MemberInfo, MemberSerialization) Declaration protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization) Parameters Type Name Description MemberInfo member MemberSerialization memberSerialization Returns Type Description JsonProperty | Improve this Doc View Source IgnoreVariable(Type, String[]) Explicitly ignore the given property(s) for the given type Declaration public void IgnoreVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType System.String [] propertyName one or more properties to ignore. Leave empty to ignore the type entirely. Implements IVariablesClusionHelper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Serialization.IncludedVariablesContractResolver.html": {
    "href": "Teronis.DotNet/Teronis.Json.Serialization.IncludedVariablesContractResolver.html",
    "title": "Class IncludedVariablesContractResolver | Documentations",
    "keywords": "Class IncludedVariablesContractResolver Special JsonConvert resolver that only resolves included properties. Inheritance System.Object IncludedVariablesContractResolver Implements IVariablesClusionHelper Namespace : Teronis.Json.Serialization Assembly : Teronis.NetStandard.Json.dll Syntax public class IncludedVariablesContractResolver : DefaultContractResolver, IVariablesClusionHelper Constructors | Improve this Doc View Source IncludedVariablesContractResolver() Declaration public IncludedVariablesContractResolver() | Improve this Doc View Source IncludedVariablesContractResolver(IEnumerable<KeyValuePair<Type, String>>) Declaration public IncludedVariablesContractResolver(IEnumerable<KeyValuePair<Type, string>> includedVariables) Parameters Type Name Description IEnumerable < KeyValuePair < Type , System.String >> includedVariables Properties | Improve this Doc View Source IncludedVariablesByTypeList Declaration protected Dictionary<Type, HashSet<string>> IncludedVariablesByTypeList { get; } Property Value Type Description Dictionary < Type , HashSet < System.String >> Methods | Improve this Doc View Source CreateProperty(MemberInfo, MemberSerialization) Declaration protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization) Parameters Type Name Description MemberInfo member MemberSerialization memberSerialization Returns Type Description JsonProperty | Improve this Doc View Source IncludeVariable(Type, String[]) Explicitly include the given property(s) for the given type Declaration public void IncludeVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType The type that declares the property System.String [] propertyName One or more property to include. Leave it empty to include the entire type. Implements IVariablesClusionHelper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Json.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Json.Utils.html",
    "title": "Namespace Teronis.Json.Utils | Documentations",
    "keywords": "Namespace Teronis.Json.Utils Classes TeronisJsonUtils"
  },
  "Teronis.DotNet/Teronis.Json.Utils.TeronisJsonUtils.html": {
    "href": "Teronis.DotNet/Teronis.Json.Utils.TeronisJsonUtils.html",
    "title": "Class TeronisJsonUtils | Documentations",
    "keywords": "Class TeronisJsonUtils Inheritance System.Object TeronisJsonUtils Namespace : Teronis.Json.Utils Assembly : Teronis.NetStandard.Json.dll Syntax public class TeronisJsonUtils : object Methods | Improve this Doc View Source GetDeserializedPropertyContainer(Type, String, Object) Deserialize only a part of an instance with the type of declaringType by one or more \"variable name and its content\"-pairs. Declaration public static object GetDeserializedPropertyContainer(Type containerType, string variableName, object content) Parameters Type Name Description Type containerType System.String variableName System.Object content Returns Type Description System.Object | Improve this Doc View Source GetDeserializedPropertyContainer(Type, String, Object, JsonSerializerSettings) Deserialize only a part of an instance with the type of declaringType by one or more \"variable name and its content\"-pairs. Declaration public static object GetDeserializedPropertyContainer(Type containerType, string variableName, object content, JsonSerializerSettings settings) Parameters Type Name Description Type containerType System.String variableName System.Object content JsonSerializerSettings settings The settings when serializing and deserializing the dummy dictionary. Passing null is handled by Json.NET. Returns Type Description System.Object | Improve this Doc View Source GetDeserializePropertiesContainer(Type, JsonSerializerSettings, KeyValuePair<String, Object>[]) Deserialize only a part of an instance with the type of containerType by one or more \"variable name and its content\"-pairs. Declaration public static object GetDeserializePropertiesContainer(Type containerType, JsonSerializerSettings settings, params KeyValuePair<string, object>[] variableNameAndContentPairs) Parameters Type Name Description Type containerType The type of the container which contains all \"variable name and its content\"-pairs JsonSerializerSettings settings The settings when serializing and deserializing the dummy dictionary. Passing null is handled by Json.NET. KeyValuePair < System.String , System.Object >[] variableNameAndContentPairs The variable members of the container Returns Type Description System.Object | Improve this Doc View Source GetDeserializePropertiesContainer(Type, KeyValuePair<String, Object>[]) Deserialize only a part of an instance with the type of containerType by one or more \"variable name and its content\"-pairs. Declaration public static object GetDeserializePropertiesContainer(Type containerType, params KeyValuePair<string, object>[] variableNameAndContentPairs) Parameters Type Name Description Type containerType The type of the container which contains all \"variable name and its content\"-pairs KeyValuePair < System.String , System.Object >[] variableNameAndContentPairs The variable members of the container Returns Type Description System.Object Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.KeyedAggregateException.html": {
    "href": "Teronis.DotNet/Teronis.KeyedAggregateException.html",
    "title": "Class KeyedAggregateException | Documentations",
    "keywords": "Class KeyedAggregateException Inheritance System.Object KeyedAggregateException Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public class KeyedAggregateException : AggregateException Constructors | Improve this Doc View Source KeyedAggregateException() Declaration public KeyedAggregateException() | Improve this Doc View Source KeyedAggregateException(SerializationInfo, StreamingContext) Declaration protected KeyedAggregateException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source KeyedAggregateException(Nullable<String>) Declaration public KeyedAggregateException(string? message) Parameters Type Name Description System.Nullable < System.String > message | Improve this Doc View Source KeyedAggregateException(Nullable<String>, IDictionary<String, Exception>) Declaration public KeyedAggregateException(string? message, IDictionary<string, Exception> keyedExceptions) Parameters Type Name Description System.Nullable < System.String > message IDictionary < System.String , Exception > keyedExceptions | Improve this Doc View Source KeyedAggregateException(Nullable<String>, String, Exception) Declaration public KeyedAggregateException(string? message, string errorCode, Exception innerException) Parameters Type Name Description System.Nullable < System.String > message System.String errorCode Exception innerException Properties | Improve this Doc View Source InnerExceptionsWithKeys Declaration public ReadOnlyDictionary<string, Exception> InnerExceptionsWithKeys { get; } Property Value Type Description ReadOnlyDictionary < System.String , Exception > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.LazyTask.html": {
    "href": "Teronis.DotNet/Teronis.LazyTask.html",
    "title": "Class LazyTask | Documentations",
    "keywords": "Class LazyTask Class that inherits SlimLazy<T> where generic type is . Inheritance System.Object SlimLazy < Task > LazyTask TaskTestCase Inherited Members SlimLazy<Task>.IsValueCreated SlimLazy<Task>.Value SlimLazy<Task>.SetValueIfNotCreated(Task) Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public class LazyTask : SlimLazy<Task> Constructors | Improve this Doc View Source LazyTask(Func<CancellationToken, Task>) Constructs the instance of LazyTask . Declaration public LazyTask(Func<CancellationToken, Task> taskProvider) Parameters Type Name Description Func < CancellationToken , Task > taskProvider Methods | Improve this Doc View Source SetValueIfNotCreated(CancellationToken) Invokes the value factory with cancellationToken if the value has not been created so far. Declaration public void SetValueIfNotCreated(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The cancellation token. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.EqualityComparingExpressionReplacerVisitor.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.EqualityComparingExpressionReplacerVisitor.html",
    "title": "Class EqualityComparingExpressionReplacerVisitor | Documentations",
    "keywords": "Class EqualityComparingExpressionReplacerVisitor Inheritance System.Object EqualityComparingExpressionReplacerVisitor Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class EqualityComparingExpressionReplacerVisitor : ExpressionVisitor Constructors | Improve this Doc View Source EqualityComparingExpressionReplacerVisitor(IReadOnlyCollection<ExpressionMapping>) Declaration public EqualityComparingExpressionReplacerVisitor(IReadOnlyCollection<ExpressionMapping> expressionMappings) Parameters Type Name Description IReadOnlyCollection < ExpressionMapping > expressionMappings Fields | Improve this Doc View Source expressionMappings Declaration public IReadOnlyCollection<ExpressionMapping> expressionMappings Field Value Type Description IReadOnlyCollection < ExpressionMapping > Methods | Improve this Doc View Source Visit(Nullable<Expression>) Declaration public override Expression Visit(Expression? node) Parameters Type Name Description System.Nullable < Expression > node Returns Type Description Expression Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.EqualityComparingExpressionVisitor.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.EqualityComparingExpressionVisitor.html",
    "title": "Class EqualityComparingExpressionVisitor | Documentations",
    "keywords": "Class EqualityComparingExpressionVisitor Inheritance System.Object EqualityComparingExpressionVisitor Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class EqualityComparingExpressionVisitor : ExpressionVisitor Constructors | Improve this Doc View Source EqualityComparingExpressionVisitor(Expression) Declaration protected EqualityComparingExpressionVisitor(Expression expression) Parameters Type Name Description Expression expression Properties | Improve this Doc View Source CurrentUnwindedExpression The unwinded expression will be used to check equality against visited expression. Declaration protected Expression? CurrentUnwindedExpression { get; } Property Value Type Description System.Nullable < Expression > | Improve this Doc View Source IsVisitationStopped True if one expression in expression tree was not equal. Declaration public bool IsVisitationStopped { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CheckEquality(Nullable<Expression>, Nullable<Expression>) Checks equality of x and y . Declaration public static bool CheckEquality(Expression? x, Expression? y) Parameters Type Name Description System.Nullable < Expression > x The expression that will be unwinded. System.Nullable < Expression > y The expression that is used for visitation. Returns Type Description System.Boolean True of x and y are equal. | Improve this Doc View Source CheckEquality(EqualityComparingExpressionVisitor, Expression) Checks equality for y against visitor. Declaration public static bool CheckEquality(EqualityComparingExpressionVisitor visitor, Expression y) Parameters Type Name Description EqualityComparingExpressionVisitor visitor Expression y The expression that is used for visitation. Returns Type Description System.Boolean True if visitor has proven y as equal. | Improve this Doc View Source CurrentUnwindedExpressionCastTo<T>(T) Declaration protected T CurrentUnwindedExpressionCastTo<T>(T _) where T : Expression Parameters Type Name Description T _ Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Visit(Nullable<Expression>) Declaration public override Expression Visit(Expression? expression) Parameters Type Name Description System.Nullable < Expression > expression Returns Type Description Expression | Improve this Doc View Source VisitBinary(BinaryExpression) Declaration protected override Expression VisitBinary(BinaryExpression binary) Parameters Type Name Description BinaryExpression binary Returns Type Description Expression | Improve this Doc View Source VisitConstant(ConstantExpression) Declaration protected override Expression VisitConstant(ConstantExpression constant) Parameters Type Name Description ConstantExpression constant Returns Type Description Expression | Improve this Doc View Source VisitMember(MemberExpression) Declaration protected override Expression VisitMember(MemberExpression member) Parameters Type Name Description MemberExpression member Returns Type Description Expression | Improve this Doc View Source VisitMethodCall(MethodCallExpression) Declaration protected override Expression VisitMethodCall(MethodCallExpression methodCall) Parameters Type Name Description MethodCallExpression methodCall Returns Type Description Expression | Improve this Doc View Source VisitNew(NewExpression) Declaration protected override Expression VisitNew(NewExpression new) Parameters Type Name Description NewExpression new Returns Type Description Expression | Improve this Doc View Source VisitParameter(ParameterExpression) Declaration protected override Expression VisitParameter(ParameterExpression parameter) Parameters Type Name Description ParameterExpression parameter Returns Type Description Expression | Improve this Doc View Source VisitTypeBinary(TypeBinaryExpression) Declaration protected override Expression VisitTypeBinary(TypeBinaryExpression type) Parameters Type Name Description TypeBinaryExpression type Returns Type Description Expression | Improve this Doc View Source VisitUnary(UnaryExpression) Declaration protected override Expression VisitUnary(UnaryExpression unary) Parameters Type Name Description UnaryExpression unary Returns Type Description Expression Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionEqualityComparer.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionEqualityComparer.html",
    "title": "Class ExpressionEqualityComparer | Documentations",
    "keywords": "Class ExpressionEqualityComparer Inheritance System.Object ExpressionEqualityComparer Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class ExpressionEqualityComparer : EqualityComparer<Expression> Fields | Improve this Doc View Source Default Declaration public static ExpressionEqualityComparer Default Field Value Type Description ExpressionEqualityComparer Methods | Improve this Doc View Source CastBeforeEquals(Object, Object) Checks for equality. If no null is involved the parameters are tried to be casted to and checked against . Declaration public virtual bool CastBeforeEquals(object x, object y) Parameters Type Name Description System.Object x System.Object y Returns Type Description System.Boolean True if both objects are equal. | Improve this Doc View Source Equals(Nullable<Expression>, Nullable<Expression>) Takes the following into account when checking for equality: Expression VisitConstant(ConstantExpression constant); Expression VisitMember(MemberExpression member); Expression VisitMethodCall(MethodCallExpression methodCall); Expression VisitParameter(ParameterExpression parameter); Expression VisitTypeBinary(TypeBinaryExpression type); Expression VisitBinary(BinaryExpression binary; Expression VisitUnary(UnaryExpression unary); Expression VisitNew(NewExpression @new); Declaration public override bool Equals(Expression? x, Expression? y) Parameters Type Name Description System.Nullable < Expression > x System.Nullable < Expression > y Returns Type Description System.Boolean True if both expressions are equal. | Improve this Doc View Source GetHashCode(Expression) Takes the following into account when calculating the hash code: Expression VisitMember(MemberExpression member); Expression VisitMethodCall(MethodCallExpression methodCall); Expression VisitParameter(ParameterExpression parameter); Expression VisitTypeBinary(TypeBinaryExpression type); Expression VisitBinary(BinaryExpression binary; Expression VisitConstant(ConstantExpression constant); Expression VisitListInit(ListInitExpression node) Expression VisitUnary(UnaryExpression unary); Expression VisitNew(NewExpression @new); Declaration public override int GetHashCode(Expression expression) Parameters Type Name Description Expression expression Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionGenericTools.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionGenericTools.html",
    "title": "Class ExpressionGenericTools | Documentations",
    "keywords": "Class ExpressionGenericTools Inheritance System.Object ExpressionGenericTools Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ExpressionGenericTools : object Methods | Improve this Doc View Source GetAnonymousTypeNames<ReturnType>(Expression<Func<ReturnType>>) Declaration public static string[] GetAnonymousTypeNames<ReturnType>(Expression<Func<ReturnType>> expression) Parameters Type Name Description Expression < Func <ReturnType>> expression Returns Type Description System.String [] Type Parameters Name Description ReturnType | Improve this Doc View Source GetAnonymousTypeNames<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>>) Declaration public static string[] GetAnonymousTypeNames<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>> expression) Parameters Type Name Description Expression < Func <OwnerType, ReturnType>> expression Returns Type Description System.String [] Type Parameters Name Description OwnerType ReturnType | Improve this Doc View Source GetReturnName<ReturnType>(Expression<Func<ReturnType>>) Declaration public static string GetReturnName<ReturnType>(Expression<Func<ReturnType>> expression) Parameters Type Name Description Expression < Func <ReturnType>> expression Returns Type Description System.String Type Parameters Name Description ReturnType | Improve this Doc View Source GetReturnName<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>>) Declaration public static string GetReturnName<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>> expression) Parameters Type Name Description Expression < Func <OwnerType, ReturnType>> expression Returns Type Description System.String Type Parameters Name Description OwnerType ReturnType | Improve this Doc View Source GetReturnType<ReturnType>(Expression<Func<ReturnType>>) Declaration public static Type GetReturnType<ReturnType>(Expression<Func<ReturnType>> expression) Parameters Type Name Description Expression < Func <ReturnType>> expression Returns Type Description Type Type Parameters Name Description ReturnType | Improve this Doc View Source GetReturnType<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>>) Declaration public static Type GetReturnType<OwnerType, ReturnType>(Expression<Func<OwnerType, ReturnType>> expression) Parameters Type Name Description Expression < Func <OwnerType, ReturnType>> expression Returns Type Description Type Type Parameters Name Description OwnerType ReturnType"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionMapper.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionMapper.html",
    "title": "Class ExpressionMapper | Documentations",
    "keywords": "Class ExpressionMapper Inheritance System.Object ExpressionMapper ParameterReplacingExpressionMapper<SourceType, TargetType> Implements IExpressionMapper Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class ExpressionMapper : object, IExpressionMapper Constructors | Improve this Doc View Source ExpressionMapper() Declaration public ExpressionMapper() Methods | Improve this Doc View Source GetMappings() Provides a collection of mapped members. Declaration public IReadOnlyCollection<ExpressionMapping> GetMappings() Returns Type Description IReadOnlyCollection < ExpressionMapping > New created collection of current mapped members. | Improve this Doc View Source Map(Expression, Expression) Declaration public virtual void Map(Expression source, Expression replacement) Parameters Type Name Description Expression source Expression replacement | Improve this Doc View Source MapBody(LambdaExpression, LambdaExpression) Declaration public void MapBody(LambdaExpression source, LambdaExpression replacment) Parameters Type Name Description LambdaExpression source LambdaExpression replacment Implements IExpressionMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionMapping.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionMapping.html",
    "title": "Struct ExpressionMapping | Documentations",
    "keywords": "Struct ExpressionMapping Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public struct ExpressionMapping Constructors | Improve this Doc View Source ExpressionMapping(Expression, Expression) Declaration public ExpressionMapping(Expression source, Expression target) Parameters Type Name Description Expression source Expression target Fields | Improve this Doc View Source SourceExpression Declaration public readonly Expression SourceExpression Field Value Type Description Expression | Improve this Doc View Source TargetExpression Declaration public readonly Expression TargetExpression Field Value Type Description Expression"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionTools.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ExpressionTools.html",
    "title": "Class ExpressionTools | Documentations",
    "keywords": "Class ExpressionTools Inheritance System.Object ExpressionTools Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Core.dll Syntax public static class ExpressionTools : object Methods | Improve this Doc View Source GetAnonymousTypeNames(LambdaExpression) Gets the member names of an anonymous type. Declaration public static string[] GetAnonymousTypeNames(LambdaExpression expression) Parameters Type Name Description LambdaExpression expression The expression. Returns Type Description System.String [] The member names. | Improve this Doc View Source GetReturnName(LambdaExpression) Declaration public static string GetReturnName(LambdaExpression expression) Parameters Type Name Description LambdaExpression expression Returns Type Description System.String | Improve this Doc View Source GetReturnType(LambdaExpression) Declaration public static Type GetReturnType(LambdaExpression expression) Parameters Type Name Description LambdaExpression expression Returns Type Description Type"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.HashCodeCalculatingExpressionVisitor.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.HashCodeCalculatingExpressionVisitor.html",
    "title": "Class HashCodeCalculatingExpressionVisitor | Documentations",
    "keywords": "Class HashCodeCalculatingExpressionVisitor Inheritance System.Object HashCodeCalculatingExpressionVisitor Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class HashCodeCalculatingExpressionVisitor : ExpressionVisitor Constructors | Improve this Doc View Source HashCodeCalculatingExpressionVisitor() Declaration protected HashCodeCalculatingExpressionVisitor() Methods | Improve this Doc View Source CalculateHashCode(Expression) Declaration public static int CalculateHashCode(Expression expression) Parameters Type Name Description Expression expression Returns Type Description System.Int32 | Improve this Doc View Source Visit(Nullable<Expression>) Declaration public override Expression Visit(Expression? expression) Parameters Type Name Description System.Nullable < Expression > expression Returns Type Description Expression | Improve this Doc View Source VisitBinary(BinaryExpression) Declaration protected override Expression VisitBinary(BinaryExpression binary) Parameters Type Name Description BinaryExpression binary Returns Type Description Expression | Improve this Doc View Source VisitConstant(ConstantExpression) Declaration protected override Expression VisitConstant(ConstantExpression constant) Parameters Type Name Description ConstantExpression constant Returns Type Description Expression | Improve this Doc View Source VisitListInit(ListInitExpression) Declaration protected override Expression VisitListInit(ListInitExpression node) Parameters Type Name Description ListInitExpression node Returns Type Description Expression | Improve this Doc View Source VisitMember(MemberExpression) Declaration protected override Expression VisitMember(MemberExpression member) Parameters Type Name Description MemberExpression member Returns Type Description Expression | Improve this Doc View Source VisitMethodCall(MethodCallExpression) Declaration protected override Expression VisitMethodCall(MethodCallExpression methodCall) Parameters Type Name Description MethodCallExpression methodCall Returns Type Description Expression | Improve this Doc View Source VisitNew(NewExpression) Declaration protected override Expression VisitNew(NewExpression new) Parameters Type Name Description NewExpression new Returns Type Description Expression | Improve this Doc View Source VisitParameter(ParameterExpression) Declaration protected override Expression VisitParameter(ParameterExpression parameter) Parameters Type Name Description ParameterExpression parameter Returns Type Description Expression | Improve this Doc View Source VisitTypeBinary(TypeBinaryExpression) Declaration protected override Expression VisitTypeBinary(TypeBinaryExpression type) Parameters Type Name Description TypeBinaryExpression type Returns Type Description Expression | Improve this Doc View Source VisitUnary(UnaryExpression) Declaration protected override Expression VisitUnary(UnaryExpression unary) Parameters Type Name Description UnaryExpression unary Returns Type Description Expression Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.html",
    "title": "Namespace Teronis.Linq.Expressions | Documentations",
    "keywords": "Namespace Teronis.Linq.Expressions Classes EqualityComparingExpressionReplacerVisitor EqualityComparingExpressionVisitor ExpressionEqualityComparer ExpressionGenericTools ExpressionMapper ExpressionTools HashCodeCalculatingExpressionVisitor NodeReplacingVisitor The Expression visitor compares visiting node with each source-node by reference and if true, the visiting node is about to be replaced by target-node. ParameterReplacingExpressionMapper<SourceType, TargetType> ParameterReplacingVisitor The Expression visitor compares visiting parameter node with each source-node by reference and if true, the visiting node is about to be replaced by target-node. ReplacingVisitor<SourceType, TargetType> SourceTargetExpressionTools UnwindedExpressionQueue Structs ExpressionMapping SourceTargetPair<SourceType, TargetType> Interfaces IExpressionMapper IParameterReplacableExpressionMapper<SourceType, TargetType> IParameterReplacingExpressionMapper<SourceType, TargetType> Delegates SourceInConstantPredicateDelegate<SourceType, ComparisonType>"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.IExpressionMapper.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.IExpressionMapper.html",
    "title": "Interface IExpressionMapper | Documentations",
    "keywords": "Interface IExpressionMapper Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public interface IExpressionMapper Methods | Improve this Doc View Source Map(Expression, Expression) Declaration void Map(Expression from, Expression to) Parameters Type Name Description Expression from Expression to | Improve this Doc View Source MapBody(LambdaExpression, LambdaExpression) Declaration void MapBody(LambdaExpression from, LambdaExpression to) Parameters Type Name Description LambdaExpression from LambdaExpression to Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.IParameterReplacableExpressionMapper-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.IParameterReplacableExpressionMapper-2.html",
    "title": "Interface IParameterReplacableExpressionMapper<SourceType, TargetType> | Documentations",
    "keywords": "Interface IParameterReplacableExpressionMapper<SourceType, TargetType> Inherited Members IParameterReplacingExpressionMapper<SourceType, TargetType>.MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<Func<SourceType, SourcePropertyType>>, Expression<Func<TargetType, TargetPropertyType>>) IExpressionMapper.Map(Expression, Expression) IExpressionMapper.MapBody(LambdaExpression, LambdaExpression) Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public interface IParameterReplacableExpressionMapper<SourceType, TargetType> : IParameterReplacingExpressionMapper<SourceType, TargetType>, IExpressionMapper Type Parameters Name Description SourceType TargetType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.IParameterReplacingExpressionMapper-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.IParameterReplacingExpressionMapper-2.html",
    "title": "Interface IParameterReplacingExpressionMapper<SourceType, TargetType> | Documentations",
    "keywords": "Interface IParameterReplacingExpressionMapper<SourceType, TargetType> Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public interface IParameterReplacingExpressionMapper<SourceType, TargetType> Type Parameters Name Description SourceType TargetType Methods | Improve this Doc View Source MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<Func<SourceType, SourcePropertyType>>, Expression<Func<TargetType, TargetPropertyType>>) Declaration void MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<Func<SourceType, SourcePropertyType>> subject, Expression<Func<TargetType, TargetPropertyType>> replacment) Parameters Type Name Description Expression < Func <SourceType, SourcePropertyType>> subject Expression < Func <TargetType, TargetPropertyType>> replacment Type Parameters Name Description SourcePropertyType TargetPropertyType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.NodeReplacingVisitor.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.NodeReplacingVisitor.html",
    "title": "Class NodeReplacingVisitor | Documentations",
    "keywords": "Class NodeReplacingVisitor The Expression visitor compares visiting node with each source-node by reference and if true, the visiting node is about to be replaced by target-node. Inheritance System.Object ReplacingVisitor < Expression , Expression > NodeReplacingVisitor Inherited Members ReplacingVisitor<Expression, Expression>.ReplacedSourceTargetPairs ReplacingVisitor<Expression, Expression>.TryReplaceNode(Expression, Expression) Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class NodeReplacingVisitor : ReplacingVisitor<Expression, Expression> Constructors | Improve this Doc View Source NodeReplacingVisitor(Expression, Expression) Declaration public NodeReplacingVisitor(Expression source, Expression target) Parameters Type Name Description Expression source Expression target | Improve this Doc View Source NodeReplacingVisitor(IReadOnlyList<SourceTargetPair<Expression, Expression>>) Declaration public NodeReplacingVisitor(IReadOnlyList<SourceTargetPair<Expression, Expression>> sourceTargetPairs) Parameters Type Name Description IReadOnlyList < SourceTargetPair < Expression , Expression >> sourceTargetPairs Methods | Improve this Doc View Source Visit(Nullable<Expression>) Declaration public override Expression? Visit(Expression? node) Parameters Type Name Description System.Nullable < Expression > node Returns Type Description System.Nullable < Expression > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ParameterReplacingExpressionMapper-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ParameterReplacingExpressionMapper-2.html",
    "title": "Class ParameterReplacingExpressionMapper<SourceType, TargetType> | Documentations",
    "keywords": "Class ParameterReplacingExpressionMapper<SourceType, TargetType> Inheritance System.Object ExpressionMapper ParameterReplacingExpressionMapper<SourceType, TargetType> Implements IParameterReplacableExpressionMapper <SourceType, TargetType> IParameterReplacingExpressionMapper <SourceType, TargetType> IExpressionMapper Inherited Members ExpressionMapper.Map(Expression, Expression) ExpressionMapper.MapBody(LambdaExpression, LambdaExpression) ExpressionMapper.GetMappings() Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class ParameterReplacingExpressionMapper<SourceType, TargetType> : ExpressionMapper, IParameterReplacableExpressionMapper<SourceType, TargetType>, IParameterReplacingExpressionMapper<SourceType, TargetType>, IExpressionMapper Type Parameters Name Description SourceType TargetType Constructors | Improve this Doc View Source ParameterReplacingExpressionMapper(ParameterExpression, ParameterExpression) Declaration public ParameterReplacingExpressionMapper(ParameterExpression sourceParameterReplacement, ParameterExpression targetParameterReplacement) Parameters Type Name Description ParameterExpression sourceParameterReplacement ParameterExpression targetParameterReplacement Fields | Improve this Doc View Source SourceParameterReplacement Declaration protected readonly ParameterExpression SourceParameterReplacement Field Value Type Description ParameterExpression | Improve this Doc View Source TargetParameterReplacement Declaration protected readonly ParameterExpression TargetParameterReplacement Field Value Type Description ParameterExpression Methods | Improve this Doc View Source MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<Func<SourceType, SourcePropertyType>>, Expression<Func<TargetType, TargetPropertyType>>) Declaration public void MapBodyAndParams<SourcePropertyType, TargetPropertyType>(Expression<Func<SourceType, SourcePropertyType>> source, Expression<Func<TargetType, TargetPropertyType>> replacment) Parameters Type Name Description Expression < Func <SourceType, SourcePropertyType>> source Expression < Func <TargetType, TargetPropertyType>> replacment Type Parameters Name Description SourcePropertyType TargetPropertyType | Improve this Doc View Source ReplaceExpressionParameters<T>(T, ParameterExpression, ParameterExpression) Declaration protected virtual T ReplaceExpressionParameters<T>(T expression, ParameterExpression from, ParameterExpression to) where T : Expression Parameters Type Name Description T expression ParameterExpression from ParameterExpression to Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ReplaceParameters(ref Expression, ParameterExpression, ref Expression, ParameterExpression) Declaration protected virtual void ReplaceParameters(ref Expression sourceBody, ParameterExpression sourceBodyParameter, ref Expression replacmentBody, ParameterExpression replacmentBodyParameter) Parameters Type Name Description Expression sourceBody ParameterExpression sourceBodyParameter Expression replacmentBody ParameterExpression replacmentBodyParameter Implements IParameterReplacableExpressionMapper<SourceType, TargetType> IParameterReplacingExpressionMapper<SourceType, TargetType> IExpressionMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ParameterReplacingVisitor.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ParameterReplacingVisitor.html",
    "title": "Class ParameterReplacingVisitor | Documentations",
    "keywords": "Class ParameterReplacingVisitor The Expression visitor compares visiting parameter node with each source-node by reference and if true, the visiting node is about to be replaced by target-node. Inheritance System.Object ReplacingVisitor < ParameterExpression , ParameterExpression > ParameterReplacingVisitor Inherited Members ReplacingVisitor<ParameterExpression, ParameterExpression>.ReplacedSourceTargetPairs ReplacingVisitor<ParameterExpression, ParameterExpression>.TryReplaceNode(Expression, ParameterExpression) Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class ParameterReplacingVisitor : ReplacingVisitor<ParameterExpression, ParameterExpression> Constructors | Improve this Doc View Source ParameterReplacingVisitor(IReadOnlyList<SourceTargetPair<ParameterExpression, ParameterExpression>>) Declaration public ParameterReplacingVisitor(IReadOnlyList<SourceTargetPair<ParameterExpression, ParameterExpression>> sourceTargetPairs) Parameters Type Name Description IReadOnlyList < SourceTargetPair < ParameterExpression , ParameterExpression >> sourceTargetPairs | Improve this Doc View Source ParameterReplacingVisitor(ParameterExpression, ParameterExpression) Declaration public ParameterReplacingVisitor(ParameterExpression source, ParameterExpression target) Parameters Type Name Description ParameterExpression source ParameterExpression target Methods | Improve this Doc View Source VisitParameter(ParameterExpression) Declaration protected override Expression VisitParameter(ParameterExpression node) Parameters Type Name Description ParameterExpression node Returns Type Description Expression Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.ReplacingVisitor-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.ReplacingVisitor-2.html",
    "title": "Class ReplacingVisitor<SourceType, TargetType> | Documentations",
    "keywords": "Class ReplacingVisitor<SourceType, TargetType> Inheritance System.Object ReplacingVisitor<SourceType, TargetType> NodeReplacingVisitor ParameterReplacingVisitor Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public abstract class ReplacingVisitor<SourceType, TargetType> : ExpressionVisitor where SourceType : Expression where TargetType : Expression Type Parameters Name Description SourceType TargetType Constructors | Improve this Doc View Source ReplacingVisitor(SourceType, TargetType) Declaration public ReplacingVisitor(SourceType source, TargetType target) Parameters Type Name Description SourceType source TargetType target | Improve this Doc View Source ReplacingVisitor(IReadOnlyList<SourceTargetPair<SourceType, TargetType>>) Declaration public ReplacingVisitor(IReadOnlyList<SourceTargetPair<SourceType, TargetType>> sourceTargetPairs) Parameters Type Name Description IReadOnlyList < SourceTargetPair <SourceType, TargetType>> sourceTargetPairs Properties | Improve this Doc View Source ReplacedSourceTargetPairs Declaration public IReadOnlyList<SourceTargetPair<SourceType, TargetType>> ReplacedSourceTargetPairs { get; } Property Value Type Description IReadOnlyList < SourceTargetPair <SourceType, TargetType>> Methods | Improve this Doc View Source TryReplaceNode(Expression, out TargetType) You need to call this explicity. Declaration protected bool TryReplaceNode(Expression node, out TargetType replacedNode) Parameters Type Name Description Expression node TargetType replacedNode Returns Type Description System.Boolean The node that got passed or if weighted as replacable the target node. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.SourceInConstantPredicateDelegate-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.SourceInConstantPredicateDelegate-2.html",
    "title": "Delegate SourceInConstantPredicateDelegate<SourceType, ComparisonType> | Documentations",
    "keywords": "Delegate SourceInConstantPredicateDelegate<SourceType, ComparisonType> Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public delegate bool SourceInConstantPredicateDelegate<SourceType, ComparisonType>(SourceType source, ComparisonType comparisonValue); Parameters Type Name Description SourceType source ComparisonType comparisonValue Returns Type Description System.Boolean Type Parameters Name Description SourceType ComparisonType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.SourceTargetExpressionTools.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.SourceTargetExpressionTools.html",
    "title": "Class SourceTargetExpressionTools | Documentations",
    "keywords": "Class SourceTargetExpressionTools Inheritance System.Object SourceTargetExpressionTools Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public static class SourceTargetExpressionTools : object Methods | Improve this Doc View Source ReplaceExpressions<SourceType, TargetType>(Expression, ParameterExpression, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>>, out ParameterExpression) Replaces all expressions by those expressions who are defined with the help of configureMemberMappings . Declaration public static Expression ReplaceExpressions<SourceType, TargetType>(Expression expression, ParameterExpression sourceParameter, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>> configureMemberMappings, out ParameterExpression targetParameter) Parameters Type Name Description Expression expression The expression which may expressions ParameterExpression sourceParameter The source parameter expression who may used by those expressions you want to have replaced. Action < IParameterReplacableExpressionMapper <SourceType, TargetType>> configureMemberMappings Configures the expression mappings. ParameterExpression targetParameter The new target expression parameter that is used in replacement of the source target expression. Returns Type Description Expression The expression with replaced expressions. Type Parameters Name Description SourceType The source type. TargetType The target type. | Improve this Doc View Source ReplaceExpressions<SourceType, TargetType>(Expression, ParameterExpression, ref Nullable<ParameterExpression>, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>>) Replaces all expressions by those expressions who are defined with the help of configureMemberMappings . Declaration public static Expression ReplaceExpressions<SourceType, TargetType>(Expression expression, ParameterExpression sourceParameter, ref ParameterExpression? targetParameter, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>> configureMemberMappings) Parameters Type Name Description Expression expression The expression which may expressions ParameterExpression sourceParameter The source parameter expression who may used by those expressions you want to have replaced. System.Nullable < ParameterExpression > targetParameter The new target expression parameter that is used in replacement of the source target expression. Action < IParameterReplacableExpressionMapper <SourceType, TargetType>> configureMemberMappings Configures the expression mappings. Returns Type Description Expression The expression with replaced expressions. Type Parameters Name Description SourceType The source type. TargetType The target type. | Improve this Doc View Source ReplaceParameterByConstantLambda<SourceType>(LambdaExpression, Nullable<IReadOnlyDictionary<Int32, ParameterExpression>>, IReadOnlyDictionary<Int32, Nullable<Object>>, out IReadOnlyList<ParameterExpression>) Reduces parameter list by replacing the expression parameter expression usages (of type ComparisonType ) with constant expression crafted from comparisonValue . Declaration public static Expression<Func<SourceType, bool>> ReplaceParameterByConstantLambda<SourceType>(LambdaExpression lambdaWithParameters, IReadOnlyDictionary<int, ParameterExpression>? positionalParameterReplacements, IReadOnlyDictionary<int, object?> positionalConstants, out IReadOnlyList<ParameterExpression> positionalParameters) Parameters Type Name Description LambdaExpression lambdaWithParameters System.Nullable < IReadOnlyDictionary < System.Int32 , ParameterExpression >> positionalParameterReplacements IReadOnlyDictionary < System.Int32 , System.Nullable < System.Object >> positionalConstants IReadOnlyList < ParameterExpression > positionalParameters Returns Type Description Expression < Func <SourceType, System.Boolean >> A new lambda with rewritten body. Type Parameters Name Description SourceType The first parameter expression. | Improve this Doc View Source ReplaceParameterByConstantLambdaBody(LambdaExpression, Nullable<IReadOnlyDictionary<Int32, ParameterExpression>>, IReadOnlyDictionary<Int32, Nullable<Object>>, out IReadOnlyList<ParameterExpression>) Reduces parameter list by replacing the expression parameter expression usages (of type T2 ) with constant expression crafted from constant . Declaration public static Expression ReplaceParameterByConstantLambdaBody(LambdaExpression lambdaWithParameters, IReadOnlyDictionary<int, ParameterExpression>? positionalParameterReplacements, IReadOnlyDictionary<int, object?> positionalConstants, out IReadOnlyList<ParameterExpression> positionalParameters) Parameters Type Name Description LambdaExpression lambdaWithParameters The lambda expression from which the body will be rewritten. System.Nullable < IReadOnlyDictionary < System.Int32 , ParameterExpression >> positionalParameterReplacements Positional parameters that replace parameters before they may get replaced by constants. (E.g. replace parameter at index two of lambda parameters with specified parameter) IReadOnlyDictionary < System.Int32 , System.Nullable < System.Object >> positionalConstants IReadOnlyList < ParameterExpression > positionalParameters Returns Type Description Expression The body that got rewritten. | Improve this Doc View Source ReplaceParameters<SourceType, TargetType>(Expression, ParameterExpression, ParameterExpression, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>>) Replaces all expressions by those expressions who are defined with the help of configureMemberMappings . Declaration public static Expression ReplaceParameters<SourceType, TargetType>(Expression expression, ParameterExpression sourceParameter, ParameterExpression targetParameter, Action<IParameterReplacableExpressionMapper<SourceType, TargetType>> configureMemberMappings) Parameters Type Name Description Expression expression The expression which may expressions ParameterExpression sourceParameter The source parameter expression who may used by those expressions you want to have replaced. ParameterExpression targetParameter The new target expression parameter that is used in replacement of the source target expression. Action < IParameterReplacableExpressionMapper <SourceType, TargetType>> configureMemberMappings Configures the expression mappings. Returns Type Description Expression The expression with replaced expressions. Type Parameters Name Description SourceType The source type. TargetType The target type."
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.SourceTargetPair-2.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.SourceTargetPair-2.html",
    "title": "Struct SourceTargetPair<SourceType, TargetType> | Documentations",
    "keywords": "Struct SourceTargetPair<SourceType, TargetType> Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public struct SourceTargetPair<SourceType, TargetType> where SourceType : Expression where TargetType : Expression Type Parameters Name Description SourceType TargetType Constructors | Improve this Doc View Source SourceTargetPair(SourceType, TargetType) Declaration public SourceTargetPair(SourceType source, TargetType target) Parameters Type Name Description SourceType source TargetType target Properties | Improve this Doc View Source Source Declaration public SourceType Source { get; } Property Value Type Description SourceType | Improve this Doc View Source Target Declaration public TargetType Target { get; } Property Value Type Description TargetType"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.UnwindedExpressionQueue.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.UnwindedExpressionQueue.html",
    "title": "Class UnwindedExpressionQueue | Documentations",
    "keywords": "Class UnwindedExpressionQueue Inheritance System.Object UnwindedExpressionQueue Implements IEnumerable < Expression > Namespace : Teronis.Linq.Expressions Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class UnwindedExpressionQueue : IReadOnlyCollection<Expression>, IEnumerable<Expression> Constructors | Improve this Doc View Source UnwindedExpressionQueue(Expression) Declaration public UnwindedExpressionQueue(Expression expression) Parameters Type Name Description Expression expression Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Dequeue() Declaration public Expression Dequeue() Returns Type Description Expression | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Expression> GetEnumerator() Returns Type Description IEnumerator < Expression > | Improve this Doc View Source Peek() Declaration public Expression Peek() Returns Type Description Expression | Improve this Doc View Source TryDequeue(out Expression) Declaration public bool TryDequeue(out Expression expression) Parameters Type Name Description Expression expression Returns Type Description System.Boolean Implements IEnumerable<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.Utils.DelegateExpression.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.Utils.DelegateExpression.html",
    "title": "Class DelegateExpression | Documentations",
    "keywords": "Class DelegateExpression Inheritance System.Object DelegateExpression Namespace : Teronis.Linq.Expressions.Utils Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class DelegateExpression : object Methods | Improve this Doc View Source Expr<T>(Expression<Action<T>>) Declaration public static Expression<Action<T>> Expr<T>(Expression<Action<T>> action) Parameters Type Name Description Expression < Action <T>> action Returns Type Description Expression < Action <T>> Type Parameters Name Description T | Improve this Doc View Source Expr<T>(Expression<Action>) Declaration public static Expression<Action> Expr<T>(Expression<Action> action) Parameters Type Name Description Expression < Action > action Returns Type Description Expression < Action > Type Parameters Name Description T | Improve this Doc View Source Expr<T>(Expression<Func<T>>) Declaration public static Expression<Func<T>> Expr<T>(Expression<Func<T>> action) Parameters Type Name Description Expression < Func <T>> action Returns Type Description Expression < Func <T>> Type Parameters Name Description T | Improve this Doc View Source Expr<T1, T2>(Expression<Action<T1, T2>>) Declaration public static Expression<Action<T1, T2>> Expr<T1, T2>(Expression<Action<T1, T2>> action) Parameters Type Name Description Expression < Action <T1, T2>> action Returns Type Description Expression < Action <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Expr<T1, T2>(Expression<Func<T1, T2>>) Declaration public static Expression<Func<T1, T2>> Expr<T1, T2>(Expression<Func<T1, T2>> action) Parameters Type Name Description Expression < Func <T1, T2>> action Returns Type Description Expression < Func <T1, T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Expr<T1, T2, T3>(Expression<Action<T1, T2, T3>>) Declaration public static Expression<Action<T1, T2, T3>> Expr<T1, T2, T3>(Expression<Action<T1, T2, T3>> action) Parameters Type Name Description Expression < Action <T1, T2, T3>> action Returns Type Description Expression < Action <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Expr<T1, T2, T3>(Expression<Func<T1, T2, T3>>) Declaration public static Expression<Func<T1, T2, T3>> Expr<T1, T2, T3>(Expression<Func<T1, T2, T3>> action) Parameters Type Name Description Expression < Func <T1, T2, T3>> action Returns Type Description Expression < Func <T1, T2, T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Expr<T1, T2, T3, T4>(Expression<Action<T1, T2, T3, T4>>) Declaration public static Expression<Action<T1, T2, T3, T4>> Expr<T1, T2, T3, T4>(Expression<Action<T1, T2, T3, T4>> action) Parameters Type Name Description Expression < Action <T1, T2, T3, T4>> action Returns Type Description Expression < Action <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Expr<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4>>) Declaration public static Expression<Func<T1, T2, T3, T4>> Expr<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4>> action) Parameters Type Name Description Expression < Func <T1, T2, T3, T4>> action Returns Type Description Expression < Func <T1, T2, T3, T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5>(Expression<Action<T1, T2, T3, T4, T5>>) Declaration public static Expression<Action<T1, T2, T3, T4, T5>> Expr<T1, T2, T3, T4, T5>(Expression<Action<T1, T2, T3, T4, T5>> action) Parameters Type Name Description Expression < Action <T1, T2, T3, T4, T5>> action Returns Type Description Expression < Action <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5>>) Declaration public static Expression<Func<T1, T2, T3, T4, T5>> Expr<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5>> action) Parameters Type Name Description Expression < Func <T1, T2, T3, T4, T5>> action Returns Type Description Expression < Func <T1, T2, T3, T4, T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6>(Expression<Action<T1, T2, T3, T4, T5, T6>>) Declaration public static Expression<Action<T1, T2, T3, T4, T5, T6>> Expr<T1, T2, T3, T4, T5, T6>(Expression<Action<T1, T2, T3, T4, T5, T6>> action) Parameters Type Name Description Expression < Action <T1, T2, T3, T4, T5, T6>> action Returns Type Description Expression < Action <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6>(Expression<Func<T1, T2, T3, T4, T5, T6>>) Declaration public static Expression<Func<T1, T2, T3, T4, T5, T6>> Expr<T1, T2, T3, T4, T5, T6>(Expression<Func<T1, T2, T3, T4, T5, T6>> action) Parameters Type Name Description Expression < Func <T1, T2, T3, T4, T5, T6>> action Returns Type Description Expression < Func <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6, T7>(Expression<Action<T1, T2, T3, T4, T5, T6, T7>>) Declaration public static Expression<Action<T1, T2, T3, T4, T5, T6, T7>> Expr<T1, T2, T3, T4, T5, T6, T7>(Expression<Action<T1, T2, T3, T4, T5, T6, T7>> action) Parameters Type Name Description Expression < Action <T1, T2, T3, T4, T5, T6, T7>> action Returns Type Description Expression < Action <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6, T7>(Expression<Func<T1, T2, T3, T4, T5, T6, T7>>) Declaration public static Expression<Func<T1, T2, T3, T4, T5, T6, T7>> Expr<T1, T2, T3, T4, T5, T6, T7>(Expression<Func<T1, T2, T3, T4, T5, T6, T7>> action) Parameters Type Name Description Expression < Func <T1, T2, T3, T4, T5, T6, T7>> action Returns Type Description Expression < Func <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6, T7, T8>(Expression<Action<T1, T2, T3, T4, T5, T6, T7, T8>>) Declaration public static Expression<Action<T1, T2, T3, T4, T5, T6, T7, T8>> Expr<T1, T2, T3, T4, T5, T6, T7, T8>(Expression<Action<T1, T2, T3, T4, T5, T6, T7, T8>> action) Parameters Type Name Description Expression < Action <T1, T2, T3, T4, T5, T6, T7, T8>> action Returns Type Description Expression < Action <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source Expr<T1, T2, T3, T4, T5, T6, T7, T8>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8>>) Declaration public static Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8>> Expr<T1, T2, T3, T4, T5, T6, T7, T8>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8>> action) Parameters Type Name Description Expression < Func <T1, T2, T3, T4, T5, T6, T7, T8>> action Returns Type Description Expression < Func <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.Utils.ExpressionTools.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.Utils.ExpressionTools.html",
    "title": "Class ExpressionTools | Documentations",
    "keywords": "Class ExpressionTools Inheritance System.Object ExpressionTools Namespace : Teronis.Linq.Expressions.Utils Assembly : Teronis.NetStandard.Linq.Expressions.dll Syntax public class ExpressionTools : object Methods | Improve this Doc View Source TryGetMember(Nullable<Expression>) Declaration public static MemberExpression? TryGetMember(Expression? expression) Parameters Type Name Description System.Nullable < Expression > expression Returns Type Description System.Nullable < MemberExpression > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Linq.Expressions.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Linq.Expressions.Utils.html",
    "title": "Namespace Teronis.Linq.Expressions.Utils | Documentations",
    "keywords": "Namespace Teronis.Linq.Expressions.Utils Classes DelegateExpression ExpressionTools"
  },
  "Teronis.DotNet/Teronis.Localization.html": {
    "href": "Teronis.DotNet/Teronis.Localization.html",
    "title": "Namespace Teronis.Localization | Documentations",
    "keywords": "Namespace Teronis.Localization Classes StringResources Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw."
  },
  "Teronis.DotNet/Teronis.Localization.StringResources.html": {
    "href": "Teronis.DotNet/Teronis.Localization.StringResources.html",
    "title": "Class StringResources | Documentations",
    "keywords": "Class StringResources Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw. Inheritance System.Object StringResources Namespace : Teronis.Localization Assembly : Teronis.NetStandard.Core.Localization.dll Syntax public class StringResources : object Properties | Improve this Doc View Source AnErrorOccuredExclamation Sucht eine lokalisierte Zeichenfolge, die An error occured ähnelt. Declaration public static string AnErrorOccuredExclamation { get; } Property Value Type Description System.String | Improve this Doc View Source Culture Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden. Declaration public static Globalization.CultureInfo Culture { get; set; } Property Value Type Description System.Globalization.CultureInfo | Improve this Doc View Source LoadingNonSentence Sucht eine lokalisierte Zeichenfolge, die Loading... ähnelt. Declaration public static string LoadingNonSentence { get; } Property Value Type Description System.String | Improve this Doc View Source NoHeader Sucht eine lokalisierte Zeichenfolge, die No ähnelt. Declaration public static string NoHeader { get; } Property Value Type Description System.String | Improve this Doc View Source OkHeader Sucht eine lokalisierte Zeichenfolge, die Ok ähnelt. Declaration public static string OkHeader { get; } Property Value Type Description System.String | Improve this Doc View Source ResourceManager Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird. Declaration public static Resources.ResourceManager ResourceManager { get; } Property Value Type Description System.Resources.ResourceManager | Improve this Doc View Source SecurityQuestionHeader Sucht eine lokalisierte Zeichenfolge, die Security Question ähnelt. Declaration public static string SecurityQuestionHeader { get; } Property Value Type Description System.String | Improve this Doc View Source SureInterrogativeSentence Sucht eine lokalisierte Zeichenfolge, die Are you really sure? ähnelt. Declaration public static string SureInterrogativeSentence { get; } Property Value Type Description System.String | Improve this Doc View Source YesHeader Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt. Declaration public static string YesHeader { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Managment.html": {
    "href": "Teronis.DotNet/Teronis.Managment.html",
    "title": "Namespace Teronis.Managment | Documentations",
    "keywords": "Namespace Teronis.Managment Classes ProcessInvocationListener"
  },
  "Teronis.DotNet/Teronis.Managment.ProcessInvocationListener.html": {
    "href": "Teronis.DotNet/Teronis.Managment.ProcessInvocationListener.html",
    "title": "Class ProcessInvocationListener | Documentations",
    "keywords": "Class ProcessInvocationListener Inheritance System.Object ProcessInvocationListener Namespace : Teronis.Managment Assembly : Teronis.NetStandard.Core.dll Syntax public class ProcessInvocationListener : IDisposable Constructors | Improve this Doc View Source ProcessInvocationListener(String) Declaration public ProcessInvocationListener(string processName) Parameters Type Name Description System.String processName Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ListenToExistingProccesses() Declaration public void ListenToExistingProccesses() | Improve this Doc View Source StartListener() Declaration public void StartListener() | Improve this Doc View Source StopListener() Declaration public void StopListener() Events | Improve this Doc View Source ProcessCreated Declaration public event Action<Process>? ProcessCreated Event Type Type Description System.Nullable < Action < Process >> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.AspNetCore.Authorization.AuthorizationOptionsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.AspNetCore.Authorization.AuthorizationOptionsExtensions.html",
    "title": "Class AuthorizationOptionsExtensions | Documentations",
    "keywords": "Class AuthorizationOptionsExtensions Inheritance System.Object AuthorizationOptionsExtensions Namespace : Teronis.Microsoft.AspNetCore.Authorization Assembly : Teronis.Microsoft.AspNetCore.Authorization.dll Syntax public static class AuthorizationOptionsExtensions : object Methods | Improve this Doc View Source AddPolicy(AuthorizationOptions, Action<AuthorizationPolicyBuilder>, String[]) Declaration public static AuthorizationOptions AddPolicy(this AuthorizationOptions options, Action<AuthorizationPolicyBuilder> policyBuilder, params string[] names) Parameters Type Name Description AuthorizationOptions options Action < AuthorizationPolicyBuilder > policyBuilder System.String [] names Returns Type Description AuthorizationOptions | Improve this Doc View Source AddPolicy(AuthorizationOptions, AuthorizationPolicy, String[]) Declaration public static AuthorizationOptions AddPolicy(this AuthorizationOptions options, AuthorizationPolicy policy, params string[] names) Parameters Type Name Description AuthorizationOptions options AuthorizationPolicy policy System.String [] names Returns Type Description AuthorizationOptions"
  },
  "Teronis.DotNet/Teronis.Microsoft.AspNetCore.Authorization.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.AspNetCore.Authorization.html",
    "title": "Namespace Teronis.Microsoft.AspNetCore.Authorization | Documentations",
    "keywords": "Namespace Teronis.Microsoft.AspNetCore.Authorization Classes AuthorizationOptionsExtensions"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.AccommodatableAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.AccommodatableAttribute.html",
    "title": "Class AccommodatableAttribute | Documentations",
    "keywords": "Class AccommodatableAttribute Can be used to annotated the last parameter of type (e.g. params object[] ) to announce this parameter being spreaded when the JavaScript function is called. The final JavaScript argument list will then consist of previous arguments and the spreaded arguments of the accommodatable annotated argument. Inheritance System.Object AccommodatableAttribute Namespace : Teronis.Microsoft.JSInterop.Dynamic.Annotations Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class AccommodatableAttribute : Attribute Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.CancellableAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.CancellableAttribute.html",
    "title": "Class CancellableAttribute | Documentations",
    "keywords": "Class CancellableAttribute Can be used to annotate a parameter of type CancellableAttribute or . The argument will then not be included in the final JavaScript argument list. Inheritance System.Object CancellableAttribute Namespace : Teronis.Microsoft.JSInterop.Dynamic.Annotations Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class CancellableAttribute : Attribute Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Annotations | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Annotations Classes AccommodatableAttribute Can be used to annotated the last parameter of type (e.g. params object[] ) to announce this parameter being spreaded when the JavaScript function is called. The final JavaScript argument list will then consist of previous arguments and the spreaded arguments of the accommodatable annotated argument. CancellableAttribute Can be used to annotate a parameter of type CancellableAttribute or . The argument will then not be included in the final JavaScript argument list. IdentifierAttribute Can be used to annotate a method to specify an alternative JavaScript identifier. This will overwrite the default behaviour that takes the name from method."
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.IdentifierAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Annotations.IdentifierAttribute.html",
    "title": "Class IdentifierAttribute | Documentations",
    "keywords": "Class IdentifierAttribute Can be used to annotate a method to specify an alternative JavaScript identifier. This will overwrite the default behaviour that takes the name from method. Inheritance System.Object IdentifierAttribute Namespace : Teronis.Microsoft.JSInterop.Dynamic.Annotations Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class IdentifierAttribute : Attribute Constructors | Improve this Doc View Source IdentifierAttribute(String) Declaration public IdentifierAttribute(string identifier) Parameters Type Name Description System.String identifier Properties | Improve this Doc View Source Identifier Declaration public string Identifier { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.DynamicProxyCreationOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.DynamicProxyCreationOptions.html",
    "title": "Class DynamicProxyCreationOptions | Documentations",
    "keywords": "Class DynamicProxyCreationOptions Inheritance System.Object DynamicProxyCreationOptions Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class DynamicProxyCreationOptions : object Properties | Improve this Doc View Source InterfaceTypesNotProxied Declaration public IReadOnlySet<Type>? InterfaceTypesNotProxied { get; set; } Property Value Type Description System.Nullable < IReadOnlySet < Type >> | Improve this Doc View Source MethodsNotProxied The methods you don't want to have proxied. Only members of a derived interface of IJSObjectReferenceFacade are taken into regard. Properties are not proxied naturally. You are in responsible to implement them. Declaration public IReadOnlySet<string>? MethodsNotProxied { get; set; } Property Value Type Description System.Nullable < IReadOnlySet < System.String >> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations Classes JSDynamicModuleClassAttribute Decoratable on interface. It provides ModuleNameOrPath to those properties with facade attribute that are using parameterless constructor but not JSDynamicModulePropertyAttribute(String) . JSDynamicModulePropertyAttribute"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.JSDynamicModuleClassAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.JSDynamicModuleClassAttribute.html",
    "title": "Class JSDynamicModuleClassAttribute | Documentations",
    "keywords": "Class JSDynamicModuleClassAttribute Decoratable on interface. It provides ModuleNameOrPath to those properties with facade attribute that are using parameterless constructor but not JSDynamicModulePropertyAttribute(String) . Inheritance System.Object JSModuleAttributeBase JSModuleClassAttribute JSDynamicModuleClassAttribute Inherited Members JSModuleAttributeBase.ModuleNameOrPath Namespace : Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSDynamicModuleClassAttribute : JSModuleClassAttribute Constructors | Improve this Doc View Source JSDynamicModuleClassAttribute(String) Declaration public JSDynamicModuleClassAttribute(string ModuleNameOrPath) Parameters Type Name Description System.String ModuleNameOrPath Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.JSDynamicModulePropertyAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations.JSDynamicModulePropertyAttribute.html",
    "title": "Class JSDynamicModulePropertyAttribute | Documentations",
    "keywords": "Class JSDynamicModulePropertyAttribute Inheritance System.Object JSModuleAttributeBase JSModulePropertyAttribute JSDynamicModulePropertyAttribute Inherited Members JSModuleAttributeBase.ModuleNameOrPath Namespace : Teronis.Microsoft.JSInterop.Dynamic.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSDynamicModulePropertyAttribute : JSModulePropertyAttribute Constructors | Improve this Doc View Source JSDynamicModulePropertyAttribute() Declaration public JSDynamicModulePropertyAttribute() | Improve this Doc View Source JSDynamicModulePropertyAttribute(String) Declaration public JSDynamicModulePropertyAttribute(string moduleNameOrPath) Parameters Type Name Description System.String moduleNameOrPath Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments Classes JSDynamicModuleComponentPropertyAssigner"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments.JSDynamicModuleComponentPropertyAssigner.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments.JSDynamicModuleComponentPropertyAssigner.html",
    "title": "Class JSDynamicModuleComponentPropertyAssigner | Documentations",
    "keywords": "Class JSDynamicModuleComponentPropertyAssigner Inheritance System.Object JSDynamicModuleComponentPropertyAssigner Namespace : Teronis.Microsoft.JSInterop.Dynamic.Facades.ComponentPropertyAssignments Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicModuleComponentPropertyAssigner : IComponentPropertyAssigner Constructors | Improve this Doc View Source JSDynamicModuleComponentPropertyAssigner(IJSDynamicModuleActivator) Declaration public JSDynamicModuleComponentPropertyAssigner(IJSDynamicModuleActivator jsDynamicModuleActivator) Parameters Type Name Description IJSDynamicModuleActivator jsDynamicModuleActivator Methods | Improve this Doc View Source TryAssignComponentProperty(IComponentProperty) Assigns component property with returning non-null JavaScript module facade. Declaration public virtual ValueTask<YetNullable<IAsyncDisposable>> TryAssignComponentProperty(IComponentProperty componentProperty) Parameters Type Name Description IComponentProperty componentProperty Returns Type Description ValueTask < YetNullable < IAsyncDisposable >> null/default or the JavaScript module facade. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Facades Classes IServiceCollectionExtensions"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Facades.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic.Facades Assembly : Teronis.Microsoft.JSInterop.Dynamic.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSDynamicFacades(IServiceCollection) Declaration public static IServiceCollection AddJSDynamicFacades(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSDynamicFacadesActivator(IServiceCollection) Declaration public static IServiceCollection AddJSDynamicFacadesActivator(IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic Classes DynamicProxyCreationOptions IJSDynamicProxyActivatorExtensions IServiceCollectionExtensions JSDynamicProxy JSDynamicProxyActivator JSDynamicProxyActivatorDefaults JSDynamicProxyActivatorOptions JSDynamicProxyActivatorUtils Interfaces IJSDynamicProxyActivator"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IJSDynamicProxyActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IJSDynamicProxyActivator.html",
    "title": "Interface IJSDynamicProxyActivator | Documentations",
    "keywords": "Interface IJSDynamicProxyActivator Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSDynamicProxyActivator Methods | Improve this Doc View Source CreateInstance(Type, IJSObjectReference, DynamicProxyCreationOptions) Declaration object CreateInstance(Type interfaceToBeProxied, IJSObjectReference jSObjectReference, DynamicProxyCreationOptions creationOptions = null) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReference jSObjectReference DynamicProxyCreationOptions creationOptions Returns Type Description System.Object | Improve this Doc View Source CreateInstance(Type, IJSObjectReferenceFacade, IJSFunctionalObject, DynamicProxyCreationOptions) Declaration object CreateInstance(Type interfaceToBeProxied, IJSObjectReferenceFacade jsObjectFacadeToBeProxied, IJSFunctionalObject jsFunctionalObject = null, DynamicProxyCreationOptions creationOptions = null) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReferenceFacade jsObjectFacadeToBeProxied IJSFunctionalObject jsFunctionalObject DynamicProxyCreationOptions creationOptions Returns Type Description System.Object Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSDynamicProxyActivatorExtensions.CreateInstance<T>(IJSDynamicProxyActivator, IJSObjectReferenceFacade, IJSFunctionalObject, DynamicProxyCreationOptions) IJSDynamicProxyActivatorExtensions.CreateInstance<T>(IJSDynamicProxyActivator, IJSObjectReference, DynamicProxyCreationOptions)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IJSDynamicProxyActivatorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IJSDynamicProxyActivatorExtensions.html",
    "title": "Class IJSDynamicProxyActivatorExtensions | Documentations",
    "keywords": "Class IJSDynamicProxyActivatorExtensions Inheritance System.Object IJSDynamicProxyActivatorExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSDynamicProxyActivatorExtensions : object Methods | Improve this Doc View Source CreateInstance<T>(IJSDynamicProxyActivator, IJSObjectReference, DynamicProxyCreationOptions) Declaration public static T CreateInstance<T>(this IJSDynamicProxyActivator jsDynamicProxyActivator, IJSObjectReference jsObjectReference, DynamicProxyCreationOptions creationOptions = null) where T : class, IJSObjectReferenceFacade Parameters Type Name Description IJSDynamicProxyActivator jsDynamicProxyActivator IJSObjectReference jsObjectReference DynamicProxyCreationOptions creationOptions Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source CreateInstance<T>(IJSDynamicProxyActivator, IJSObjectReferenceFacade, IJSFunctionalObject, DynamicProxyCreationOptions) Declaration public static T CreateInstance<T>(this IJSDynamicProxyActivator jsDynamicProxyActivator, IJSObjectReferenceFacade jsObjectFacadeToBeProxied, IJSFunctionalObject jsFunctionalObject = null, DynamicProxyCreationOptions creationOptions = null) where T : class, IJSObjectReferenceFacade Parameters Type Name Description IJSDynamicProxyActivator jsDynamicProxyActivator IJSObjectReferenceFacade jsObjectFacadeToBeProxied A facade or proxy that implements IJSObjectReferenceFacade . IJSFunctionalObject jsFunctionalObject The functional object of jsObjectReference . DynamicProxyCreationOptions creationOptions The dynamic proxy creation options. Returns Type Description T A proxy that implements T . Type Parameters Name Description T Type T has to be an interface."
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSDynamicProxy(IServiceCollection) Declaration public static IServiceCollection AddJSDynamicProxy(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSDynamicProxyActivator(IServiceCollection, Nullable<Action<JSDynamicProxyActivatorOptions>>) Declaration public static IServiceCollection AddJSDynamicProxyActivator(this IServiceCollection services, Action<JSDynamicProxyActivatorOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services System.Nullable < Action < JSDynamicProxyActivatorOptions >> configureOptions Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxy.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxy.html",
    "title": "Class JSDynamicProxy | Documentations",
    "keywords": "Class JSDynamicProxy Inheritance System.Object JSObjectReferenceFacade JSDynamicProxy Implements IJSObjectReferenceFacade IJSObjectReferenceFacade Inherited Members JSObjectReferenceFacade.JSObjectReference JSObjectReferenceFacade.JSFunctionalObject JSObjectReferenceFacade.InvokeAsync<TValue>(String, Nullable<Object>[]) JSObjectReferenceFacade.InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) JSObjectReferenceFacade.InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) JSObjectReferenceFacade.InvokeVoidAsync(String, Nullable<Object>[]) JSObjectReferenceFacade.InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) JSObjectReferenceFacade.InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) JSObjectReferenceFacade.DisposeAsyncCore() JSObjectReferenceFacade.DisposeAsync() Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicProxy : JSObjectReferenceFacade, IJSObjectReferenceFacade, IJSObjectReferenceFacade Constructors | Improve this Doc View Source JSDynamicProxy(IJSObjectReference) Declaration public JSDynamicProxy(IJSObjectReference jsObjectReference) Parameters Type Name Description IJSObjectReference jsObjectReference | Improve this Doc View Source JSDynamicProxy(IJSObjectReference, IJSFunctionalObject) Declaration public JSDynamicProxy(IJSObjectReference jsObjectReference, IJSFunctionalObject jsFunctionalObject) Parameters Type Name Description IJSObjectReference jsObjectReference IJSFunctionalObject jsFunctionalObject Implements IJSObjectReferenceFacade IJSObjectReferenceFacade Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivator.html",
    "title": "Class JSDynamicProxyActivator | Documentations",
    "keywords": "Class JSDynamicProxyActivator Inheritance System.Object JSDynamicProxyActivator Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicProxyActivator : IJSDynamicProxyActivator Constructors | Improve this Doc View Source JSDynamicProxyActivator() Declaration public JSDynamicProxyActivator() | Improve this Doc View Source JSDynamicProxyActivator(JSDynamicProxyActivatorOptions) Declaration public JSDynamicProxyActivator(JSDynamicProxyActivatorOptions options) Parameters Type Name Description JSDynamicProxyActivatorOptions options Methods | Improve this Doc View Source CreateInstance(Type, IJSObjectReference, Nullable<DynamicProxyCreationOptions>) Declaration public object CreateInstance(Type interfaceToBeProxied, IJSObjectReference jSObjectReference, DynamicProxyCreationOptions? creationOptions = null) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReference jSObjectReference System.Nullable < DynamicProxyCreationOptions > creationOptions Returns Type Description System.Object | Improve this Doc View Source CreateInstance(Type, IJSObjectReferenceFacade, Nullable<IJSFunctionalObject>, Nullable<DynamicProxyCreationOptions>) Declaration public object CreateInstance(Type interfaceToBeProxied, IJSObjectReferenceFacade jsObjectFacadeToBeProxied, IJSFunctionalObject? jsFunctionalObject = null, DynamicProxyCreationOptions? creationOptions = null) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReferenceFacade jsObjectFacadeToBeProxied System.Nullable < IJSFunctionalObject > jsFunctionalObject System.Nullable < DynamicProxyCreationOptions > creationOptions Returns Type Description System.Object Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorDefaults.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorDefaults.html",
    "title": "Class JSDynamicProxyActivatorDefaults | Documentations",
    "keywords": "Class JSDynamicProxyActivatorDefaults Inheritance System.Object JSDynamicProxyActivatorDefaults Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public static class JSDynamicProxyActivatorDefaults : object Fields | Improve this Doc View Source PROXY_INTERFACE__METHOD_BINDING_FLAGS Declaration public const BindingFlags PROXY_INTERFACE__METHOD_BINDING_FLAGS = null Field Value Type Description BindingFlags"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorOptions.html",
    "title": "Class JSDynamicProxyActivatorOptions | Documentations",
    "keywords": "Class JSDynamicProxyActivatorOptions Inheritance System.Object JSFunctionalObjectOptions < JSDynamicProxyActivatorOptions > JSDynamicProxyActivatorOptions Inherited Members JSFunctionalObjectOptions<JSDynamicProxyActivatorOptions>.JSFunctionalObject JSFunctionalObjectOptions<JSDynamicProxyActivatorOptions>.GetOrBuildJSFunctionalObject JSFunctionalObjectOptions<JSDynamicProxyActivatorOptions>.InterceptorWalkerBuilder Teronis.Microsoft.JSInterop.JSFunctionalObjectOptions<Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorOptions>.ConfigureInterceptorWalkerBuilder(Action<>) Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicProxyActivatorOptions : JSFunctionalObjectOptions<JSDynamicProxyActivatorOptions> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorUtils.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.JSDynamicProxyActivatorUtils.html",
    "title": "Class JSDynamicProxyActivatorUtils | Documentations",
    "keywords": "Class JSDynamicProxyActivatorUtils Inheritance System.Object JSDynamicProxyActivatorUtils Namespace : Teronis.Microsoft.JSInterop.Dynamic Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public static class JSDynamicProxyActivatorUtils : object Methods | Improve this Doc View Source GetDynamicObjectInterfaceMethods(Type) Declaration public static IEnumerable<MethodInfo> GetDynamicObjectInterfaceMethods(Type dynamicObjectInterfaceType) Parameters Type Name Description Type dynamicObjectInterfaceType Returns Type Description IEnumerable < MethodInfo >"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Locality | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Locality Classes IJSDynamicLocalObjectActivatorExtensions IServiceCollectionExtensions JSDynamicLocalObjectActivator Interfaces IJSDynamicLocalObjectActivator"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IJSDynamicLocalObjectActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IJSDynamicLocalObjectActivator.html",
    "title": "Interface IJSDynamicLocalObjectActivator | Documentations",
    "keywords": "Interface IJSDynamicLocalObjectActivator Inherited Members IInstanceActivator<IJSLocalObject>.InstanceActivated Namespace : Teronis.Microsoft.JSInterop.Dynamic.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSDynamicLocalObjectActivator : IInstanceActivator<IJSLocalObject> Methods | Improve this Doc View Source CreateInstanceAsync(Type, IJSObjectReference, String) Declaration ValueTask<IJSLocalObject> CreateInstanceAsync(Type interfaceToBeProxied, IJSObjectReference jsObjectReference, string objectName) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReference jsObjectReference System.String objectName Returns Type Description ValueTask < IJSLocalObject > | Improve this Doc View Source CreateInstanceAsync(Type, String) Declaration ValueTask<IJSLocalObject> CreateInstanceAsync(Type interfaceToBeProxied, string objectName) Parameters Type Name Description Type interfaceToBeProxied System.String objectName Returns Type Description ValueTask < IJSLocalObject > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSDynamicLocalObjectActivatorExtensions.CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, String) IJSDynamicLocalObjectActivatorExtensions.CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, IJSObjectReference, String) IJSDynamicLocalObjectActivatorExtensions.CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, IJSLocalObject, String)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IJSDynamicLocalObjectActivatorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IJSDynamicLocalObjectActivatorExtensions.html",
    "title": "Class IJSDynamicLocalObjectActivatorExtensions | Documentations",
    "keywords": "Class IJSDynamicLocalObjectActivatorExtensions Inheritance System.Object IJSDynamicLocalObjectActivatorExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSDynamicLocalObjectActivatorExtensions : object Methods | Improve this Doc View Source CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, IJSObjectReference, String) Declaration public static ValueTask<T> CreateInstanceAsync<T>(this IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator, IJSObjectReference jsObjectReference, string objectName) where T : class, IJSLocalObject Parameters Type Name Description IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator IJSObjectReference jsObjectReference System.String objectName Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, String) Declaration public static ValueTask<T> CreateInstanceAsync<T>(this IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator, string moduleNameOrPath) where T : class, IJSLocalObject Parameters Type Name Description IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator System.String moduleNameOrPath Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source CreateInstanceAsync<T>(IJSDynamicLocalObjectActivator, IJSLocalObject, String) Declaration public static ValueTask<T> CreateInstanceAsync<T>(this IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator, IJSLocalObject jsLocalObject, string objectName) where T : class, IJSLocalObject Parameters Type Name Description IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator IJSLocalObject jsLocalObject System.String objectName Returns Type Description ValueTask <T> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic.Locality Assembly : Teronis.Microsoft.JSInterop.Dynamic.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSDynamicLocalObject(IServiceCollection) Calls and . Declaration public static IServiceCollection AddJSDynamicLocalObject(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSDynamicLocalObjectActivator(IServiceCollection) Tries to add JSDynamicLocalObjectActivator as . Declaration public static IServiceCollection AddJSDynamicLocalObjectActivator(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.JSDynamicLocalObjectActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Locality.JSDynamicLocalObjectActivator.html",
    "title": "Class JSDynamicLocalObjectActivator | Documentations",
    "keywords": "Class JSDynamicLocalObjectActivator Inheritance System.Object JSDynamicLocalObjectActivator Implements IJSDynamicLocalObjectActivator Namespace : Teronis.Microsoft.JSInterop.Dynamic.Locality Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicLocalObjectActivator : IInstanceActivatorBase<IJSLocalObject>, IJSDynamicLocalObjectActivator Constructors | Improve this Doc View Source JSDynamicLocalObjectActivator(IJSLocalObjectActivator, IJSDynamicProxyActivator) Declaration public JSDynamicLocalObjectActivator(IJSLocalObjectActivator jsLocalObjectActivator, IJSDynamicProxyActivator jSDynamicProxyActivator) Parameters Type Name Description IJSLocalObjectActivator jsLocalObjectActivator IJSDynamicProxyActivator jSDynamicProxyActivator Methods | Improve this Doc View Source CreateInstanceAsync(Type, IJSObjectReference, String) Declaration public virtual ValueTask<IJSLocalObject> CreateInstanceAsync(Type interfaceToBeProxied, IJSObjectReference jsObjectReference, string objectName) Parameters Type Name Description Type interfaceToBeProxied IJSObjectReference jsObjectReference System.String objectName Returns Type Description ValueTask < IJSLocalObject > | Improve this Doc View Source CreateInstanceAsync(Type, String) Declaration public virtual ValueTask<IJSLocalObject> CreateInstanceAsync(Type interfaceToBeProxied, string objectName) Parameters Type Name Description Type interfaceToBeProxied System.String objectName Returns Type Description ValueTask < IJSLocalObject > Implements IJSDynamicLocalObjectActivator Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Module | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Module Classes IJSDynamicModuleActivatorExtensions IServiceCollectionExtensions JSDynamicModuleActivator Interfaces IJSDynamicModuleActivator"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IJSDynamicModuleActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IJSDynamicModuleActivator.html",
    "title": "Interface IJSDynamicModuleActivator | Documentations",
    "keywords": "Interface IJSDynamicModuleActivator Inherited Members IInstanceActivator<IJSModule>.InstanceActivated Namespace : Teronis.Microsoft.JSInterop.Dynamic.Module Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSDynamicModuleActivator : IInstanceActivator<IJSModule> Methods | Improve this Doc View Source CreateInstanceAsync(Type, String) Declaration ValueTask<IJSModule> CreateInstanceAsync(Type interfaceToBeProxied, string moduleNameOrPath) Parameters Type Name Description Type interfaceToBeProxied System.String moduleNameOrPath Returns Type Description ValueTask < IJSModule > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSDynamicModuleActivatorExtensions.CreateInstanceAsync<T>(IJSDynamicModuleActivator, String)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IJSDynamicModuleActivatorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IJSDynamicModuleActivatorExtensions.html",
    "title": "Class IJSDynamicModuleActivatorExtensions | Documentations",
    "keywords": "Class IJSDynamicModuleActivatorExtensions Inheritance System.Object IJSDynamicModuleActivatorExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic.Module Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSDynamicModuleActivatorExtensions : object Methods | Improve this Doc View Source CreateInstanceAsync<T>(IJSDynamicModuleActivator, String) Declaration public static ValueTask<T> CreateInstanceAsync<T>(this IJSDynamicModuleActivator jsDynamicModuleActivator, string moduleNameOrPath) where T : class, IJSModule Parameters Type Name Description IJSDynamicModuleActivator jsDynamicModuleActivator System.String moduleNameOrPath Returns Type Description ValueTask <T> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Dynamic.Module Assembly : Teronis.Microsoft.JSInterop.Dynamic.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSDynamicModule(IServiceCollection) Calls AddJSDynamicModuleActivator(IServiceCollection) and AddJSDynamicModuleActivator(IServiceCollection) . Declaration public static IServiceCollection AddJSDynamicModule(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSDynamicModuleActivator(IServiceCollection) Tries to add JSDynamicModuleActivator as . Declaration public static IServiceCollection AddJSDynamicModuleActivator(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.JSDynamicModuleActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Module.JSDynamicModuleActivator.html",
    "title": "Class JSDynamicModuleActivator | Documentations",
    "keywords": "Class JSDynamicModuleActivator Inheritance System.Object JSDynamicModuleActivator Implements IJSDynamicModuleActivator Namespace : Teronis.Microsoft.JSInterop.Dynamic.Module Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicModuleActivator : IInstanceActivatorBase<IJSModule>, IJSDynamicModuleActivator Constructors | Improve this Doc View Source JSDynamicModuleActivator(IJSModuleActivator, IJSDynamicProxyActivator) Declaration public JSDynamicModuleActivator(IJSModuleActivator jsModuleActivator, IJSDynamicProxyActivator jSDynamicProxyActivator) Parameters Type Name Description IJSModuleActivator jsModuleActivator IJSDynamicProxyActivator jSDynamicProxyActivator Methods | Improve this Doc View Source CreateInstanceAsync(Type, String) Declaration public virtual ValueTask<IJSModule> CreateInstanceAsync(Type interfaceToBeProxied, string moduleNameOrPath) Parameters Type Name Description Type interfaceToBeProxied System.String moduleNameOrPath Returns Type Description ValueTask < IJSModule > Implements IJSDynamicModuleActivator Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Reflection | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Dynamic.Reflection Classes ParameterBase<AttributeType> ParameterListException ValueTaskType"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ParameterBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ParameterBase-1.html",
    "title": "Class ParameterBase<AttributeType> | Documentations",
    "keywords": "Class ParameterBase<AttributeType> Inheritance System.Object ParameterBase<AttributeType> Namespace : Teronis.Microsoft.JSInterop.Dynamic.Reflection Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public abstract class ParameterBase<AttributeType> : object, IParameterInfoReader where AttributeType : Attribute Type Parameters Name Description AttributeType Constructors | Improve this Doc View Source ParameterBase(ParameterInfo, AttributeType) Declaration protected ParameterBase(ParameterInfo parameterInfo, AttributeType attribute) Parameters Type Name Description ParameterInfo parameterInfo AttributeType attribute Properties | Improve this Doc View Source Attribute Declaration public AttributeType Attribute { get; } Property Value Type Description AttributeType | Improve this Doc View Source ParameterInfo Declaration public ParameterInfo ParameterInfo { get; } Property Value Type Description ParameterInfo Methods | Improve this Doc View Source ReadParameterInfo() Declaration protected virtual void ReadParameterInfo() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ParameterListException.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ParameterListException.html",
    "title": "Class ParameterListException | Documentations",
    "keywords": "Class ParameterListException Inheritance System.Object ParameterListException Namespace : Teronis.Microsoft.JSInterop.Dynamic.Reflection Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class ParameterListException : AggregateException Constructors | Improve this Doc View Source ParameterListException() Declaration public ParameterListException() | Improve this Doc View Source ParameterListException(Exception[]) Declaration public ParameterListException(params Exception[] innerExceptions) Parameters Type Name Description Exception [] innerExceptions | Improve this Doc View Source ParameterListException(IEnumerable<Exception>) Declaration public ParameterListException(IEnumerable<Exception> innerExceptions) Parameters Type Name Description IEnumerable < Exception > innerExceptions | Improve this Doc View Source ParameterListException(SerializationInfo, StreamingContext) Declaration protected ParameterListException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source ParameterListException(Nullable<String>) Declaration public ParameterListException(string? message) Parameters Type Name Description System.Nullable < System.String > message | Improve this Doc View Source ParameterListException(Nullable<String>, Exception) Declaration public ParameterListException(string? message, Exception innerException) Parameters Type Name Description System.Nullable < System.String > message Exception innerException | Improve this Doc View Source ParameterListException(Nullable<String>, Exception[]) Declaration public ParameterListException(string? message, params Exception[] innerExceptions) Parameters Type Name Description System.Nullable < System.String > message Exception [] innerExceptions | Improve this Doc View Source ParameterListException(Nullable<String>, IEnumerable<Exception>) Declaration public ParameterListException(string? message, IEnumerable<Exception> innerExceptions) Parameters Type Name Description System.Nullable < System.String > message IEnumerable < Exception > innerExceptions Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ValueTaskType.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Dynamic.Reflection.ValueTaskType.html",
    "title": "Class ValueTaskType | Documentations",
    "keywords": "Class ValueTaskType Inheritance System.Object ValueTaskType Namespace : Teronis.Microsoft.JSInterop.Dynamic.Reflection Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class ValueTaskType : object Properties | Improve this Doc View Source GenericParameterType Declaration public Type? GenericParameterType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source HasGenericParameterType Declaration public bool HasGenericParameterType { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description Type Methods | Improve this Doc View Source Parse(Type) Declaration public static ValueTaskType Parse(Type type) Parameters Type Name Description Type type Returns Type Description ValueTaskType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Facades.Annotations | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Facades.Annotations Classes JSModuleAttributeBase JSModuleAttributeUtils JSModuleClassAttribute Decoratable on class. It provides ModuleNameOrPath to those properties with facade attribute that are using parameterless constructor but not JSModulePropertyAttribute(String) . JSModulePropertyAttribute"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleAttributeBase.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleAttributeBase.html",
    "title": "Class JSModuleAttributeBase | Documentations",
    "keywords": "Class JSModuleAttributeBase Inheritance System.Object JSModuleAttributeBase JSModuleClassAttribute JSModulePropertyAttribute Namespace : Teronis.Microsoft.JSInterop.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public abstract class JSModuleAttributeBase : Attribute Constructors | Improve this Doc View Source JSModuleAttributeBase() The properties (owned by component - see ) of type gets initialized when decorated with this attribute. Declaration public JSModuleAttributeBase() | Improve this Doc View Source JSModuleAttributeBase(String) The properties (owned by component - see ) of type gets initialized when decorated with this attribute. Declaration public JSModuleAttributeBase(string moduleNameOrPath) Parameters Type Name Description System.String moduleNameOrPath Relative path where the working directoy is typcially wwwroot. Properties | Improve this Doc View Source ModuleNameOrPath The path of a JavaScript ESM module relative to \"wwwroot\" (if not changed). Declaration public string? ModuleNameOrPath { get; } Property Value Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleAttributeUtils.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleAttributeUtils.html",
    "title": "Class JSModuleAttributeUtils | Documentations",
    "keywords": "Class JSModuleAttributeUtils Inheritance System.Object JSModuleAttributeUtils Namespace : Teronis.Microsoft.JSInterop.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class JSModuleAttributeUtils : object Methods | Improve this Doc View Source TryGetModuleNameOrPath<TPropertyAttribute, TClassAttribute>(IComponentProperty, out String) Tries to get the module name or path. If property attribute does exist the module name or path has to be provided either from property attribute or module attribute. Declaration public static bool TryGetModuleNameOrPath<TPropertyAttribute, TClassAttribute>(IComponentProperty componentProperty, out string moduleNameOrPath) where TPropertyAttribute : JSModulePropertyAttribute where TClassAttribute : JSModuleClassAttribute Parameters Type Name Description IComponentProperty componentProperty System.String moduleNameOrPath Returns Type Description System.Boolean Type Parameters Name Description TPropertyAttribute TClassAttribute"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleClassAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModuleClassAttribute.html",
    "title": "Class JSModuleClassAttribute | Documentations",
    "keywords": "Class JSModuleClassAttribute Decoratable on class. It provides ModuleNameOrPath to those properties with facade attribute that are using parameterless constructor but not JSModulePropertyAttribute(String) . Inheritance System.Object JSModuleAttributeBase JSModuleClassAttribute JSDynamicModuleClassAttribute Inherited Members JSModuleAttributeBase.ModuleNameOrPath Namespace : Teronis.Microsoft.JSInterop.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSModuleClassAttribute : JSModuleAttributeBase Constructors | Improve this Doc View Source JSModuleClassAttribute(String) Declaration public JSModuleClassAttribute(string ModuleNameOrPath) Parameters Type Name Description System.String ModuleNameOrPath Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModulePropertyAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.Annotations.JSModulePropertyAttribute.html",
    "title": "Class JSModulePropertyAttribute | Documentations",
    "keywords": "Class JSModulePropertyAttribute Inheritance System.Object JSModuleAttributeBase JSModulePropertyAttribute JSDynamicModulePropertyAttribute Inherited Members JSModuleAttributeBase.ModuleNameOrPath Namespace : Teronis.Microsoft.JSInterop.Facades.Annotations Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSModulePropertyAttribute : JSModuleAttributeBase Constructors | Improve this Doc View Source JSModulePropertyAttribute() Declaration public JSModulePropertyAttribute() | Improve this Doc View Source JSModulePropertyAttribute(String) The properties (owned by component - see ) of type gets initialized when decorated with this attribute. Declaration public JSModulePropertyAttribute(string moduleNameOrPath) Parameters Type Name Description System.String moduleNameOrPath Relative path where the working directoy is typcially wwwroot. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentProperty.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentProperty.html",
    "title": "Class ComponentProperty | Documentations",
    "keywords": "Class ComponentProperty Inheritance System.Object MemberInfoAttributeLookup ComponentProperty Implements IComponentProperty IMemberInfoAttributes Inherited Members MemberInfoAttributeLookup.Attributes MemberInfoAttributeLookup.GetAttributes() MemberInfoAttributeLookup.IsDefined(Type) MemberInfoAttributeLookup.IsAttributeDefined(Type) MemberInfoAttributeLookup.IsAttributeDefined<T>() MemberInfoAttributeLookup.TryGetAttribtue<T>(T) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class ComponentProperty : MemberInfoAttributeLookup, IComponentProperty, IMemberInfoAttributes Constructors | Improve this Doc View Source ComponentProperty(PropertyInfo) Declaration public ComponentProperty(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Properties | Improve this Doc View Source ComponentPropertyType Declaration public ComponentPropertyType ComponentPropertyType { get; } Property Value Type Description ComponentPropertyType | Improve this Doc View Source PropertyInfo Declaration public PropertyInfo PropertyInfo { get; } Property Value Type Description PropertyInfo | Improve this Doc View Source PropertyType Declaration public Type PropertyType { get; } Property Value Type Description Type Explicit Interface Implementations | Improve this Doc View Source IComponentProperty.ComponentPropertyType Declaration IComponentPropertyType IComponentProperty.ComponentPropertyType { get; } Returns Type Description IComponentPropertyType Implements IComponentProperty IMemberInfoAttributes Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners Classes JSModuleComponentPropertyAssigner Interfaces IComponentPropertyAssigner"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.IComponentPropertyAssigner.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.IComponentPropertyAssigner.html",
    "title": "Interface IComponentPropertyAssigner | Documentations",
    "keywords": "Interface IComponentPropertyAssigner Namespace : Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IComponentPropertyAssigner Methods | Improve this Doc View Source TryAssignComponentProperty(IComponentProperty) Assigns the component property with returning non-null JavaScript facade. Declaration ValueTask<YetNullable<IAsyncDisposable>> TryAssignComponentProperty(IComponentProperty componentProperty) Parameters Type Name Description IComponentProperty componentProperty The component property. Returns Type Description ValueTask < YetNullable < IAsyncDisposable >> \"Null\"/default or the JavaScript facade. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.JSModuleComponentPropertyAssigner.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners.JSModuleComponentPropertyAssigner.html",
    "title": "Class JSModuleComponentPropertyAssigner | Documentations",
    "keywords": "Class JSModuleComponentPropertyAssigner Inheritance System.Object JSModuleComponentPropertyAssigner Implements IComponentPropertyAssigner Namespace : Teronis.Microsoft.JSInterop.Facades.ComponentPropertyAssigners Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSModuleComponentPropertyAssigner : object, IComponentPropertyAssigner Constructors | Improve this Doc View Source JSModuleComponentPropertyAssigner(IJSModuleActivator, IJSCustomFacadeActivator) Declaration public JSModuleComponentPropertyAssigner(IJSModuleActivator jsModuleActivator, IJSCustomFacadeActivator jsCustomFacadeActivator) Parameters Type Name Description IJSModuleActivator jsModuleActivator IJSCustomFacadeActivator jsCustomFacadeActivator Methods | Improve this Doc View Source TryAssignComponentProperty(IComponentProperty) Assigns component property with returning non-null JavaScript module facade. Declaration public virtual ValueTask<YetNullable<IAsyncDisposable>> TryAssignComponentProperty(IComponentProperty componentProperty) Parameters Type Name Description IComponentProperty componentProperty Returns Type Description ValueTask < YetNullable < IAsyncDisposable >> null/default or the JavaScript module facade. Implements IComponentPropertyAssigner Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyType.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.ComponentPropertyType.html",
    "title": "Class ComponentPropertyType | Documentations",
    "keywords": "Class ComponentPropertyType Inheritance System.Object MemberInfoAttributeLookup ComponentPropertyType Implements IComponentPropertyType IMemberInfoAttributes Inherited Members MemberInfoAttributeLookup.Attributes MemberInfoAttributeLookup.GetAttributes() MemberInfoAttributeLookup.IsDefined(Type) MemberInfoAttributeLookup.IsAttributeDefined(Type) MemberInfoAttributeLookup.IsAttributeDefined<T>() MemberInfoAttributeLookup.TryGetAttribtue<T>(T) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class ComponentPropertyType : MemberInfoAttributeLookup, IComponentPropertyType, IMemberInfoAttributes Constructors | Improve this Doc View Source ComponentPropertyType(Type) Declaration public ComponentPropertyType(Type propertyType) Parameters Type Name Description Type propertyType Properties | Improve this Doc View Source PropertyType Declaration public Type PropertyType { get; } Property Value Type Description Type Implements IComponentPropertyType IMemberInfoAttributes Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Facades | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Facades Classes ComponentProperty ComponentPropertyType IJSFacadeDictionaryBuilderExtensions IServiceCollectionExtensions JSCustomFacadeActivator JSCustomFacadeActivatorOptions JSCustomFacadeDictionary JSCustomFacadeDictionaryBuilder JSCustomFacadeFactoryServiceProvider JSDynamicFacadeActivators A default implementation of IJSFacadeActivators . You may derive from it or implement IJSFacadeActivators yourself to use it in IJSFacadesActivator to create a concrete IJSFacades<TJSFacadeActivators> . JSFacadeActivators A default implementation of IJSFacadeActivators . You may derive from it or implement IJSFacadeActivators yourself to use it in IJSFacadesActivator to create a concrete IJSFacades<TJSFacadeActivators> . JSFacadeActivatorsBase A base class for assisting in proper usage of IJSFacadeActivators . JSFacades<TJSFacadeActivators> JSFacadesActivator JSFacadesActivatorOptions JSFacadesActivatorOptionsExtensions MemberInfoAttributeLookup Interfaces IComponentProperty IComponentPropertyType IJSCustomFacadeActivator IJSCustomFacadeDictionary IJSCustomFacadeDictionaryBuilder IJSCustomFacadeFactoryServiceProvider IJSFacadeActivators IJSFacades<TJSFacadeActivators> IJSFacadesActivator IMemberInfoAttributes Delegates JSCustomFacadeFactoryDelegate<TCustomFacade>"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IComponentProperty.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IComponentProperty.html",
    "title": "Interface IComponentProperty | Documentations",
    "keywords": "Interface IComponentProperty Inherited Members IMemberInfoAttributes.Attributes IMemberInfoAttributes.IsAttributeDefined(Type) IMemberInfoAttributes.IsAttributeDefined<T>() IMemberInfoAttributes.TryGetAttribtue<T>(T) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IComponentProperty : IMemberInfoAttributes Properties | Improve this Doc View Source ComponentPropertyType Declaration IComponentPropertyType ComponentPropertyType { get; } Property Value Type Description IComponentPropertyType | Improve this Doc View Source PropertyInfo Declaration PropertyInfo PropertyInfo { get; } Property Value Type Description PropertyInfo | Improve this Doc View Source PropertyType Declaration Type PropertyType { get; } Property Value Type Description Type Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IComponentPropertyType.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IComponentPropertyType.html",
    "title": "Interface IComponentPropertyType | Documentations",
    "keywords": "Interface IComponentPropertyType Inherited Members IMemberInfoAttributes.Attributes IMemberInfoAttributes.IsAttributeDefined(Type) IMemberInfoAttributes.IsAttributeDefined<T>() IMemberInfoAttributes.TryGetAttribtue<T>(T) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IComponentPropertyType : IMemberInfoAttributes Properties | Improve this Doc View Source PropertyType Declaration Type PropertyType { get; } Property Value Type Description Type Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeActivator.html",
    "title": "Interface IJSCustomFacadeActivator | Documentations",
    "keywords": "Interface IJSCustomFacadeActivator Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSCustomFacadeActivator Methods | Improve this Doc View Source CreateCustomFacade(IJSObjectReferenceFacade, Type) Declaration IAsyncDisposable CreateCustomFacade(IJSObjectReferenceFacade customFacadeConstructorParameter, Type jsCustomFacadeType) Parameters Type Name Description IJSObjectReferenceFacade customFacadeConstructorParameter Type jsCustomFacadeType Returns Type Description IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeDictionary.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeDictionary.html",
    "title": "Interface IJSCustomFacadeDictionary | Documentations",
    "keywords": "Interface IJSCustomFacadeDictionary Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSCustomFacadeDictionary : IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeDictionaryBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeDictionaryBuilder.html",
    "title": "Interface IJSCustomFacadeDictionaryBuilder | Documentations",
    "keywords": "Interface IJSCustomFacadeDictionaryBuilder Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSCustomFacadeDictionaryBuilder : IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Methods | Improve this Doc View Source Add(Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>) Declaration IJSCustomFacadeDictionaryBuilder Add(Type jsFacadeType, JSCustomFacadeFactoryDelegate<IAsyncDisposable> jsFacadeCreatorDelegate = null) Parameters Type Name Description Type jsFacadeType JSCustomFacadeFactoryDelegate < IAsyncDisposable > jsFacadeCreatorDelegate Returns Type Description IJSCustomFacadeDictionaryBuilder | Improve this Doc View Source Add<TCustomFacade>(JSCustomFacadeFactoryDelegate<TCustomFacade>) Declaration IJSCustomFacadeDictionaryBuilder Add<TCustomFacade>(JSCustomFacadeFactoryDelegate<TCustomFacade> jsFacadeCreatorHandler = null) where TCustomFacade : class, IAsyncDisposable Parameters Type Name Description JSCustomFacadeFactoryDelegate <TCustomFacade> jsFacadeCreatorHandler Returns Type Description IJSCustomFacadeDictionaryBuilder Type Parameters Name Description TCustomFacade | Improve this Doc View Source Clear() Declaration IJSCustomFacadeDictionaryBuilder Clear() Returns Type Description IJSCustomFacadeDictionaryBuilder | Improve this Doc View Source Remove(Type) Declaration IJSCustomFacadeDictionaryBuilder Remove(Type jsFacadeType) Parameters Type Name Description Type jsFacadeType Returns Type Description IJSCustomFacadeDictionaryBuilder | Improve this Doc View Source Remove<T>() Declaration IJSCustomFacadeDictionaryBuilder Remove<T>() where T : IAsyncDisposable Returns Type Description IJSCustomFacadeDictionaryBuilder Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSFacadeDictionaryBuilderExtensions.AddDefault(IJSCustomFacadeDictionaryBuilder)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeFactoryServiceProvider.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSCustomFacadeFactoryServiceProvider.html",
    "title": "Interface IJSCustomFacadeFactoryServiceProvider | Documentations",
    "keywords": "Interface IJSCustomFacadeFactoryServiceProvider Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSCustomFacadeFactoryServiceProvider : IServiceProvider Properties | Improve this Doc View Source JSObjectReferenceFacade Declaration IJSObjectReferenceFacade JSObjectReferenceFacade { get; } Property Value Type Description IJSObjectReferenceFacade Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadeActivators.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadeActivators.html",
    "title": "Interface IJSFacadeActivators | Documentations",
    "keywords": "Interface IJSFacadeActivators Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFacadeActivators Methods | Improve this Doc View Source PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable>) A hook called in constructor of class that implements IJSFacades<TJSFacadeActivators> . Expects all member that implement IInstanceActivator<T> to add registerAsyncDisposableFacade to InstanceActivated . Declaration void PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable> registerAsyncDisposableFacade) Parameters Type Name Description InstanceActivatedDelegate < IAsyncDisposable > registerAsyncDisposableFacade Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadeDictionaryBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadeDictionaryBuilderExtensions.html",
    "title": "Class IJSFacadeDictionaryBuilderExtensions | Documentations",
    "keywords": "Class IJSFacadeDictionaryBuilderExtensions Inheritance System.Object IJSFacadeDictionaryBuilderExtensions Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSFacadeDictionaryBuilderExtensions : object Methods | Improve this Doc View Source AddDefault(IJSCustomFacadeDictionaryBuilder) Declaration public static IJSCustomFacadeDictionaryBuilder AddDefault(this IJSCustomFacadeDictionaryBuilder builder) Parameters Type Name Description IJSCustomFacadeDictionaryBuilder builder Returns Type Description IJSCustomFacadeDictionaryBuilder"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacades-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacades-1.html",
    "title": "Interface IJSFacades<TJSFacadeActivators> | Documentations",
    "keywords": "Interface IJSFacades<TJSFacadeActivators> Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFacades<out TJSFacadeActivators> : IAsyncDisposable where TJSFacadeActivators : IJSFacadeActivators Type Parameters Name Description TJSFacadeActivators Properties | Improve this Doc View Source Activators Declaration TJSFacadeActivators Activators { get; } Property Value Type Description TJSFacadeActivators Methods | Improve this Doc View Source CreateCustomFacade(Func<TJSFacadeActivators, IJSObjectReferenceFacade>, Type) Declaration IAsyncDisposable CreateCustomFacade(Func<TJSFacadeActivators, IJSObjectReferenceFacade> getCustomFacadeConstructorParameter, Type jsCustomFacadeType) Parameters Type Name Description Func <TJSFacadeActivators, IJSObjectReferenceFacade > getCustomFacadeConstructorParameter Type jsCustomFacadeType Returns Type Description IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadesActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IJSFacadesActivator.html",
    "title": "Interface IJSFacadesActivator | Documentations",
    "keywords": "Interface IJSFacadesActivator Inherited Members IInstanceActivator<IJSFacades<IJSFacadeActivators>>.InstanceActivated Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFacadesActivator : IInstanceActivator<IJSFacades<IJSFacadeActivators>> Methods | Improve this Doc View Source CreateInstance<TJSFacadeActivators>() Creates an empty container for facades. Declaration IJSFacades<TJSFacadeActivators> CreateInstance<TJSFacadeActivators>() where TJSFacadeActivators : IJSFacadeActivators Returns Type Description IJSFacades <TJSFacadeActivators> Type Parameters Name Description TJSFacadeActivators | Improve this Doc View Source CreateInstanceAsync<TJSFacadeActivators>(Object) Initializes the properties of the component that are decorated with a facade attribute. Declaration ValueTask<IJSFacades<TJSFacadeActivators>> CreateInstanceAsync<TJSFacadeActivators>(object component) where TJSFacadeActivators : IJSFacadeActivators Parameters Type Name Description System.Object component Returns Type Description ValueTask < IJSFacades <TJSFacadeActivators>> Type Parameters Name Description TJSFacadeActivators Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IMemberInfoAttributes.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IMemberInfoAttributes.html",
    "title": "Interface IMemberInfoAttributes | Documentations",
    "keywords": "Interface IMemberInfoAttributes Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IMemberInfoAttributes Properties | Improve this Doc View Source Attributes Declaration ILookup<Type, Attribute> Attributes { get; } Property Value Type Description ILookup < Type , Attribute > Methods | Improve this Doc View Source IsAttributeDefined(Type) Declaration bool IsAttributeDefined(Type attributeType) Parameters Type Name Description Type attributeType Returns Type Description System.Boolean | Improve this Doc View Source IsAttributeDefined<T>() Declaration bool IsAttributeDefined<T>() Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGetAttribtue<T>(out T) Declaration bool TryGetAttribtue<T>(out T attribute) where T : Attribute Parameters Type Name Description T attribute Returns Type Description System.Boolean Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSCustomFacadeActivator(IServiceCollection, Nullable<Action<JSCustomFacadeActivatorOptions>>) Declaration public static IServiceCollection AddJSCustomFacadeActivator(this IServiceCollection services, Action<JSCustomFacadeActivatorOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services System.Nullable < Action < JSCustomFacadeActivatorOptions >> configureOptions Returns Type Description IServiceCollection | Improve this Doc View Source AddJSFacades(IServiceCollection) Declaration public static IServiceCollection AddJSFacades(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSFacadesActivator(IServiceCollection, Nullable<Action<JSFacadesActivatorOptions>>) Declaration public static IServiceCollection AddJSFacadesActivator(this IServiceCollection services, Action<JSFacadesActivatorOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services System.Nullable < Action < JSFacadesActivatorOptions >> configureOptions Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeActivator.html",
    "title": "Class JSCustomFacadeActivator | Documentations",
    "keywords": "Class JSCustomFacadeActivator Inheritance System.Object JSCustomFacadeActivator Implements IJSCustomFacadeActivator Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSCustomFacadeActivator : object, IJSCustomFacadeActivator Constructors | Improve this Doc View Source JSCustomFacadeActivator(IServiceProvider, JSCustomFacadeActivatorOptions) Declaration public JSCustomFacadeActivator(IServiceProvider serviceProvider, JSCustomFacadeActivatorOptions options) Parameters Type Name Description IServiceProvider serviceProvider JSCustomFacadeActivatorOptions options Methods | Improve this Doc View Source CreateCustomFacade(IJSObjectReferenceFacade, Type) Declaration public virtual IAsyncDisposable CreateCustomFacade(IJSObjectReferenceFacade customFacadeConstructorParameter, Type jsCustomFacadeType) Parameters Type Name Description IJSObjectReferenceFacade customFacadeConstructorParameter Type jsCustomFacadeType Returns Type Description IAsyncDisposable Implements IJSCustomFacadeActivator Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeActivatorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeActivatorOptions.html",
    "title": "Class JSCustomFacadeActivatorOptions | Documentations",
    "keywords": "Class JSCustomFacadeActivatorOptions Inheritance System.Object JSCustomFacadeActivatorOptions Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSCustomFacadeActivatorOptions : object Constructors | Improve this Doc View Source JSCustomFacadeActivatorOptions() Declaration public JSCustomFacadeActivatorOptions() Properties | Improve this Doc View Source JSFacadeDictionaryConfiguration Declaration public IJSCustomFacadeDictionaryBuilder JSFacadeDictionaryConfiguration { get; } Property Value Type Description IJSCustomFacadeDictionaryBuilder Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeDictionary.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeDictionary.html",
    "title": "Class JSCustomFacadeDictionary | Documentations",
    "keywords": "Class JSCustomFacadeDictionary Inheritance System.Object JSCustomFacadeDictionary Implements IJSCustomFacadeDictionary IReadOnlyDictionary < Type , JSCustomFacadeFactoryDelegate < IAsyncDisposable >> Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class JSCustomFacadeDictionary : IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>>, IJSCustomFacadeDictionary, IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Constructors | Improve this Doc View Source JSCustomFacadeDictionary(IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>>) Declaration public JSCustomFacadeDictionary(IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>> dictionary) Parameters Type Name Description IReadOnlyDictionary < Type , JSCustomFacadeFactoryDelegate < IAsyncDisposable >> dictionary Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Type] Declaration public JSCustomFacadeFactoryDelegate<IAsyncDisposable> this[Type key] { get; } Parameters Type Name Description Type key Property Value Type Description JSCustomFacadeFactoryDelegate < IAsyncDisposable > | Improve this Doc View Source Keys Declaration public IEnumerable<Type> Keys { get; } Property Value Type Description IEnumerable < Type > | Improve this Doc View Source Values Declaration public IEnumerable<JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Values { get; } Property Value Type Description IEnumerable < JSCustomFacadeFactoryDelegate < IAsyncDisposable >> Methods | Improve this Doc View Source ContainsKey(Type) Declaration public bool ContainsKey(Type key) Parameters Type Name Description Type key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < Type , JSCustomFacadeFactoryDelegate < IAsyncDisposable >>> | Improve this Doc View Source TryGetValue(Type, out JSCustomFacadeFactoryDelegate<IAsyncDisposable>) Declaration public bool TryGetValue(Type key, out JSCustomFacadeFactoryDelegate<IAsyncDisposable> value) Parameters Type Name Description Type key JSCustomFacadeFactoryDelegate < IAsyncDisposable > value Returns Type Description System.Boolean Implements IJSCustomFacadeDictionary IReadOnlyDictionary<, > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeDictionaryBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeDictionaryBuilder.html",
    "title": "Class JSCustomFacadeDictionaryBuilder | Documentations",
    "keywords": "Class JSCustomFacadeDictionaryBuilder Inheritance System.Object JSCustomFacadeDictionaryBuilder Implements IJSCustomFacadeDictionaryBuilder IReadOnlyDictionary < Type , JSCustomFacadeFactoryDelegate < IAsyncDisposable >> Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class JSCustomFacadeDictionaryBuilder : object, IJSCustomFacadeDictionaryBuilder, IReadOnlyDictionary<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Constructors | Improve this Doc View Source JSCustomFacadeDictionaryBuilder() Declaration public JSCustomFacadeDictionaryBuilder() Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Type] Declaration public JSCustomFacadeFactoryDelegate<IAsyncDisposable> this[Type key] { get; } Parameters Type Name Description Type key Property Value Type Description JSCustomFacadeFactoryDelegate < IAsyncDisposable > | Improve this Doc View Source Keys Declaration public IEnumerable<Type> Keys { get; } Property Value Type Description IEnumerable < Type > | Improve this Doc View Source Values Declaration public IEnumerable<JSCustomFacadeFactoryDelegate<IAsyncDisposable>> Values { get; } Property Value Type Description IEnumerable < JSCustomFacadeFactoryDelegate < IAsyncDisposable >> Methods | Improve this Doc View Source Add(Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>) Declaration public JSCustomFacadeDictionaryBuilder Add(Type jsFacadeType, JSCustomFacadeFactoryDelegate<IAsyncDisposable> jsFacadeCreatorDelegate = null) Parameters Type Name Description Type jsFacadeType JSCustomFacadeFactoryDelegate < IAsyncDisposable > jsFacadeCreatorDelegate Returns Type Description JSCustomFacadeDictionaryBuilder | Improve this Doc View Source Add<T>(JSCustomFacadeFactoryDelegate<T>) Declaration public JSCustomFacadeDictionaryBuilder Add<T>(JSCustomFacadeFactoryDelegate<T> jsFacadeCreatorDelegate = null) where T : class, IAsyncDisposable Parameters Type Name Description JSCustomFacadeFactoryDelegate <T> jsFacadeCreatorDelegate Returns Type Description JSCustomFacadeDictionaryBuilder Type Parameters Name Description T | Improve this Doc View Source AddDefault() Declaration public JSCustomFacadeDictionaryBuilder AddDefault() Returns Type Description JSCustomFacadeDictionaryBuilder | Improve this Doc View Source Build() Declaration public JSCustomFacadeDictionary Build() Returns Type Description JSCustomFacadeDictionary | Improve this Doc View Source Clear() Declaration public JSCustomFacadeDictionaryBuilder Clear() Returns Type Description JSCustomFacadeDictionaryBuilder | Improve this Doc View Source ContainsKey(Type) Declaration public bool ContainsKey(Type key) Parameters Type Name Description Type key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<Type, JSCustomFacadeFactoryDelegate<IAsyncDisposable>>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < Type , JSCustomFacadeFactoryDelegate < IAsyncDisposable >>> | Improve this Doc View Source Remove(Type) Declaration public JSCustomFacadeDictionaryBuilder Remove(Type jsFacadeType) Parameters Type Name Description Type jsFacadeType Returns Type Description JSCustomFacadeDictionaryBuilder | Improve this Doc View Source Remove<T>() Declaration public JSCustomFacadeDictionaryBuilder Remove<T>() where T : IAsyncDisposable Returns Type Description JSCustomFacadeDictionaryBuilder Type Parameters Name Description T | Improve this Doc View Source TryGetValue(Type, out JSCustomFacadeFactoryDelegate<IAsyncDisposable>) Declaration public bool TryGetValue(Type key, out JSCustomFacadeFactoryDelegate<IAsyncDisposable> value) Parameters Type Name Description Type key JSCustomFacadeFactoryDelegate < IAsyncDisposable > value Returns Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source IJSCustomFacadeDictionaryBuilder.Add<TCustomFacade>(JSCustomFacadeFactoryDelegate<TCustomFacade>) Declaration IJSCustomFacadeDictionaryBuilder IJSCustomFacadeDictionaryBuilder.Add<T>(JSCustomFacadeFactoryDelegate<T> jsFacadeCreatorHandler) where T : class, IAsyncDisposable Parameters Type Name Description JSCustomFacadeFactoryDelegate <T> jsFacadeCreatorHandler Returns Type Description IJSCustomFacadeDictionaryBuilder Type Parameters Name Description T | Improve this Doc View Source IJSCustomFacadeDictionaryBuilder.Clear() Declaration IJSCustomFacadeDictionaryBuilder IJSCustomFacadeDictionaryBuilder.Clear() Returns Type Description IJSCustomFacadeDictionaryBuilder | Improve this Doc View Source IJSCustomFacadeDictionaryBuilder.Remove<T>() Declaration IJSCustomFacadeDictionaryBuilder IJSCustomFacadeDictionaryBuilder.Remove<T>() where T : IAsyncDisposable Returns Type Description IJSCustomFacadeDictionaryBuilder Type Parameters Name Description T Implements IJSCustomFacadeDictionaryBuilder IReadOnlyDictionary<, > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeFactoryDelegate-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeFactoryDelegate-1.html",
    "title": "Delegate JSCustomFacadeFactoryDelegate<TCustomFacade> | Documentations",
    "keywords": "Delegate JSCustomFacadeFactoryDelegate<TCustomFacade> Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public delegate TCustomFacade JSCustomFacadeFactoryDelegate<out TCustomFacade>(IJSCustomFacadeFactoryServiceProvider serviceProvider) where TCustomFacade : class, IAsyncDisposable; Parameters Type Name Description IJSCustomFacadeFactoryServiceProvider serviceProvider Returns Type Description TCustomFacade Type Parameters Name Description TCustomFacade Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeFactoryServiceProvider.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSCustomFacadeFactoryServiceProvider.html",
    "title": "Class JSCustomFacadeFactoryServiceProvider | Documentations",
    "keywords": "Class JSCustomFacadeFactoryServiceProvider Inheritance System.Object JSCustomFacadeFactoryServiceProvider Implements IJSCustomFacadeFactoryServiceProvider IServiceProvider Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class JSCustomFacadeFactoryServiceProvider : object, IJSCustomFacadeFactoryServiceProvider, IServiceProvider Constructors | Improve this Doc View Source JSCustomFacadeFactoryServiceProvider(IServiceProvider, IJSObjectReferenceFacade) Declaration public JSCustomFacadeFactoryServiceProvider(IServiceProvider serviceProvider, IJSObjectReferenceFacade jsObjectReferenceFacade) Parameters Type Name Description IServiceProvider serviceProvider IJSObjectReferenceFacade jsObjectReferenceFacade Properties | Improve this Doc View Source JSObjectReferenceFacade Declaration public IJSObjectReferenceFacade JSObjectReferenceFacade { get; } Property Value Type Description IJSObjectReferenceFacade Methods | Improve this Doc View Source GetService(Type) Declaration public object? GetService(Type serviceType) Parameters Type Name Description Type serviceType Returns Type Description System.Nullable < System.Object > Implements IJSCustomFacadeFactoryServiceProvider IServiceProvider Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSDynamicFacadeActivators.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSDynamicFacadeActivators.html",
    "title": "Class JSDynamicFacadeActivators | Documentations",
    "keywords": "Class JSDynamicFacadeActivators A default implementation of IJSFacadeActivators . You may derive from it or implement IJSFacadeActivators yourself to use it in IJSFacadesActivator to create a concrete IJSFacades<TJSFacadeActivators> . Inheritance System.Object JSFacadeActivators JSDynamicFacadeActivators Implements IJSFacadeActivators IJSFacadeActivators Inherited Members JSFacadeActivators.JSModuleActivator JSFacadeActivators.JSLocalObjectActivator JSFacadeActivators.JSFacadesActivator Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Dynamic.Core.dll Syntax public class JSDynamicFacadeActivators : JSFacadeActivators, IJSFacadeActivators, IJSFacadeActivators Constructors | Improve this Doc View Source JSDynamicFacadeActivators(IJSModuleActivator, IJSLocalObjectActivator, IJSFacadesActivator, IJSDynamicModuleActivator, IJSDynamicLocalObjectActivator) Declaration public JSDynamicFacadeActivators(IJSModuleActivator jsModuleActivator, IJSLocalObjectActivator jsLocalObjectActivator, IJSFacadesActivator jsFacadesActivator, IJSDynamicModuleActivator jsDynamicModuleActivator, IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator) Parameters Type Name Description IJSModuleActivator jsModuleActivator IJSLocalObjectActivator jsLocalObjectActivator IJSFacadesActivator jsFacadesActivator IJSDynamicModuleActivator jsDynamicModuleActivator IJSDynamicLocalObjectActivator jsDynamicLocalObjectActivator Properties | Improve this Doc View Source JSDynamicLocalObjectActivator Declaration public IJSDynamicLocalObjectActivator JSDynamicLocalObjectActivator { get; } Property Value Type Description IJSDynamicLocalObjectActivator | Improve this Doc View Source JSDynamicModuleActivator Declaration public IJSDynamicModuleActivator JSDynamicModuleActivator { get; } Property Value Type Description IJSDynamicModuleActivator Implements IJSFacadeActivators IJSFacadeActivators Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadeActivators.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadeActivators.html",
    "title": "Class JSFacadeActivators | Documentations",
    "keywords": "Class JSFacadeActivators A default implementation of IJSFacadeActivators . You may derive from it or implement IJSFacadeActivators yourself to use it in IJSFacadesActivator to create a concrete IJSFacades<TJSFacadeActivators> . Inheritance System.Object JSFacadeActivatorsBase JSFacadeActivators JSDynamicFacadeActivators Implements IJSFacadeActivators Inherited Members JSFacadeActivatorsBase.AddInstanceActivator(IInstanceActivator<IAsyncDisposable>) JSFacadeActivatorsBase.PrepareInstanceActivators(IInstanceActivator<IAsyncDisposable>[]) JSFacadeActivatorsBase.IJSFacadeActivators.PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable>) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFacadeActivators : JSFacadeActivatorsBase, IJSFacadeActivators Constructors | Improve this Doc View Source JSFacadeActivators(IJSModuleActivator, IJSLocalObjectActivator, IJSFacadesActivator) Declaration public JSFacadeActivators(IJSModuleActivator jsModuleActivator, IJSLocalObjectActivator jsLocalObjectActivator, IJSFacadesActivator jsFacadesActivator) Parameters Type Name Description IJSModuleActivator jsModuleActivator IJSLocalObjectActivator jsLocalObjectActivator IJSFacadesActivator jsFacadesActivator Properties | Improve this Doc View Source JSFacadesActivator Declaration public IJSFacadesActivator JSFacadesActivator { get; } Property Value Type Description IJSFacadesActivator | Improve this Doc View Source JSLocalObjectActivator Declaration public IJSLocalObjectActivator JSLocalObjectActivator { get; } Property Value Type Description IJSLocalObjectActivator | Improve this Doc View Source JSModuleActivator Declaration public IJSModuleActivator JSModuleActivator { get; } Property Value Type Description IJSModuleActivator Implements IJSFacadeActivators Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadeActivatorsBase.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadeActivatorsBase.html",
    "title": "Class JSFacadeActivatorsBase | Documentations",
    "keywords": "Class JSFacadeActivatorsBase A base class for assisting in proper usage of IJSFacadeActivators . Inheritance System.Object JSFacadeActivatorsBase JSFacadeActivators Implements IJSFacadeActivators Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSFacadeActivatorsBase : object, IJSFacadeActivators Constructors | Improve this Doc View Source JSFacadeActivatorsBase() Declaration public JSFacadeActivatorsBase() Methods | Improve this Doc View Source AddInstanceActivator(IInstanceActivator<IAsyncDisposable>) Adds instanceActivator to list. Must be called within constructor. List will be iterated later for PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable>) Declaration protected void AddInstanceActivator(IInstanceActivator<IAsyncDisposable> instanceActivator) Parameters Type Name Description IInstanceActivator < IAsyncDisposable > instanceActivator | Improve this Doc View Source PrepareInstanceActivators(IInstanceActivator<IAsyncDisposable>[]) Adds instanceActivators to list. Must be called within constructor. List will be iterated later for PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable>) Declaration protected void PrepareInstanceActivators(params IInstanceActivator<IAsyncDisposable>[] instanceActivators) Parameters Type Name Description IInstanceActivator < IAsyncDisposable >[] instanceActivators Explicit Interface Implementations | Improve this Doc View Source IJSFacadeActivators.PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable>) Declaration void IJSFacadeActivators.PrepareInstanceActivatedCapableActivators(InstanceActivatedDelegate<IAsyncDisposable> registerAsyncDisposableFacadeHandler) Parameters Type Name Description InstanceActivatedDelegate < IAsyncDisposable > registerAsyncDisposableFacadeHandler Implements IJSFacadeActivators Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacades-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacades-1.html",
    "title": "Class JSFacades<TJSFacadeActivators> | Documentations",
    "keywords": "Class JSFacades<TJSFacadeActivators> Inheritance System.Object JSFacades<TJSFacadeActivators> Implements IJSFacades <TJSFacadeActivators> IAsyncDisposable Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFacades<TJSFacadeActivators> : object, IJSFacades<TJSFacadeActivators>, IAsyncDisposable where TJSFacadeActivators : IJSFacadeActivators Type Parameters Name Description TJSFacadeActivators Constructors | Improve this Doc View Source JSFacades(IJSCustomFacadeActivator, TJSFacadeActivators) Declaration public JSFacades(IJSCustomFacadeActivator jsFacadeResolver, TJSFacadeActivators jsFacadeActivators) Parameters Type Name Description IJSCustomFacadeActivator jsFacadeResolver TJSFacadeActivators jsFacadeActivators Properties | Improve this Doc View Source Activators Declaration public TJSFacadeActivators Activators { get; } Property Value Type Description TJSFacadeActivators | Improve this Doc View Source Item[Int32] Declaration public IAsyncDisposable this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description IAsyncDisposable | Improve this Doc View Source JSFacadeList Declaration public IReadOnlyList<IAsyncDisposable> JSFacadeList { get; } Property Value Type Description IReadOnlyList < IAsyncDisposable > Methods | Improve this Doc View Source CreateCustomFacade(Func<TJSFacadeActivators, IJSObjectReferenceFacade>, Type) Declaration public virtual IAsyncDisposable CreateCustomFacade(Func<TJSFacadeActivators, IJSObjectReferenceFacade> getCustomFacadeConstructorParameter, Type jsCustomFacadeType) Parameters Type Name Description Func <TJSFacadeActivators, IJSObjectReferenceFacade > getCustomFacadeConstructorParameter Type jsCustomFacadeType Returns Type Description IAsyncDisposable | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source RegisterAsyncDisposable<T>(T) Declaration protected T RegisterAsyncDisposable<T>(T jsFacadesDisposable) where T : IAsyncDisposable Parameters Type Name Description T jsFacadesDisposable Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RegisterAsyncDisposableFacade(IAsyncDisposable) Declaration protected virtual void RegisterAsyncDisposableFacade(IAsyncDisposable jsFacadesDisposable) Parameters Type Name Description IAsyncDisposable jsFacadesDisposable | Improve this Doc View Source RegisterAsyncDisposables(IEnumerable<IAsyncDisposable>) Declaration protected void RegisterAsyncDisposables(IEnumerable<IAsyncDisposable> jsFacadesDisposables) Parameters Type Name Description IEnumerable < IAsyncDisposable > jsFacadesDisposables Implements IJSFacades<TJSFacadeActivators> IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivator.html",
    "title": "Class JSFacadesActivator | Documentations",
    "keywords": "Class JSFacadesActivator Inheritance System.Object IInstanceActivatorBase < IJSFacades < IJSFacadeActivators >> JSFacadesActivator Implements IJSFacadesActivator IInstanceActivator < IJSFacades < IJSFacadeActivators >> Inherited Members IInstanceActivatorBase<IJSFacades<IJSFacadeActivators>>.InstanceActivated IInstanceActivatorBase<IJSFacades<IJSFacadeActivators>>.DispatchInstanceActicated(IJSFacades<IJSFacadeActivators>) Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFacadesActivator : IInstanceActivatorBase<IJSFacades<IJSFacadeActivators>>, IJSFacadesActivator, IInstanceActivator<IJSFacades<IJSFacadeActivators>> Constructors | Improve this Doc View Source JSFacadesActivator(JSFacadesActivatorOptions) Declaration public JSFacadesActivator(JSFacadesActivatorOptions options) Parameters Type Name Description JSFacadesActivatorOptions options Methods | Improve this Doc View Source CreateInstance<TJSFacadeActivators>() Declaration public IJSFacades<TJSFacadeActivators> CreateInstance<TJSFacadeActivators>() where TJSFacadeActivators : IJSFacadeActivators Returns Type Description IJSFacades <TJSFacadeActivators> Type Parameters Name Description TJSFacadeActivators | Improve this Doc View Source CreateInstanceAsync<TJSFacadeActivators>(Object) Declaration public ValueTask<IJSFacades<TJSFacadeActivators>> CreateInstanceAsync<TJSFacadeActivators>(object component) where TJSFacadeActivators : IJSFacadeActivators Parameters Type Name Description System.Object component Returns Type Description ValueTask < IJSFacades <TJSFacadeActivators>> Type Parameters Name Description TJSFacadeActivators Implements IJSFacadesActivator IInstanceActivator<T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptions.html",
    "title": "Class JSFacadesActivatorOptions | Documentations",
    "keywords": "Class JSFacadesActivatorOptions Inheritance System.Object JSFacadesActivatorOptions Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFacadesActivatorOptions : object Constructors | Improve this Doc View Source JSFacadesActivatorOptions() Declaration public JSFacadesActivatorOptions() Properties | Improve this Doc View Source ComponentPropertyAssignerFactories Contains factories for component property assignments. Declaration public OrderedDictionary<Type, Func<IServiceProvider, IComponentPropertyAssigner>?> ComponentPropertyAssignerFactories { get; } Property Value Type Description OrderedDictionary < Type , System.Nullable < Func < IServiceProvider , IComponentPropertyAssigner >>> Extension Methods JSFacadesActivatorOptionsExtensions.AddDefaultComponentPropertyAssigners(JSFacadesActivatorOptions) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptionsExtensions.AddDefaultDynamicComponentPropertyAssigners(Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptions)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptionsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.JSFacadesActivatorOptionsExtensions.html",
    "title": "Class JSFacadesActivatorOptionsExtensions | Documentations",
    "keywords": "Class JSFacadesActivatorOptionsExtensions Inheritance System.Object JSFacadesActivatorOptionsExtensions Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public static class JSFacadesActivatorOptionsExtensions : object Methods | Improve this Doc View Source AddDefaultComponentPropertyAssigners(JSFacadesActivatorOptions) Declaration public static void AddDefaultComponentPropertyAssigners(this JSFacadesActivatorOptions options) Parameters Type Name Description JSFacadesActivatorOptions options"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.MemberInfoAttributeLookup.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Facades.MemberInfoAttributeLookup.html",
    "title": "Class MemberInfoAttributeLookup | Documentations",
    "keywords": "Class MemberInfoAttributeLookup Inheritance System.Object MemberInfoAttributeLookup ComponentProperty ComponentPropertyType Implements IMemberInfoAttributes Namespace : Teronis.Microsoft.JSInterop.Facades Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class MemberInfoAttributeLookup : object, IMemberInfoAttributes Constructors | Improve this Doc View Source MemberInfoAttributeLookup(MemberInfo) Declaration public MemberInfoAttributeLookup(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Properties | Improve this Doc View Source Attributes Declaration public ILookup<Type, Attribute> Attributes { get; } Property Value Type Description ILookup < Type , Attribute > Methods | Improve this Doc View Source GetAttributes() Declaration protected IEnumerable<Attribute> GetAttributes() Returns Type Description IEnumerable < Attribute > | Improve this Doc View Source IsAttributeDefined(Type) Declaration public bool IsAttributeDefined(Type attributeType) Parameters Type Name Description Type attributeType Returns Type Description System.Boolean | Improve this Doc View Source IsAttributeDefined<T>() Declaration public bool IsAttributeDefined<T>() Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source IsDefined(Type) Declaration protected bool IsDefined(Type attributeType) Parameters Type Name Description Type attributeType Returns Type Description System.Boolean | Improve this Doc View Source TryGetAttribtue<T>(out T) Declaration public bool TryGetAttribtue<T>(out T attribute) where T : Attribute Parameters Type Name Description T attribute Returns Type Description System.Boolean Type Parameters Name Description T Implements IMemberInfoAttributes Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.GetOrBuildJSFunctionalObjectDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.GetOrBuildJSFunctionalObjectDelegate.html",
    "title": "Delegate GetOrBuildJSFunctionalObjectDelegate | Documentations",
    "keywords": "Delegate GetOrBuildJSFunctionalObjectDelegate Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public delegate IJSFunctionalObject GetOrBuildJSFunctionalObjectDelegate(); Returns Type Description IJSFunctionalObject Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.html",
    "title": "Namespace Teronis.Microsoft.JSInterop | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop Classes IInstanceActivatorBase<T> IJSObjectReferenceFacadeExtensions JSFunctionalObject JSFunctionalObjectOptions<DerivedType> JSFunctionalObjectOptionsConfiguration<DerivedType> JSObjectReferenceFacade Interfaces IInstanceActivator<T> IJSFunctionalObject IJSObjectReferenceFacade Delegates GetOrBuildJSFunctionalObjectDelegate InstanceActivatedDelegate<T>"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.IInstanceActivator-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.IInstanceActivator-1.html",
    "title": "Interface IInstanceActivator<T> | Documentations",
    "keywords": "Interface IInstanceActivator<T> Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IInstanceActivator<out T> where T : IAsyncDisposable Type Parameters Name Description T Events | Improve this Doc View Source InstanceActivated Declaration event InstanceActivatedDelegate<T> InstanceActivated Event Type Type Description InstanceActivatedDelegate <T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.IInstanceActivatorBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.IInstanceActivatorBase-1.html",
    "title": "Class IInstanceActivatorBase<T> | Documentations",
    "keywords": "Class IInstanceActivatorBase<T> Inheritance System.Object IInstanceActivatorBase<T> JSFacadesActivator JSLocalObjectActivator JSModuleActivator Implements IInstanceActivator <T> Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class IInstanceActivatorBase<T> : object, IInstanceActivator<T> where T : IAsyncDisposable Type Parameters Name Description T Methods | Improve this Doc View Source DispatchInstanceActicated(T) Declaration protected void DispatchInstanceActicated(T activatedInstance) Parameters Type Name Description T activatedInstance Events | Improve this Doc View Source InstanceActivated Declaration public event InstanceActivatedDelegate<T> InstanceActivated Event Type Type Description InstanceActivatedDelegate <T> Implements IInstanceActivator<T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSFunctionalObject.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSFunctionalObject.html",
    "title": "Interface IJSFunctionalObject | Documentations",
    "keywords": "Interface IJSFunctionalObject Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObject Methods | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, object? [] args) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, object? [] args) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, object? [] args) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, object? [] args) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, object? [] args) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSObjectReferenceFacade.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSObjectReferenceFacade.html",
    "title": "Interface IJSObjectReferenceFacade | Documentations",
    "keywords": "Interface IJSObjectReferenceFacade Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSObjectReferenceFacade : IAsyncDisposable Properties | Improve this Doc View Source JSObjectReference Declaration IJSObjectReference JSObjectReference { get; } Property Value Type Description IJSObjectReference Methods | Improve this Doc View Source InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(string identifier, CancellationToken cancellationToken, object? [] arguments) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(string identifier, object? [] arguments) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) Declaration ValueTask<TValue> InvokeAsync<TValue>(string identifier, TimeSpan timeout, object? [] arguments) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(string identifier, CancellationToken cancellationToken, object? [] arguments) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(string identifier, object? [] arguments) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) Declaration ValueTask InvokeVoidAsync(string identifier, TimeSpan timeout, object? [] arguments) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[])"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSObjectReferenceFacadeExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.IJSObjectReferenceFacadeExtensions.html",
    "title": "Class IJSObjectReferenceFacadeExtensions | Documentations",
    "keywords": "Class IJSObjectReferenceFacadeExtensions Inheritance System.Object IJSObjectReferenceFacadeExtensions Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSObjectReferenceFacadeExtensions : object Methods | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) Declaration public static ValueTask<TValue> InvokeAsync<TValue>(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, CancellationToken cancellationToken, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReferenceFacade, String, Nullable<Object>[]) Declaration public static ValueTask<TValue> InvokeAsync<TValue>(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) Declaration public static ValueTask<TValue> InvokeAsync<TValue>(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, TimeSpan timeout, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) Declaration public static ValueTask InvokeVoidAsync(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, CancellationToken cancellationToken, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReferenceFacade, String, Nullable<Object>[]) Declaration public static ValueTask InvokeVoidAsync(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) Declaration public static ValueTask InvokeVoidAsync(this IJSObjectReferenceFacade jsObjectReferenceFacade, string identifier, TimeSpan timeout, params object? [] arguments) Parameters Type Name Description IJSObjectReferenceFacade jsObjectReferenceFacade System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.InstanceActivatedDelegate-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.InstanceActivatedDelegate-1.html",
    "title": "Delegate InstanceActivatedDelegate<T> | Documentations",
    "keywords": "Delegate InstanceActivatedDelegate<T> Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public delegate void InstanceActivatedDelegate<in T>(T activatedInstance) where T : IAsyncDisposable; Parameters Type Name Description T activatedInstance Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Interception | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Interception Classes JSCallingBackFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> JSFunctionalObjectInterceptor JSFunctionalObjectInterceptorDescriptor JSFunctionalObjectInterceptorWalker JSFunctionalObjectInterceptorWalkerBuilder JSFunctionalObjectInterceptorWalkerBuilderExtensions JSFunctionalObjectInvocation JSFunctionalObjectInvocation<TValue> JSFunctionalObjectInvocationBase<ReturnType> JSInterceptableFunctionalObject Interfaces IJSFunctionalObjectInterceptor IJSFunctionalObjectInterceptorWalkerBuilder IJSFunctionalObjectInvocation IJSFunctionalObjectInvocation<TValue> IJSFunctionalObjectInvocationBase IJSFunctionalObjectInvocationBase<ReturnType>"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInterceptor.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInterceptor.html",
    "title": "Interface IJSFunctionalObjectInterceptor | Documentations",
    "keywords": "Interface IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInterceptor Methods | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInterceptorWalkerBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInterceptorWalkerBuilder.html",
    "title": "Interface IJSFunctionalObjectInterceptorWalkerBuilder | Documentations",
    "keywords": "Interface IJSFunctionalObjectInterceptorWalkerBuilder Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInterceptorWalkerBuilder Properties | Improve this Doc View Source InterceptorDescriptors Declaration IReadOnlyList<JSFunctionalObjectInterceptorDescriptor> InterceptorDescriptors { get; } Property Value Type Description IReadOnlyList < JSFunctionalObjectInterceptorDescriptor > Methods | Improve this Doc View Source AddInterceptor(IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder AddInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source AddInterceptor(Type) Declaration IJSFunctionalObjectInterceptorWalkerBuilder AddInterceptor(Type interceptorType) Parameters Type Name Description Type interceptorType Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source InsertInterceptor(Int32, IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder InsertInterceptor(int index, IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description System.Int32 index IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source InsertInterceptor(Int32, Type) Declaration IJSFunctionalObjectInterceptorWalkerBuilder InsertInterceptor(int index, Type interceptorType) Parameters Type Name Description System.Int32 index Type interceptorType Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source RemoveInterceptor(IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder RemoveInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source RemoveInterceptor(Type) Declaration IJSFunctionalObjectInterceptorWalkerBuilder RemoveInterceptor(Type interceptorType) Parameters Type Name Description Type interceptorType Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation.html",
    "title": "Interface IJSFunctionalObjectInvocation | Documentations",
    "keywords": "Interface IJSFunctionalObjectInvocation Inherited Members IJSFunctionalObjectInvocationBase<ValueTask>.GetResult() IJSFunctionalObjectInvocationBase<ValueTask>.SetAlternativeResult(ValueTask) IJSFunctionalObjectInvocationBase.IsInterceptionStopped IJSFunctionalObjectInvocationBase.Arguments IJSFunctionalObjectInvocationBase.CancellationToken IJSFunctionalObjectInvocationBase.Identifier IJSFunctionalObjectInvocationBase.HasAlternativeResult IJSFunctionalObjectInvocationBase.HasAlternativeJSObjectReference IJSFunctionalObjectInvocationBase.JSObjectReferenceResulting IJSFunctionalObjectInvocationBase.JSObjectReferencePassed IJSFunctionalObjectInvocationBase.StopInterception() Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInvocation : IJSFunctionalObjectInvocationBase<ValueTask>, IJSFunctionalObjectInvocationBase Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation-1.html",
    "title": "Interface IJSFunctionalObjectInvocation<TValue> | Documentations",
    "keywords": "Interface IJSFunctionalObjectInvocation<TValue> Inherited Members IJSFunctionalObjectInvocationBase<ValueTask<TValue>>.GetResult() IJSFunctionalObjectInvocationBase<ValueTask<TValue>>.SetAlternativeResult(ValueTask<TValue>) IJSFunctionalObjectInvocationBase.IsInterceptionStopped IJSFunctionalObjectInvocationBase.Arguments IJSFunctionalObjectInvocationBase.CancellationToken IJSFunctionalObjectInvocationBase.Identifier IJSFunctionalObjectInvocationBase.HasAlternativeResult IJSFunctionalObjectInvocationBase.HasAlternativeJSObjectReference IJSFunctionalObjectInvocationBase.JSObjectReferenceResulting IJSFunctionalObjectInvocationBase.JSObjectReferencePassed IJSFunctionalObjectInvocationBase.StopInterception() Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInvocation<TValue> : IJSFunctionalObjectInvocationBase<ValueTask<TValue>>, IJSFunctionalObjectInvocationBase Type Parameters Name Description TValue Properties | Improve this Doc View Source GenericTaskArgumentType Declaration Type GenericTaskArgumentType { get; } Property Value Type Description Type Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocationBase.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocationBase.html",
    "title": "Interface IJSFunctionalObjectInvocationBase | Documentations",
    "keywords": "Interface IJSFunctionalObjectInvocationBase Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInvocationBase Properties | Improve this Doc View Source Arguments Declaration object? [] Arguments { get; } Property Value Type Description System.Nullable < System.Object >[] | Improve this Doc View Source CancellationToken Declaration CancellationToken? CancellationToken { get; } Property Value Type Description System.Nullable < CancellationToken > | Improve this Doc View Source HasAlternativeJSObjectReference Declaration bool HasAlternativeJSObjectReference { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasAlternativeResult Declaration bool HasAlternativeResult { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Identifier Declaration string Identifier { get; } Property Value Type Description System.String | Improve this Doc View Source IsInterceptionStopped Declaration bool IsInterceptionStopped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source JSObjectReferencePassed Declaration IJSObjectReference JSObjectReferencePassed { get; } Property Value Type Description IJSObjectReference | Improve this Doc View Source JSObjectReferenceResulting Declaration IJSObjectReference JSObjectReferenceResulting { get; set; } Property Value Type Description IJSObjectReference Methods | Improve this Doc View Source StopInterception() Declaration void StopInterception() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocationBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocationBase-1.html",
    "title": "Interface IJSFunctionalObjectInvocationBase<ReturnType> | Documentations",
    "keywords": "Interface IJSFunctionalObjectInvocationBase<ReturnType> Inherited Members IJSFunctionalObjectInvocationBase.IsInterceptionStopped IJSFunctionalObjectInvocationBase.Arguments IJSFunctionalObjectInvocationBase.CancellationToken IJSFunctionalObjectInvocationBase.Identifier IJSFunctionalObjectInvocationBase.HasAlternativeResult IJSFunctionalObjectInvocationBase.HasAlternativeJSObjectReference IJSFunctionalObjectInvocationBase.JSObjectReferenceResulting IJSFunctionalObjectInvocationBase.JSObjectReferencePassed IJSFunctionalObjectInvocationBase.StopInterception() Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSFunctionalObjectInvocationBase<ReturnType> : IJSFunctionalObjectInvocationBase where ReturnType : struct Type Parameters Name Description ReturnType Methods | Improve this Doc View Source GetResult() Declaration ReturnType GetResult() Returns Type Description ReturnType | Improve this Doc View Source SetAlternativeResult(ReturnType) Declaration void SetAlternativeResult(ReturnType value) Parameters Type Name Description ReturnType value Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSCallingBackFunctionalObjectInterceptor.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSCallingBackFunctionalObjectInterceptor.html",
    "title": "Class JSCallingBackFunctionalObjectInterceptor | Documentations",
    "keywords": "Class JSCallingBackFunctionalObjectInterceptor Inheritance System.Object JSFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> Implements IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSCallingBackFunctionalObjectInterceptor : JSFunctionalObjectInterceptor, IJSFunctionalObjectInterceptor Constructors | Improve this Doc View Source JSCallingBackFunctionalObjectInterceptor(Nullable<Func<IJSFunctionalObjectInvocation, ValueTask>>) Declaration public JSCallingBackFunctionalObjectInterceptor(Func<IJSFunctionalObjectInvocation, ValueTask>? invokeVoidInvocationCallback) Parameters Type Name Description System.Nullable < Func < IJSFunctionalObjectInvocation , ValueTask >> invokeVoidInvocationCallback Methods | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration public override ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue Overrides Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptor.InterceptInvokeAsync<TValue>(Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation<TValue>) | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration public override ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask Overrides JSFunctionalObjectInterceptor.InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Implements IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSCallingBackFunctionalObjectInterceptor-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSCallingBackFunctionalObjectInterceptor-1.html",
    "title": "Class JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> | Documentations",
    "keywords": "Class JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> Inheritance System.Object JSFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> Implements IJSFunctionalObjectInterceptor Inherited Members JSCallingBackFunctionalObjectInterceptor.InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) JSCallingBackFunctionalObjectInterceptor.InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSCallingBackFunctionalObjectInterceptor<ValueTaskArgumentType> : JSCallingBackFunctionalObjectInterceptor, IJSFunctionalObjectInterceptor Type Parameters Name Description ValueTaskArgumentType Constructors | Improve this Doc View Source JSCallingBackFunctionalObjectInterceptor(Nullable<Func<IJSFunctionalObjectInvocation<ValueTaskArgumentType>, ValueTask>>) Declaration public JSCallingBackFunctionalObjectInterceptor(Func<IJSFunctionalObjectInvocation<ValueTaskArgumentType>, ValueTask>? invokeInvocationCallback) Parameters Type Name Description System.Nullable < Func < IJSFunctionalObjectInvocation <ValueTaskArgumentType>, ValueTask >> invokeInvocationCallback | Improve this Doc View Source JSCallingBackFunctionalObjectInterceptor(Nullable<Func<IJSFunctionalObjectInvocation<ValueTaskArgumentType>, ValueTask>>, Nullable<Func<IJSFunctionalObjectInvocation, ValueTask>>) Declaration public JSCallingBackFunctionalObjectInterceptor(Func<IJSFunctionalObjectInvocation<ValueTaskArgumentType>, ValueTask>? invokeInvocationCallback, Func<IJSFunctionalObjectInvocation, ValueTask>? invokeVoidInvocationCallback) Parameters Type Name Description System.Nullable < Func < IJSFunctionalObjectInvocation <ValueTaskArgumentType>, ValueTask >> invokeInvocationCallback System.Nullable < Func < IJSFunctionalObjectInvocation , ValueTask >> invokeVoidInvocationCallback Methods | Improve this Doc View Source InterceptInvokeAsync<RuntimeValueTaskArgumentType>(IJSFunctionalObjectInvocation<RuntimeValueTaskArgumentType>) Declaration public override ValueTask InterceptInvokeAsync<RuntimeValueTaskArgumentType>(IJSFunctionalObjectInvocation<RuntimeValueTaskArgumentType> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <RuntimeValueTaskArgumentType> invocation Returns Type Description ValueTask Type Parameters Name Description RuntimeValueTaskArgumentType Overrides Teronis.Microsoft.JSInterop.Interception.JSCallingBackFunctionalObjectInterceptor.InterceptInvokeAsync<TValue>(Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation<TValue>) Implements IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptor.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptor.html",
    "title": "Class JSFunctionalObjectInterceptor | Documentations",
    "keywords": "Class JSFunctionalObjectInterceptor Inheritance System.Object JSFunctionalObjectInterceptor JSCallingBackFunctionalObjectInterceptor Implements IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public abstract class JSFunctionalObjectInterceptor : object, IJSFunctionalObjectInterceptor Methods | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration public abstract ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration public abstract ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask Implements IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorDescriptor.html",
    "title": "Class JSFunctionalObjectInterceptorDescriptor | Documentations",
    "keywords": "Class JSFunctionalObjectInterceptorDescriptor Inheritance System.Object JSFunctionalObjectInterceptorDescriptor Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSFunctionalObjectInterceptorDescriptor : IEquatable<JSFunctionalObjectInterceptorDescriptor> Properties | Improve this Doc View Source HasImplementation Declaration public bool HasImplementation { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Implementation Declaration public IJSFunctionalObjectInterceptor Implementation { get; } Property Value Type Description IJSFunctionalObjectInterceptor | Improve this Doc View Source ImplementationType Declaration public Type ImplementationType { get; } Property Value Type Description Type Methods | Improve this Doc View Source Equals(JSFunctionalObjectInterceptorDescriptor) Declaration public bool Equals(JSFunctionalObjectInterceptorDescriptor other) Parameters Type Name Description JSFunctionalObjectInterceptorDescriptor other Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalker.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalker.html",
    "title": "Class JSFunctionalObjectInterceptorWalker | Documentations",
    "keywords": "Class JSFunctionalObjectInterceptorWalker Inheritance System.Object JSFunctionalObjectInterceptorWalker Implements IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class JSFunctionalObjectInterceptorWalker : object, IJSFunctionalObjectInterceptor Constructors | Improve this Doc View Source JSFunctionalObjectInterceptorWalker(IReadOnlyList<IJSFunctionalObjectInterceptor>) Declaration public JSFunctionalObjectInterceptorWalker(IReadOnlyList<IJSFunctionalObjectInterceptor> interceptors) Parameters Type Name Description IReadOnlyList < IJSFunctionalObjectInterceptor > interceptors Methods | Improve this Doc View Source WalkThroughInterceptorsAsync(IJSFunctionalObjectInvocation) Declaration public ValueTask WalkThroughInterceptorsAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask | Improve this Doc View Source WalkThroughInterceptorsAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration public ValueTask WalkThroughInterceptorsAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue Implements IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalkerBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalkerBuilder.html",
    "title": "Class JSFunctionalObjectInterceptorWalkerBuilder | Documentations",
    "keywords": "Class JSFunctionalObjectInterceptorWalkerBuilder Inheritance System.Object JSFunctionalObjectInterceptorWalkerBuilder Implements IJSFunctionalObjectInterceptorWalkerBuilder Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public sealed class JSFunctionalObjectInterceptorWalkerBuilder : object, IJSFunctionalObjectInterceptorWalkerBuilder Constructors | Improve this Doc View Source JSFunctionalObjectInterceptorWalkerBuilder() Declaration public JSFunctionalObjectInterceptorWalkerBuilder() Properties | Improve this Doc View Source InterceptorDescriptors Declaration public IReadOnlyList<JSFunctionalObjectInterceptorDescriptor> InterceptorDescriptors { get; } Property Value Type Description IReadOnlyList < JSFunctionalObjectInterceptorDescriptor > Methods | Improve this Doc View Source AddInterceptor(IJSFunctionalObjectInterceptor) Declaration public JSFunctionalObjectInterceptorWalkerBuilder AddInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source AddInterceptor(Type) Declaration public JSFunctionalObjectInterceptorWalkerBuilder AddInterceptor(Type interceptorType) Parameters Type Name Description Type interceptorType Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source BuildInterceptorWalker() Builds an interceptor walker but skips those interceptor descriptors who have no implementation. Declaration public JSFunctionalObjectInterceptorWalker BuildInterceptorWalker() Returns Type Description JSFunctionalObjectInterceptorWalker | Improve this Doc View Source BuildInterceptorWalker(IServiceProvider) Declaration public JSFunctionalObjectInterceptorWalker BuildInterceptorWalker(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description JSFunctionalObjectInterceptorWalker | Improve this Doc View Source InsertInterceptor(Int32, IJSFunctionalObjectInterceptor) Declaration public JSFunctionalObjectInterceptorWalkerBuilder InsertInterceptor(int index, IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description System.Int32 index IJSFunctionalObjectInterceptor interceptor Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source InsertInterceptor(Int32, Type) Declaration public JSFunctionalObjectInterceptorWalkerBuilder InsertInterceptor(int index, Type interceptorType) Parameters Type Name Description System.Int32 index Type interceptorType Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source RemoveInterceptor(IJSFunctionalObjectInterceptor) Declaration public JSFunctionalObjectInterceptorWalkerBuilder RemoveInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source RemoveInterceptor(Type) Declaration public JSFunctionalObjectInterceptorWalkerBuilder RemoveInterceptor(Type interceptorType) Parameters Type Name Description Type interceptorType Returns Type Description JSFunctionalObjectInterceptorWalkerBuilder Explicit Interface Implementations | Improve this Doc View Source IJSFunctionalObjectInterceptorWalkerBuilder.AddInterceptor(IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder IJSFunctionalObjectInterceptorWalkerBuilder.AddInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source IJSFunctionalObjectInterceptorWalkerBuilder.InsertInterceptor(Int32, IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder IJSFunctionalObjectInterceptorWalkerBuilder.InsertInterceptor(int index, IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description System.Int32 index IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source IJSFunctionalObjectInterceptorWalkerBuilder.RemoveInterceptor(IJSFunctionalObjectInterceptor) Declaration IJSFunctionalObjectInterceptorWalkerBuilder IJSFunctionalObjectInterceptorWalkerBuilder.RemoveInterceptor(IJSFunctionalObjectInterceptor interceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor interceptor Returns Type Description IJSFunctionalObjectInterceptorWalkerBuilder Implements IJSFunctionalObjectInterceptorWalkerBuilder Extension Methods JSFunctionalObjectInterceptorWalkerBuilderExtensions.BuildInterceptableFunctionalObject(JSFunctionalObjectInterceptorWalkerBuilder) JSFunctionalObjectInterceptorWalkerBuilderExtensions.BuildInterceptableFunctionalObject(JSFunctionalObjectInterceptorWalkerBuilder, IServiceProvider) ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalkerBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInterceptorWalkerBuilderExtensions.html",
    "title": "Class JSFunctionalObjectInterceptorWalkerBuilderExtensions | Documentations",
    "keywords": "Class JSFunctionalObjectInterceptorWalkerBuilderExtensions Inheritance System.Object JSFunctionalObjectInterceptorWalkerBuilderExtensions Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public static class JSFunctionalObjectInterceptorWalkerBuilderExtensions : object Methods | Improve this Doc View Source BuildInterceptableFunctionalObject(JSFunctionalObjectInterceptorWalkerBuilder) Builds an interceptable functional object but skips those interceptor descriptors who have no implementation. Declaration public static JSInterceptableFunctionalObject BuildInterceptableFunctionalObject(this JSFunctionalObjectInterceptorWalkerBuilder interceptorWalkerBuilder) Parameters Type Name Description JSFunctionalObjectInterceptorWalkerBuilder interceptorWalkerBuilder Returns Type Description JSInterceptableFunctionalObject | Improve this Doc View Source BuildInterceptableFunctionalObject(JSFunctionalObjectInterceptorWalkerBuilder, IServiceProvider) Declaration public static JSInterceptableFunctionalObject BuildInterceptableFunctionalObject(this JSFunctionalObjectInterceptorWalkerBuilder interceptorWalkerBuilder, IServiceProvider serviceProvider) Parameters Type Name Description JSFunctionalObjectInterceptorWalkerBuilder interceptorWalkerBuilder IServiceProvider serviceProvider Returns Type Description JSInterceptableFunctionalObject"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocation.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocation.html",
    "title": "Class JSFunctionalObjectInvocation | Documentations",
    "keywords": "Class JSFunctionalObjectInvocation Inheritance System.Object JSFunctionalObjectInvocationBase < ValueTask > JSFunctionalObjectInvocation Implements IJSFunctionalObjectInvocation IJSFunctionalObjectInvocationBase < ValueTask > IJSFunctionalObjectInvocationBase Inherited Members JSFunctionalObjectInvocationBase<ValueTask>.IsInterceptionStopped JSFunctionalObjectInvocationBase<ValueTask>.HasAlternativeResult JSFunctionalObjectInvocationBase<ValueTask>.HasAlternativeJSObjectReference JSFunctionalObjectInvocationBase<ValueTask>.JSObjectReferenceResulting JSFunctionalObjectInvocationBase<ValueTask>.JSObjectReferencePassed JSFunctionalObjectInvocationBase<ValueTask>.Identifier JSFunctionalObjectInvocationBase<ValueTask>.CancellationToken JSFunctionalObjectInvocationBase<ValueTask>.Timeout JSFunctionalObjectInvocationBase<ValueTask>.Arguments JSFunctionalObjectInvocationBase<ValueTask>.GenericTaskArgumentType JSFunctionalObjectInvocationBase<ValueTask>.SetAlternativeResult(ValueTask) JSFunctionalObjectInvocationBase<ValueTask>.StopInterception() Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSFunctionalObjectInvocation : JSFunctionalObjectInvocationBase<ValueTask>, IJSFunctionalObjectInvocation, IJSFunctionalObjectInvocationBase<ValueTask>, IJSFunctionalObjectInvocationBase Methods | Improve this Doc View Source GetResult() Declaration public override ValueTask GetResult() Returns Type Description ValueTask Overrides Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocationBase<ValueTask>.GetResult() Implements IJSFunctionalObjectInvocation IJSFunctionalObjectInvocationBase<ReturnType> IJSFunctionalObjectInvocationBase Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocation-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocation-1.html",
    "title": "Class JSFunctionalObjectInvocation<TValue> | Documentations",
    "keywords": "Class JSFunctionalObjectInvocation<TValue> Inheritance System.Object JSFunctionalObjectInvocationBase < ValueTask <TValue>> JSFunctionalObjectInvocation<TValue> Implements IJSFunctionalObjectInvocation <TValue> IJSFunctionalObjectInvocationBase < ValueTask <TValue>> IJSFunctionalObjectInvocationBase Inherited Members JSFunctionalObjectInvocationBase<ValueTask<TValue>>.IsInterceptionStopped JSFunctionalObjectInvocationBase<ValueTask<TValue>>.HasAlternativeResult JSFunctionalObjectInvocationBase<ValueTask<TValue>>.HasAlternativeJSObjectReference JSFunctionalObjectInvocationBase<ValueTask<TValue>>.JSObjectReferenceResulting JSFunctionalObjectInvocationBase<ValueTask<TValue>>.JSObjectReferencePassed JSFunctionalObjectInvocationBase<ValueTask<TValue>>.Identifier JSFunctionalObjectInvocationBase<ValueTask<TValue>>.CancellationToken JSFunctionalObjectInvocationBase<ValueTask<TValue>>.Timeout JSFunctionalObjectInvocationBase<ValueTask<TValue>>.Arguments JSFunctionalObjectInvocationBase<ValueTask<TValue>>.SetAlternativeResult(ValueTask<TValue>) JSFunctionalObjectInvocationBase<ValueTask<TValue>>.StopInterception() Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSFunctionalObjectInvocation<TValue> : JSFunctionalObjectInvocationBase<ValueTask<TValue>>, IJSFunctionalObjectInvocation<TValue>, IJSFunctionalObjectInvocationBase<ValueTask<TValue>>, IJSFunctionalObjectInvocationBase Type Parameters Name Description TValue Properties | Improve this Doc View Source GenericTaskArgumentType Declaration public override Type GenericTaskArgumentType { get; } Property Value Type Description Type Overrides Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocationBase<ValueTask<TValue>>.GenericTaskArgumentType Methods | Improve this Doc View Source GetResult() If promise does not exist the promise will be the result of one of the extension methods of depending on and . The result will be cached. Declaration public override ValueTask<TValue> GetResult() Returns Type Description ValueTask <TValue> The promise. Overrides Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocationBase<ValueTask<TValue>>.GetResult() Implements IJSFunctionalObjectInvocation<TValue> IJSFunctionalObjectInvocationBase<ReturnType> IJSFunctionalObjectInvocationBase Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocationBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSFunctionalObjectInvocationBase-1.html",
    "title": "Class JSFunctionalObjectInvocationBase<ReturnType> | Documentations",
    "keywords": "Class JSFunctionalObjectInvocationBase<ReturnType> Inheritance System.Object JSFunctionalObjectInvocationBase<ReturnType> JSFunctionalObjectInvocation JSFunctionalObjectInvocation<TValue> Implements IJSFunctionalObjectInvocationBase <ReturnType> IJSFunctionalObjectInvocationBase Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public abstract class JSFunctionalObjectInvocationBase<ReturnType> : object, IJSFunctionalObjectInvocationBase<ReturnType>, IJSFunctionalObjectInvocationBase where ReturnType : struct Type Parameters Name Description ReturnType Properties | Improve this Doc View Source Arguments Declaration public object? [] Arguments { get; } Property Value Type Description System.Nullable < System.Object >[] | Improve this Doc View Source CancellationToken Declaration public CancellationToken? CancellationToken { get; } Property Value Type Description System.Nullable < CancellationToken > | Improve this Doc View Source GenericTaskArgumentType Declaration public virtual Type? GenericTaskArgumentType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source HasAlternativeJSObjectReference Declaration public bool HasAlternativeJSObjectReference { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasAlternativeResult Indicates whether the value task is set and can be awaited. Declaration public bool HasAlternativeResult { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Identifier Declaration public string Identifier { get; } Property Value Type Description System.String | Improve this Doc View Source IsInterceptionStopped Declaration public bool IsInterceptionStopped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source JSObjectReferencePassed The JavaScript object reference that got initially passed. Declaration public IJSObjectReference JSObjectReferencePassed { get; } Property Value Type Description IJSObjectReference | Improve this Doc View Source JSObjectReferenceResulting The alternative JavaSript object reference or the original JavaScript object reference if alternative JavaSript object reference is null. Declaration public IJSObjectReference JSObjectReferenceResulting { get; set; } Property Value Type Description IJSObjectReference | Improve this Doc View Source Timeout Declaration public TimeSpan? Timeout { get; } Property Value Type Description System.Nullable < TimeSpan > Methods | Improve this Doc View Source GetResult() Declaration public abstract ReturnType GetResult() Returns Type Description ReturnType | Improve this Doc View Source SetAlternativeResult(ReturnType) Declaration public void SetAlternativeResult(ReturnType value) Parameters Type Name Description ReturnType value | Improve this Doc View Source StopInterception() Declaration public void StopInterception() Implements IJSFunctionalObjectInvocationBase<ReturnType> IJSFunctionalObjectInvocationBase Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSInterceptableFunctionalObject.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Interception.JSInterceptableFunctionalObject.html",
    "title": "Class JSInterceptableFunctionalObject | Documentations",
    "keywords": "Class JSInterceptableFunctionalObject Inheritance System.Object JSFunctionalObject JSInterceptableFunctionalObject Implements IJSFunctionalObject IJSFunctionalObjectInterceptor Inherited Members JSFunctionalObject.Default JSFunctionalObject.GetDefault() JSFunctionalObject.InvokeAsync<TValue>(IJSObjectReference, String, Nullable<Object>[]) JSFunctionalObject.InvokeAsync<TValue>(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) JSFunctionalObject.InvokeAsync<TValue>(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) JSFunctionalObject.InvokeVoidAsync(IJSObjectReference, String, Nullable<Object>[]) JSFunctionalObject.InvokeVoidAsync(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) JSFunctionalObject.InvokeVoidAsync(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) Namespace : Teronis.Microsoft.JSInterop.Interception Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSInterceptableFunctionalObject : JSFunctionalObject, IJSFunctionalObject, IJSFunctionalObjectInterceptor Constructors | Improve this Doc View Source JSInterceptableFunctionalObject(IJSFunctionalObjectInterceptor) Declaration public JSInterceptableFunctionalObject(IJSFunctionalObjectInterceptor jsFunctionalObjectInterceptor) Parameters Type Name Description IJSFunctionalObjectInterceptor jsFunctionalObjectInterceptor Methods | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration protected override ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue Overrides Teronis.Microsoft.JSInterop.JSFunctionalObject.InterceptInvokeAsync<TValue>(Teronis.Microsoft.JSInterop.Interception.IJSFunctionalObjectInvocation<TValue>) | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration protected override ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask Overrides JSFunctionalObject.InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Implements IJSFunctionalObject IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Internals.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Internals.Utils.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Internals.Utils | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Internals.Utils Classes TypeUtils Internals."
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Internals.Utils.TypeUtils.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Internals.Utils.TypeUtils.html",
    "title": "Class TypeUtils | Documentations",
    "keywords": "Class TypeUtils Internals. Inheritance System.Object TypeUtils Namespace : Teronis.Microsoft.JSInterop.Internals.Utils Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public static class TypeUtils : object Methods | Improve this Doc View Source EnsureInterfaceTypeIsAssignaleTo<TAssignableTo>(Type) Ensures that interfaceType is assignable to TAssignableTo , otherwise an excpetion is thrown. Declaration public static void EnsureInterfaceTypeIsAssignaleTo<TAssignableTo>(Type interfaceType) Parameters Type Name Description Type interfaceType Type Parameters Name Description TAssignableTo | Improve this Doc View Source GetInterfaces(Type[]) Gets all the interfaces implemented or inherited. Declaration public static HashSet<Type> GetInterfaces(params Type[] types) Parameters Type Name Description Type [] types Returns Type Description HashSet < Type > | Improve this Doc View Source SortByName(Type[]) Declaration public static void SortByName(Type[] array) Parameters Type Name Description Type [] array"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObject.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObject.html",
    "title": "Class JSFunctionalObject | Documentations",
    "keywords": "Class JSFunctionalObject Inheritance System.Object JSFunctionalObject JSInterceptableFunctionalObject Implements IJSFunctionalObject IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFunctionalObject : object, IJSFunctionalObject, IJSFunctionalObjectInterceptor Fields | Improve this Doc View Source Default Declaration public static JSFunctionalObject Default Field Value Type Description JSFunctionalObject Methods | Improve this Doc View Source GetDefault() It simply returns Default . Internally used as right operand in null-coercion expressions. Declaration public static JSFunctionalObject GetDefault() Returns Type Description JSFunctionalObject Default | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration protected virtual ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> jsObjectReference) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> jsObjectReference Returns Type Description ValueTask Type Parameters Name Description TValue | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration protected virtual ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, CancellationToken, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, CancellationToken cancellationToken, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier System.Nullable < System.Object >[] arguments Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(IJSObjectReference, String, TimeSpan, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(IJSObjectReference jsObjectReference, string identifier, TimeSpan timeout, params object? [] arguments) Parameters Type Name Description IJSObjectReference jsObjectReference System.String identifier TimeSpan timeout System.Nullable < System.Object >[] arguments Returns Type Description ValueTask Implements IJSFunctionalObject IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObjectOptions-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObjectOptions-1.html",
    "title": "Class JSFunctionalObjectOptions<DerivedType> | Documentations",
    "keywords": "Class JSFunctionalObjectOptions<DerivedType> Inheritance System.Object JSFunctionalObjectOptions<DerivedType> JSDynamicProxyActivatorOptions JSLocalObjectActivatorOptions JSModuleActivatorOptions Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFunctionalObjectOptions<DerivedType> : object where DerivedType : JSFunctionalObjectOptions<DerivedType> Type Parameters Name Description DerivedType Constructors | Improve this Doc View Source JSFunctionalObjectOptions() Declaration public JSFunctionalObjectOptions() Properties | Improve this Doc View Source GetOrBuildJSFunctionalObject Declaration public GetOrBuildJSFunctionalObjectDelegate GetOrBuildJSFunctionalObject { get; } Property Value Type Description GetOrBuildJSFunctionalObjectDelegate | Improve this Doc View Source InterceptorWalkerBuilder Declaration protected JSFunctionalObjectInterceptorWalkerBuilder InterceptorWalkerBuilder { get; } Property Value Type Description JSFunctionalObjectInterceptorWalkerBuilder | Improve this Doc View Source JSFunctionalObject This instance will be used if it is not null. If it is not null the configuration made by ConfigureInterceptorWalkerBuilder(Action<IJSFunctionalObjectInterceptorWalkerBuilder>) won't be taken into account. Declaration public IJSFunctionalObject JSFunctionalObject { get; set; } Property Value Type Description IJSFunctionalObject Methods | Improve this Doc View Source ConfigureInterceptorWalkerBuilder(Action<IJSFunctionalObjectInterceptorWalkerBuilder>) Configures an implementation of IJSFunctionalObjectInterceptorWalkerBuilder to create an implementation of IJSFunctionalObject for being used as JSFunctionalObject when it is null. Declaration public DerivedType ConfigureInterceptorWalkerBuilder(Action<IJSFunctionalObjectInterceptorWalkerBuilder> configure) Parameters Type Name Description Action < IJSFunctionalObjectInterceptorWalkerBuilder > configure Returns Type Description DerivedType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObjectOptionsConfiguration-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSFunctionalObjectOptionsConfiguration-1.html",
    "title": "Class JSFunctionalObjectOptionsConfiguration<DerivedType> | Documentations",
    "keywords": "Class JSFunctionalObjectOptionsConfiguration<DerivedType> Inheritance System.Object JSFunctionalObjectOptionsConfiguration<DerivedType> Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSFunctionalObjectOptionsConfiguration<DerivedType> : IConfigureOptions<JSFunctionalObjectOptions<DerivedType>> where DerivedType : JSFunctionalObjectOptions<DerivedType> Type Parameters Name Description DerivedType Constructors | Improve this Doc View Source JSFunctionalObjectOptionsConfiguration(IServiceProvider) Declaration public JSFunctionalObjectOptionsConfiguration(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source Configure(JSFunctionalObjectOptions<DerivedType>) Declaration public void Configure(JSFunctionalObjectOptions<DerivedType> options) Parameters Type Name Description JSFunctionalObjectOptions <DerivedType> options | Improve this Doc View Source Create(IServiceProvider) Declaration public static JSFunctionalObjectOptionsConfiguration<DerivedType> Create(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description JSFunctionalObjectOptionsConfiguration <DerivedType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSObjectReferenceFacade.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.JSObjectReferenceFacade.html",
    "title": "Class JSObjectReferenceFacade | Documentations",
    "keywords": "Class JSObjectReferenceFacade Inheritance System.Object JSObjectReferenceFacade JSDynamicProxy Implements IJSObjectReferenceFacade IAsyncDisposable Namespace : Teronis.Microsoft.JSInterop Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSObjectReferenceFacade : object, IJSObjectReferenceFacade, IAsyncDisposable Constructors | Improve this Doc View Source JSObjectReferenceFacade(IJSObjectReference) Declaration public JSObjectReferenceFacade(IJSObjectReference jsObjectReference) Parameters Type Name Description IJSObjectReference jsObjectReference | Improve this Doc View Source JSObjectReferenceFacade(IJSObjectReference, IJSFunctionalObject) Declaration public JSObjectReferenceFacade(IJSObjectReference jsObjectReference, IJSFunctionalObject jsFunctionalObject) Parameters Type Name Description IJSObjectReference jsObjectReference IJSFunctionalObject jsFunctionalObject Properties | Improve this Doc View Source JSFunctionalObject Declaration protected virtual IJSFunctionalObject JSFunctionalObject { get; } Property Value Type Description IJSFunctionalObject | Improve this Doc View Source JSObjectReference Declaration public IJSObjectReference JSObjectReference { get; } Property Value Type Description IJSObjectReference Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(string identifier, CancellationToken cancellationToken, params object? [] args) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(string identifier, params object? [] args) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) Declaration public virtual ValueTask<TValue> InvokeAsync<TValue>(string identifier, TimeSpan timeout, params object? [] args) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(string identifier, CancellationToken cancellationToken, params object? [] args) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(string identifier, params object? [] args) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) Declaration public virtual ValueTask InvokeVoidAsync(string identifier, TimeSpan timeout, params object? [] args) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask Implements IJSObjectReferenceFacade IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Locality | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Locality Classes IJSLocalObjectActivatorExtensions IServiceCollectionExtensions JSLocalObject JSLocalObjectActivator JSLocalObjectActivatorOptions Interfaces IJSLocalObject IJSLocalObjectActivator IJSLocalObjectInterop"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObject.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObject.html",
    "title": "Interface IJSLocalObject | Documentations",
    "keywords": "Interface IJSLocalObject Inherited Members IJSObjectReferenceFacade.JSObjectReference IJSObjectReferenceFacade.InvokeAsync<TValue>(String, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSLocalObject : IJSObjectReferenceFacade, IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[])"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectActivator.html",
    "title": "Interface IJSLocalObjectActivator | Documentations",
    "keywords": "Interface IJSLocalObjectActivator Inherited Members IInstanceActivator<IJSLocalObject>.InstanceActivated Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSLocalObjectActivator : IInstanceActivator<IJSLocalObject> Methods | Improve this Doc View Source CreateInstance(IJSObjectReference) Declaration IJSLocalObject CreateInstance(IJSObjectReference jsObjectReference) Parameters Type Name Description IJSObjectReference jsObjectReference Returns Type Description IJSLocalObject | Improve this Doc View Source CreateInstanceAsync(IJSObjectReference, String) Declaration ValueTask<IJSLocalObject> CreateInstanceAsync(IJSObjectReference jsObjectReference, string objectName) Parameters Type Name Description IJSObjectReference jsObjectReference System.String objectName Returns Type Description ValueTask < IJSLocalObject > | Improve this Doc View Source CreateInstanceAsync(String) Declaration ValueTask<IJSLocalObject> CreateInstanceAsync(string objectName) Parameters Type Name Description System.String objectName Returns Type Description ValueTask < IJSLocalObject > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSLocalObjectActivatorExtensions.CreateInstanceAsync(IJSLocalObjectActivator, IJSLocalObject, String)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectActivatorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectActivatorExtensions.html",
    "title": "Class IJSLocalObjectActivatorExtensions | Documentations",
    "keywords": "Class IJSLocalObjectActivatorExtensions Inheritance System.Object IJSLocalObjectActivatorExtensions Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public static class IJSLocalObjectActivatorExtensions : object Methods | Improve this Doc View Source CreateInstanceAsync(IJSLocalObjectActivator, IJSLocalObject, String) Declaration public static ValueTask<IJSLocalObject> CreateInstanceAsync(this IJSLocalObjectActivator jsLocalObjectActivator, IJSLocalObject jsLocalObject, string objectName) Parameters Type Name Description IJSLocalObjectActivator jsLocalObjectActivator IJSLocalObject jsLocalObject System.String objectName Returns Type Description ValueTask < IJSLocalObject >"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectInterop.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IJSLocalObjectInterop.html",
    "title": "Interface IJSLocalObjectInterop | Documentations",
    "keywords": "Interface IJSLocalObjectInterop Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSLocalObjectInterop Methods | Improve this Doc View Source GetGlobalObjectReference(Nullable<String>) Creates an object reference. If objectName is null or equals \"window\" then an object reference to window gets returned. Declaration ValueTask<IJSObjectReference> GetGlobalObjectReference(string? objectName) Parameters Type Name Description System.Nullable < System.String > objectName The object name. Returns Type Description ValueTask < IJSObjectReference > A JavaScript object reference. | Improve this Doc View Source GetLocalObjectReference(IJSObjectReference, String) Declaration ValueTask<IJSObjectReference> GetLocalObjectReference(IJSObjectReference objectReference, string objectName) Parameters Type Name Description IJSObjectReference objectReference System.String objectName Returns Type Description ValueTask < IJSObjectReference > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors Classes JSLocalObjectActivatingInterceptor"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors.JSLocalObjectActivatingInterceptor.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors.JSLocalObjectActivatingInterceptor.html",
    "title": "Class JSLocalObjectActivatingInterceptor | Documentations",
    "keywords": "Class JSLocalObjectActivatingInterceptor Inheritance System.Object JSLocalObjectActivatingInterceptor Implements IJSFunctionalObjectInterceptor Namespace : Teronis.Microsoft.JSInterop.Locality.Interception.Interceptors Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSLocalObjectActivatingInterceptor : object, IJSFunctionalObjectInterceptor Constructors | Improve this Doc View Source JSLocalObjectActivatingInterceptor(IJSLocalObjectActivator) Declaration public JSLocalObjectActivatingInterceptor(IJSLocalObjectActivator jsLocalObjectActivator) Parameters Type Name Description IJSLocalObjectActivator jsLocalObjectActivator Methods | Improve this Doc View Source InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue>) Declaration public virtual ValueTask InterceptInvokeAsync<TValue>(IJSFunctionalObjectInvocation<TValue> invocation) Parameters Type Name Description IJSFunctionalObjectInvocation <TValue> invocation Returns Type Description ValueTask Type Parameters Name Description TValue | Improve this Doc View Source InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation) Declaration public virtual ValueTask InterceptInvokeVoidAsync(IJSFunctionalObjectInvocation invocation) Parameters Type Name Description IJSFunctionalObjectInvocation invocation Returns Type Description ValueTask Implements IJSFunctionalObjectInterceptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSLocalObject(IServiceCollection) Calls > and AddJSLocalObjectActivator(IServiceCollection, Nullable<Action<JSLocalObjectActivatorOptions>>) . Declaration public static IServiceCollection AddJSLocalObject(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSLocalObjectActivator(IServiceCollection, Nullable<Action<JSLocalObjectActivatorOptions>>) Tries to configure options for JSLocalObjectActivatorOptions and tries to add JSLocalObjectActivatorOptions as singleton. Tries to adds JSLocalObjectActivator as . Declaration public static IServiceCollection AddJSLocalObjectActivator(this IServiceCollection services, Action<JSLocalObjectActivatorOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services System.Nullable < Action < JSLocalObjectActivatorOptions >> configureOptions Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObject.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObject.html",
    "title": "Class JSLocalObject | Documentations",
    "keywords": "Class JSLocalObject Inheritance System.Object JSLocalObject JSModule Implements IJSLocalObject IJSObjectReferenceFacade IAsyncDisposable Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class JSLocalObject : IAsyncDisposable, IJSLocalObject, IJSObjectReferenceFacade, IAsyncDisposable Constructors | Improve this Doc View Source JSLocalObject(IJSFunctionalObject, IJSObjectReference) Declaration public JSLocalObject(IJSFunctionalObject jsFunctionalObject, IJSObjectReference jsObjectReference) Parameters Type Name Description IJSFunctionalObject jsFunctionalObject IJSObjectReference jsObjectReference Properties | Improve this Doc View Source JSObjectReference Declaration public IJSObjectReference JSObjectReference { get; } Property Value Type Description IJSObjectReference Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsyncCore() Declaration protected virtual ValueTask DisposeAsyncCore() Returns Type Description ValueTask | Improve this Doc View Source InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) Declaration public ValueTask<TValue> InvokeAsync<TValue>(string identifier, CancellationToken cancellationToken, object? [] args) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, Nullable<Object>[]) Declaration public ValueTask<TValue> InvokeAsync<TValue>(string identifier, object? [] args) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) Declaration public ValueTask<TValue> InvokeAsync<TValue>(string identifier, TimeSpan timeout, object? [] args) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask <TValue> Type Parameters Name Description TValue | Improve this Doc View Source InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) Declaration public ValueTask InvokeVoidAsync(string identifier, CancellationToken cancellationToken, params object? [] args) Parameters Type Name Description System.String identifier CancellationToken cancellationToken System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, Nullable<Object>[]) Declaration public ValueTask InvokeVoidAsync(string identifier, params object? [] args) Parameters Type Name Description System.String identifier System.Nullable < System.Object >[] args Returns Type Description ValueTask | Improve this Doc View Source InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) Declaration public ValueTask InvokeVoidAsync(string identifier, TimeSpan timeout, params object? [] args) Parameters Type Name Description System.String identifier TimeSpan timeout System.Nullable < System.Object >[] args Returns Type Description ValueTask Implements IJSLocalObject IJSObjectReferenceFacade IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[])"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObjectActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObjectActivator.html",
    "title": "Class JSLocalObjectActivator | Documentations",
    "keywords": "Class JSLocalObjectActivator Inheritance System.Object IInstanceActivatorBase < IJSLocalObject > JSLocalObjectActivator Implements IJSLocalObjectActivator IInstanceActivator < IJSLocalObject > Inherited Members IInstanceActivatorBase<IJSLocalObject>.InstanceActivated IInstanceActivatorBase<IJSLocalObject>.DispatchInstanceActicated(IJSLocalObject) Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSLocalObjectActivator : IInstanceActivatorBase<IJSLocalObject>, IJSLocalObjectActivator, IInstanceActivator<IJSLocalObject> Constructors | Improve this Doc View Source JSLocalObjectActivator(IJSLocalObjectInterop) Declaration public JSLocalObjectActivator(IJSLocalObjectInterop jsLocalObjectInterop) Parameters Type Name Description IJSLocalObjectInterop jsLocalObjectInterop | Improve this Doc View Source JSLocalObjectActivator(IJSLocalObjectInterop, JSLocalObjectActivatorOptions) Declaration public JSLocalObjectActivator(IJSLocalObjectInterop jsLocalObjectInterop, JSLocalObjectActivatorOptions options) Parameters Type Name Description IJSLocalObjectInterop jsLocalObjectInterop JSLocalObjectActivatorOptions options Methods | Improve this Doc View Source CreateInstance(IJSObjectReference) Declaration public virtual IJSLocalObject CreateInstance(IJSObjectReference jsObjectReference) Parameters Type Name Description IJSObjectReference jsObjectReference Returns Type Description IJSLocalObject | Improve this Doc View Source CreateInstanceAsync(IJSObjectReference, String) Declaration public virtual ValueTask<IJSLocalObject> CreateInstanceAsync(IJSObjectReference jsObjectReference, string objectName) Parameters Type Name Description IJSObjectReference jsObjectReference System.String objectName Returns Type Description ValueTask < IJSLocalObject > | Improve this Doc View Source CreateInstanceAsync(String) Declaration public virtual ValueTask<IJSLocalObject> CreateInstanceAsync(string objectName) Parameters Type Name Description System.String objectName Returns Type Description ValueTask < IJSLocalObject > Implements IJSLocalObjectActivator IInstanceActivator<T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObjectActivatorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.JSLocalObjectActivatorOptions.html",
    "title": "Class JSLocalObjectActivatorOptions | Documentations",
    "keywords": "Class JSLocalObjectActivatorOptions Inheritance System.Object JSFunctionalObjectOptions < JSLocalObjectActivatorOptions > JSLocalObjectActivatorOptions Inherited Members JSFunctionalObjectOptions<JSLocalObjectActivatorOptions>.JSFunctionalObject JSFunctionalObjectOptions<JSLocalObjectActivatorOptions>.GetOrBuildJSFunctionalObject JSFunctionalObjectOptions<JSLocalObjectActivatorOptions>.InterceptorWalkerBuilder JSFunctionalObjectOptions<JSLocalObjectActivatorOptions>.ConfigureInterceptorWalkerBuilder(Action<IJSFunctionalObjectInterceptorWalkerBuilder>) Namespace : Teronis.Microsoft.JSInterop.Locality Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSLocalObjectActivatorOptions : JSFunctionalObjectOptions<JSLocalObjectActivatorOptions> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Locality.WebAssets | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Locality.WebAssets Classes IServiceCollectionExtensions JSLocalObjectInterop"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Locality.WebAssets Assembly : Teronis.Microsoft.JSInterop.Locality.WebAssets.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSLocalObjectInterop(IServiceCollection) Tries to add JSLocalObjectInterop as IJSLocalObjectInterop . Declaration public static IServiceCollection AddJSLocalObjectInterop(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.JSLocalObjectInterop.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Locality.WebAssets.JSLocalObjectInterop.html",
    "title": "Class JSLocalObjectInterop | Documentations",
    "keywords": "Class JSLocalObjectInterop Inheritance System.Object JSLocalObjectInterop Implements IJSLocalObjectInterop Namespace : Teronis.Microsoft.JSInterop.Locality.WebAssets Assembly : Teronis.Microsoft.JSInterop.Locality.WebAssets.dll Syntax public sealed class JSLocalObjectInterop : IAsyncDisposable, IJSLocalObjectInterop Constructors | Improve this Doc View Source JSLocalObjectInterop(IJSModuleActivator) Declaration public JSLocalObjectInterop(IJSModuleActivator jsModuleActivator) Parameters Type Name Description IJSModuleActivator jsModuleActivator Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source GetGlobalObjectReference(Nullable<String>) Declaration public ValueTask<IJSObjectReference> GetGlobalObjectReference(string? objectName) Parameters Type Name Description System.Nullable < System.String > objectName Returns Type Description ValueTask < IJSObjectReference > | Improve this Doc View Source GetLocalObjectReference(IJSObjectReference, String) Declaration public ValueTask<IJSObjectReference> GetLocalObjectReference(IJSObjectReference objectReference, string objectName) Parameters Type Name Description IJSObjectReference objectReference System.String objectName Returns Type Description ValueTask < IJSObjectReference > Implements IJSLocalObjectInterop Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Module | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Module Classes IServiceCollectionExtensions JSModule JSModuleActivator JSModuleActivatorOptions Interfaces IJSModule IJSModuleActivator"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IJSModule.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IJSModule.html",
    "title": "Interface IJSModule | Documentations",
    "keywords": "Interface IJSModule Inherited Members IJSObjectReferenceFacade.JSObjectReference IJSObjectReferenceFacade.InvokeAsync<TValue>(String, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacade.InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSModule : IJSLocalObject, IJSObjectReferenceFacade, IAsyncDisposable Properties | Improve this Doc View Source ModuleNameOrPath Declaration string ModuleNameOrPath { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeAsync<TValue>(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, CancellationToken, Nullable<Object>[]) IJSObjectReferenceFacadeExtensions.InvokeVoidAsync(IJSObjectReferenceFacade, String, TimeSpan, Nullable<Object>[])"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IJSModuleActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IJSModuleActivator.html",
    "title": "Interface IJSModuleActivator | Documentations",
    "keywords": "Interface IJSModuleActivator Inherited Members IInstanceActivator<IJSModule>.InstanceActivated Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public interface IJSModuleActivator : IInstanceActivator<IJSModule> Methods | Improve this Doc View Source CreateInstanceAsync(String) Declaration ValueTask<IJSModule> CreateInstanceAsync(string moduleNameOrPath) Parameters Type Name Description System.String moduleNameOrPath Returns Type Description ValueTask < IJSModule > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source AddJSModule(IServiceCollection) Calls AddJSModuleActivator(IServiceCollection, Nullable<Action<JSModuleActivatorOptions>>) . Declaration public static IServiceCollection AddJSModule(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection | Improve this Doc View Source AddJSModuleActivator(IServiceCollection, Nullable<Action<JSModuleActivatorOptions>>) Tries to add JSModuleActivator as . Declaration public static IServiceCollection AddJSModuleActivator(this IServiceCollection services, Action<JSModuleActivatorOptions>? configureOptions = null) Parameters Type Name Description IServiceCollection services System.Nullable < Action < JSModuleActivatorOptions >> configureOptions Returns Type Description IServiceCollection"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModule.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModule.html",
    "title": "Class JSModule | Documentations",
    "keywords": "Class JSModule Inheritance System.Object JSLocalObject JSModule Implements IJSModule IJSLocalObject IJSObjectReferenceFacade IAsyncDisposable IAsyncDisposable Inherited Members JSLocalObject.JSObjectReference JSLocalObject.InvokeAsync<TValue>(String, Nullable<Object>[]) JSLocalObject.InvokeAsync<TValue>(String, CancellationToken, Nullable<Object>[]) JSLocalObject.InvokeAsync<TValue>(String, TimeSpan, Nullable<Object>[]) JSLocalObject.InvokeVoidAsync(String, Nullable<Object>[]) JSLocalObject.InvokeVoidAsync(String, CancellationToken, Nullable<Object>[]) JSLocalObject.InvokeVoidAsync(String, TimeSpan, Nullable<Object>[]) JSLocalObject.DisposeAsyncCore() JSLocalObject.DisposeAsync() Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSModule : JSLocalObject, IJSModule, IJSLocalObject, IJSObjectReferenceFacade, IAsyncDisposable, IAsyncDisposable Constructors | Improve this Doc View Source JSModule(IJSFunctionalObject, IJSObjectReference, String) Declaration public JSModule(IJSFunctionalObject jsFunctionalObject, IJSObjectReference jsObjectReference, string moduleName) Parameters Type Name Description IJSFunctionalObject jsFunctionalObject IJSObjectReference jsObjectReference System.String moduleName Properties | Improve this Doc View Source ModuleNameOrPath Module name or path of the module. Declaration public string ModuleNameOrPath { get; } Property Value Type Description System.String Implements IJSModule IJSLocalObject IJSObjectReferenceFacade IAsyncDisposable IAsyncDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModuleActivator.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModuleActivator.html",
    "title": "Class JSModuleActivator | Documentations",
    "keywords": "Class JSModuleActivator Inheritance System.Object IInstanceActivatorBase < IJSModule > JSModuleActivator Implements IJSModuleActivator IInstanceActivator < IJSModule > Inherited Members IInstanceActivatorBase<IJSModule>.InstanceActivated IInstanceActivatorBase<IJSModule>.DispatchInstanceActicated(IJSModule) Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSModuleActivator : IInstanceActivatorBase<IJSModule>, IJSModuleActivator, IInstanceActivator<IJSModule> Constructors | Improve this Doc View Source JSModuleActivator(IJSRuntime, JSModuleActivatorOptions) Declaration public JSModuleActivator(IJSRuntime jsRuntime, JSModuleActivatorOptions options) Parameters Type Name Description IJSRuntime jsRuntime JSModuleActivatorOptions options Methods | Improve this Doc View Source CreateInstanceAsync(String) Declaration public virtual ValueTask<IJSModule> CreateInstanceAsync(string moduleNameOrPath) Parameters Type Name Description System.String moduleNameOrPath Returns Type Description ValueTask < IJSModule > Implements IJSModuleActivator IInstanceActivator<T> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModuleActivatorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Module.JSModuleActivatorOptions.html",
    "title": "Class JSModuleActivatorOptions | Documentations",
    "keywords": "Class JSModuleActivatorOptions Inheritance System.Object JSFunctionalObjectOptions < JSModuleActivatorOptions > JSModuleActivatorOptions Inherited Members JSFunctionalObjectOptions<JSModuleActivatorOptions>.JSFunctionalObject JSFunctionalObjectOptions<JSModuleActivatorOptions>.GetOrBuildJSFunctionalObject JSFunctionalObjectOptions<JSModuleActivatorOptions>.InterceptorWalkerBuilder JSFunctionalObjectOptions<JSModuleActivatorOptions>.ConfigureInterceptorWalkerBuilder(Action<IJSFunctionalObjectInterceptorWalkerBuilder>) Namespace : Teronis.Microsoft.JSInterop.Module Assembly : Teronis.Microsoft.JSInterop.Core.dll Syntax public class JSModuleActivatorOptions : JSFunctionalObjectOptions<JSModuleActivatorOptions> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.ExceptionValueTaskSource.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.ExceptionValueTaskSource.html",
    "title": "Class ExceptionValueTaskSource | Documentations",
    "keywords": "Class ExceptionValueTaskSource Inheritance System.Object ExceptionValueTaskSource ExceptionValueTaskSource<T> Namespace : Teronis.Microsoft.JSInterop.Threading.Tasks Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class ExceptionValueTaskSource : IValueTaskSource Constructors | Improve this Doc View Source ExceptionValueTaskSource(Exception) Declaration public ExceptionValueTaskSource(Exception exception) Parameters Type Name Description Exception exception Properties | Improve this Doc View Source Exception Declaration protected Exception Exception { get; } Property Value Type Description Exception Methods | Improve this Doc View Source GetResult(Int16) Declaration public void GetResult(short _) Parameters Type Name Description System.Int16 _ | Improve this Doc View Source GetStatus(Int16) Declaration public ValueTaskSourceStatus GetStatus(short token) Parameters Type Name Description System.Int16 token Returns Type Description ValueTaskSourceStatus Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.ExceptionValueTaskSource-1.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.ExceptionValueTaskSource-1.html",
    "title": "Class ExceptionValueTaskSource<T> | Documentations",
    "keywords": "Class ExceptionValueTaskSource<T> Inheritance System.Object ExceptionValueTaskSource ExceptionValueTaskSource<T> Implements IValueTaskSource <T> Inherited Members ExceptionValueTaskSource.Exception ExceptionValueTaskSource.GetResult(Int16) ExceptionValueTaskSource.GetStatus(Int16) Namespace : Teronis.Microsoft.JSInterop.Threading.Tasks Assembly : Teronis.Microsoft.JSInterop.Abstractions.dll Syntax public class ExceptionValueTaskSource<T> : ExceptionValueTaskSource, IValueTaskSource<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ExceptionValueTaskSource(Exception) Declaration public ExceptionValueTaskSource(Exception exception) Parameters Type Name Description Exception exception Implements IValueTaskSource<> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.html": {
    "href": "Teronis.DotNet/Teronis.Microsoft.JSInterop.Threading.Tasks.html",
    "title": "Namespace Teronis.Microsoft.JSInterop.Threading.Tasks | Documentations",
    "keywords": "Namespace Teronis.Microsoft.JSInterop.Threading.Tasks Classes ExceptionValueTaskSource ExceptionValueTaskSource<T>"
  },
  "Teronis.DotNet/Teronis.Models.DialogButtonDefaults.html": {
    "href": "Teronis.DotNet/Teronis.Models.DialogButtonDefaults.html",
    "title": "Class DialogButtonDefaults | Documentations",
    "keywords": "Class DialogButtonDefaults Inheritance System.Object DialogButtonDefaults Namespace : Teronis.Models Assembly : Teronis.NetStandard.Core.dll Syntax public static class DialogButtonDefaults : object Fields | Improve this Doc View Source DefaultButton Declaration public static DialogButtons DefaultButton Field Value Type Description DialogButtons"
  },
  "Teronis.DotNet/Teronis.Models.DialogButtons.html": {
    "href": "Teronis.DotNet/Teronis.Models.DialogButtons.html",
    "title": "Enum DialogButtons | Documentations",
    "keywords": "Enum DialogButtons Namespace : Teronis.Models Assembly : Teronis.NetStandard.Core.dll Syntax public enum DialogButtons : int Fields Name Description Ok YesNo"
  },
  "Teronis.DotNet/Teronis.Models.DialogModel.html": {
    "href": "Teronis.DotNet/Teronis.Models.DialogModel.html",
    "title": "Class DialogModel | Documentations",
    "keywords": "Class DialogModel Inheritance System.Object DialogModel Implements IDialogModel Namespace : Teronis.Models Assembly : Teronis.NetStandard.Core.dll Syntax public class DialogModel : object, IDialogModel Constructors | Improve this Doc View Source DialogModel(String) Declaration public DialogModel(string message) Parameters Type Name Description System.String message | Improve this Doc View Source DialogModel(String, Nullable<String>) Declaration public DialogModel(string message, string? caption) Parameters Type Name Description System.String message System.Nullable < System.String > caption | Improve this Doc View Source DialogModel(String, Nullable<String>, DialogButtons) Declaration public DialogModel(string message, string? caption, DialogButtons buttons) Parameters Type Name Description System.String message System.Nullable < System.String > caption DialogButtons buttons | Improve this Doc View Source DialogModel(String, DialogButtons) Declaration public DialogModel(string message, DialogButtons buttons) Parameters Type Name Description System.String message DialogButtons buttons Properties | Improve this Doc View Source Buttons Declaration public DialogButtons Buttons { get; } Property Value Type Description DialogButtons | Improve this Doc View Source Caption Declaration public string? Caption { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Message Declaration public string Message { get; } Property Value Type Description System.String Implements IDialogModel Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Models.html": {
    "href": "Teronis.DotNet/Teronis.Models.html",
    "title": "Namespace Teronis.Models | Documentations",
    "keywords": "Namespace Teronis.Models Classes DialogButtonDefaults DialogModel Interfaces IDialogModel Enums DialogButtons"
  },
  "Teronis.DotNet/Teronis.Models.IDialogModel.html": {
    "href": "Teronis.DotNet/Teronis.Models.IDialogModel.html",
    "title": "Interface IDialogModel | Documentations",
    "keywords": "Interface IDialogModel Namespace : Teronis.Models Assembly : Teronis.NetStandard.Core.dll Syntax public interface IDialogModel Properties | Improve this Doc View Source Buttons Declaration DialogButtons Buttons { get; } Property Value Type Description DialogButtons | Improve this Doc View Source Caption Declaration string? Caption { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Message Declaration string Message { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.AssemblyLoaderInjector.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.AssemblyLoaderInjector.html",
    "title": "Class AssemblyLoaderInjector | Documentations",
    "keywords": "Class AssemblyLoaderInjector Inheritance System.Object AssemblyLoaderInjector Namespace : Teronis.ModuleInitializer.AssemblyLoader Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public class AssemblyLoaderInjector : object Fields | Improve this Doc View Source Default Declaration public static AssemblyLoaderInjector Default Field Value Type Description AssemblyLoaderInjector Methods | Improve this Doc View Source InjectAssemblyInitializer(String, String, Nullable<String>) Declaration public void InjectAssemblyInitializer(string injectionTargetAssemblyPath, string sourceAssemblyPath, string? keyFile) Parameters Type Name Description System.String injectionTargetAssemblyPath System.String sourceAssemblyPath System.Nullable < System.String > keyFile Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) AssemblyLoaderInjectorExtensions.InjectAssemblyLoader(AssemblyLoaderInjector, String, String)"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.AssemblyLoaderInjectorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.AssemblyLoaderInjectorExtensions.html",
    "title": "Class AssemblyLoaderInjectorExtensions | Documentations",
    "keywords": "Class AssemblyLoaderInjectorExtensions Inheritance System.Object AssemblyLoaderInjectorExtensions Namespace : Teronis.ModuleInitializer.AssemblyLoader Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public static class AssemblyLoaderInjectorExtensions : object Methods | Improve this Doc View Source InjectAssemblyLoader(AssemblyLoaderInjector, String, String) Declaration public static void InjectAssemblyLoader(this AssemblyLoaderInjector injector, string injectionTargetAssemblyPath, string sourceAssemblyPath) Parameters Type Name Description AssemblyLoaderInjector injector System.String injectionTargetAssemblyPath System.String sourceAssemblyPath"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Extensions.html",
    "title": "Namespace Teronis.ModuleInitializer.AssemblyLoader.Extensions | Documentations",
    "keywords": "Namespace Teronis.ModuleInitializer.AssemblyLoader.Extensions Classes InstructionExtensions"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Extensions.InstructionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Extensions.InstructionExtensions.html",
    "title": "Class InstructionExtensions | Documentations",
    "keywords": "Class InstructionExtensions Inheritance System.Object InstructionExtensions Namespace : Teronis.ModuleInitializer.AssemblyLoader.Extensions Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public static class InstructionExtensions : object Methods | Improve this Doc View Source Replace(Collection<Instruction>, Instruction, IEnumerable<Instruction>) Declaration public static void Replace(this Collection<Instruction> collection, Instruction replacingInstruction, IEnumerable<Instruction> insertingInstructions) Parameters Type Name Description Collection < Instruction > collection Instruction replacingInstruction IEnumerable < Instruction > insertingInstructions"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.html",
    "title": "Namespace Teronis.ModuleInitializer.AssemblyLoader | Documentations",
    "keywords": "Namespace Teronis.ModuleInitializer.AssemblyLoader Classes AssemblyLoaderInjector AssemblyLoaderInjectorExtensions"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.AssemblyPathUtils.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.AssemblyPathUtils.html",
    "title": "Class AssemblyPathUtils | Documentations",
    "keywords": "Class AssemblyPathUtils Inheritance System.Object AssemblyPathUtils Namespace : Teronis.ModuleInitializer.AssemblyLoader.Utils Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public static class AssemblyPathUtils : object Methods | Improve this Doc View Source GetPdbFilePathOrDefault(String) Tries to gets the PDB file path that belongs to the assembly file path. Declaration public static string? GetPdbFilePathOrDefault(string assemblyFilePath) Parameters Type Name Description System.String assemblyFilePath The path to the assembly file. Returns Type Description System.Nullable < System.String > The path of the pdb-file if it exists, otherwise null. | Improve this Doc View Source ReadAssemblyFromPath(String, Boolean) Declaration public static AssemblyDefinition ReadAssemblyFromPath(string assemblyPath, bool readSymbols) Parameters Type Name Description System.String assemblyPath System.Boolean readSymbols Returns Type Description AssemblyDefinition | Improve this Doc View Source ReadAssemblyFullName(String) Declaration public static string ReadAssemblyFullName(string assemblyPath) Parameters Type Name Description System.String assemblyPath Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.ExceptionUtils.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.ExceptionUtils.html",
    "title": "Class ExceptionUtils | Documentations",
    "keywords": "Class ExceptionUtils Inheritance System.Object ExceptionUtils Namespace : Teronis.ModuleInitializer.AssemblyLoader.Utils Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public static class ExceptionUtils : object Methods | Improve this Doc View Source GetMessageWithPrependedType(Exception, Nullable<String>) Declaration public static string GetMessageWithPrependedType(Exception error, string? message = null) Parameters Type Name Description Exception error System.Nullable < System.String > message Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.html",
    "title": "Namespace Teronis.ModuleInitializer.AssemblyLoader.Utils | Documentations",
    "keywords": "Namespace Teronis.ModuleInitializer.AssemblyLoader.Utils Classes AssemblyPathUtils ExceptionUtils ModuleDefinitionUtils"
  },
  "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.ModuleDefinitionUtils.html": {
    "href": "Teronis.DotNet/Teronis.ModuleInitializer.AssemblyLoader.Utils.ModuleDefinitionUtils.html",
    "title": "Class ModuleDefinitionUtils | Documentations",
    "keywords": "Class ModuleDefinitionUtils Inheritance System.Object ModuleDefinitionUtils Namespace : Teronis.ModuleInitializer.AssemblyLoader.Utils Assembly : Teronis.ModuleInitializer.AssemblyLoader.dll Syntax public static class ModuleDefinitionUtils : object Methods | Improve this Doc View Source FindModuleInitializerMethods(ModuleDefinition) Declaration public static IEnumerable<MethodDefinition> FindModuleInitializerMethods(ModuleDefinition module) Parameters Type Name Description ModuleDefinition module Returns Type Description IEnumerable < MethodDefinition >"
  },
  "Teronis.DotNet/Teronis.MSBuild.BuildTasks.GetSolutionProjects.html": {
    "href": "Teronis.DotNet/Teronis.MSBuild.BuildTasks.GetSolutionProjects.html",
    "title": "Class GetSolutionProjects | Documentations",
    "keywords": "Class GetSolutionProjects Retrieves the list of Projects contained within a Visual Studio Solution (.sln) file . Inheritance System.Object GetSolutionProjects Namespace : Teronis.MSBuild.BuildTasks Assembly : Teronis.MSBuild.BuildTasks.dll Syntax public class GetSolutionProjects : Task Examples Returns project name, GUID, and path information from test solution. <Target Name=\"Test\"> <GetSolutionProjects Solution=\"TestSolution.sln\"> <Output ItemName=\"ProjectFiles\" TaskParameter=\"Output\"/> </GetSolutionProjects> <Message Text=\"Project names:\" /> <Message Text=\"%(ProjectFiles.ProjectName)\" /> <Message Text=\"Relative project paths:\" /> <Message Text=\"%(ProjectFiles.ProjectPath)\" /> <Message Text=\"Project GUIDs:\" /> <Message Text=\"%(ProjectFiles.ProjectGUID)\" /> <Message Text=\"Full paths to project files:\" /> <Message Text=\"%(ProjectFiles.FullPath)\" /> <Message Text=\"Project Type GUIDs:\" /> <Message Text=\"%(ProjectFiles.ProjectTypeGUID)\" /> </Target> Properties | Improve this Doc View Source Output A list of the project files found in Solution . Declaration public ITaskItem[] Output { get; set; } Property Value Type Description ITaskItem [] Remarks The name of the project can be retrieved by reading metadata tag ProjectName . The path to the project as it is is stored in the solution file retrieved by reading metadata tag ProjectPath . The project's GUID can be retrieved by reading metadata tag ProjectGUID . | Improve this Doc View Source Solution Name of Solution to get the projects from. Declaration public string Solution { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute() Performs the task. Declaration public override bool Execute() Returns Type Description System.Boolean true on success Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.MSBuild.BuildTasks.html": {
    "href": "Teronis.DotNet/Teronis.MSBuild.BuildTasks.html",
    "title": "Namespace Teronis.MSBuild.BuildTasks | Documentations",
    "keywords": "Namespace Teronis.MSBuild.BuildTasks Classes GetSolutionProjects Retrieves the list of Projects contained within a Visual Studio Solution (.sln) file . MetadataToString First level metadata are transformed to semicolon separated key value pairs."
  },
  "Teronis.DotNet/Teronis.MSBuild.BuildTasks.MetadataToString.html": {
    "href": "Teronis.DotNet/Teronis.MSBuild.BuildTasks.MetadataToString.html",
    "title": "Class MetadataToString | Documentations",
    "keywords": "Class MetadataToString First level metadata are transformed to semicolon separated key value pairs. Inheritance System.Object MetadataToString Namespace : Teronis.MSBuild.BuildTasks Assembly : Teronis.MSBuild.BuildTasks.dll Syntax public class MetadataToString : Task Properties | Improve this Doc View Source Item Declaration public ITaskItem[] Item { get; set; } Property Value Type Description ITaskItem [] | Improve this Doc View Source Metadata Declaration public string? Metadata { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Execute() Declaration public override bool Execute() Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ControllerModelConfiguration.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ControllerModelConfiguration.html",
    "title": "Class ControllerModelConfiguration | Documentations",
    "keywords": "Class ControllerModelConfiguration Provides configuration for by adding conventions. Inheritance System.Object ControllerModelConfiguration Implements ISelectedControllerModelConfiguration Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ControllerModelConfiguration : object, ISelectedControllerModelConfiguration Constructors | Improve this Doc View Source ControllerModelConfiguration(TypeInfo) Declaration public ControllerModelConfiguration(TypeInfo controllerType) Parameters Type Name Description TypeInfo controllerType Properties | Improve this Doc View Source ActionConventions Declaration public List<IActionModelConvention> ActionConventions { get; } Property Value Type Description List < IActionModelConvention > | Improve this Doc View Source ControllerConventions Declaration public List<IControllerModelConvention> ControllerConventions { get; } Property Value Type Description List < IControllerModelConvention > | Improve this Doc View Source ParameterBaseConventions Declaration public List<IParameterModelBaseConvention> ParameterBaseConventions { get; } Property Value Type Description List < IParameterModelBaseConvention > | Improve this Doc View Source ParameterConventions Declaration public List<IParameterModelConvention> ParameterConventions { get; } Property Value Type Description List < IParameterModelConvention > | Improve this Doc View Source SelectedControllerType Declaration public TypeInfo SelectedControllerType { get; } Property Value Type Description TypeInfo Methods | Improve this Doc View Source AddActionConvention(IActionModelConvention) Declaration public ISelectedControllerModelConfiguration AddActionConvention(IActionModelConvention actionConvention) Parameters Type Name Description IActionModelConvention actionConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddControllerConvention(IControllerModelConvention) Declaration public ISelectedControllerModelConfiguration AddControllerConvention(IControllerModelConvention controllerConvention) Parameters Type Name Description IControllerModelConvention controllerConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddParameterBaseConvention(IParameterModelBaseConvention) Declaration public ISelectedControllerModelConfiguration AddParameterBaseConvention(IParameterModelBaseConvention parameterBaseConvention) Parameters Type Name Description IParameterModelBaseConvention parameterBaseConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddParameterConvention(IParameterModelConvention) Declaration public ISelectedControllerModelConfiguration AddParameterConvention(IParameterModelConvention parameterConvention) Parameters Type Name Description IParameterModelConvention parameterConvention Returns Type Description ISelectedControllerModelConfiguration Implements ISelectedControllerModelConfiguration Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.ControllerTypeFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.ControllerTypeFilter.html",
    "title": "Class ControllerTypeFilter | Documentations",
    "keywords": "Class ControllerTypeFilter Inheritance System.Object ControllerTypeFilter Implements IControllerModelFilter ITypeInfoFilter Namespace : Teronis.Mvc.ApplicationModels.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ControllerTypeFilter : object, IControllerModelFilter, ITypeInfoFilter Constructors | Improve this Doc View Source ControllerTypeFilter(TypeInfoFilter) Declaration public ControllerTypeFilter(TypeInfoFilter controllerTypeFilter) Parameters Type Name Description TypeInfoFilter controllerTypeFilter | Improve this Doc View Source ControllerTypeFilter(TypeInfo[]) Declaration public ControllerTypeFilter(params TypeInfo[] typeInfoAllowList) Parameters Type Name Description TypeInfo [] typeInfoAllowList | Improve this Doc View Source ControllerTypeFilter(TypeInfo[], TypeInfo[]) Declaration public ControllerTypeFilter(TypeInfo[] typeInfoAllowList, params TypeInfo[] typeInfoBlockList) Parameters Type Name Description TypeInfo [] typeInfoAllowList TypeInfo [] typeInfoBlockList Properties | Improve this Doc View Source TypeInfoFilter Declaration public TypeInfoFilter TypeInfoFilter { get; } Property Value Type Description TypeInfoFilter Methods | Improve this Doc View Source IsAllowed(Nullable<ControllerModel>) Declaration public bool IsAllowed(ControllerModel? controller) Parameters Type Name Description System.Nullable < ControllerModel > controller Returns Type Description System.Boolean | Improve this Doc View Source IsAllowed(Nullable<TypeInfo>) Declaration public bool IsAllowed(TypeInfo? type) Parameters Type Name Description System.Nullable < TypeInfo > type Returns Type Description System.Boolean Implements IControllerModelFilter ITypeInfoFilter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.html",
    "title": "Namespace Teronis.Mvc.ApplicationModels.Filters | Documentations",
    "keywords": "Namespace Teronis.Mvc.ApplicationModels.Filters Classes ControllerTypeFilter Interfaces IActionModelFilter IApplicationModelFilter IControllerModelFilter IParameterModelFilter"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IActionModelFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IActionModelFilter.html",
    "title": "Interface IActionModelFilter | Documentations",
    "keywords": "Interface IActionModelFilter Namespace : Teronis.Mvc.ApplicationModels.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IActionModelFilter Methods | Improve this Doc View Source IsAllowed(Nullable<ActionModel>) Declaration bool IsAllowed(ActionModel? action) Parameters Type Name Description System.Nullable < ActionModel > action Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IApplicationModelFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IApplicationModelFilter.html",
    "title": "Interface IApplicationModelFilter | Documentations",
    "keywords": "Interface IApplicationModelFilter Namespace : Teronis.Mvc.ApplicationModels.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IApplicationModelFilter Methods | Improve this Doc View Source IsAllowed(ApplicationModel) Declaration bool IsAllowed(ApplicationModel appliaction) Parameters Type Name Description ApplicationModel appliaction Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IControllerModelFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IControllerModelFilter.html",
    "title": "Interface IControllerModelFilter | Documentations",
    "keywords": "Interface IControllerModelFilter Namespace : Teronis.Mvc.ApplicationModels.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IControllerModelFilter Methods | Improve this Doc View Source IsAllowed(Nullable<ControllerModel>) Declaration bool IsAllowed(ControllerModel? controller) Parameters Type Name Description System.Nullable < ControllerModel > controller Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IParameterModelFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.Filters.IParameterModelFilter.html",
    "title": "Interface IParameterModelFilter | Documentations",
    "keywords": "Interface IParameterModelFilter Namespace : Teronis.Mvc.ApplicationModels.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IParameterModelFilter Methods | Improve this Doc View Source IsAllowed(Nullable<ParameterModel>) Declaration bool IsAllowed(ParameterModel? parameter) Parameters Type Name Description System.Nullable < ParameterModel > parameter Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.html",
    "title": "Namespace Teronis.Mvc.ApplicationModels | Documentations",
    "keywords": "Namespace Teronis.Mvc.ApplicationModels Classes ControllerModelConfiguration Provides configuration for by adding conventions. IControllerModelConfigurationExtensions IServiceCollectionExtensions RouteTemplateCaseFormatter A route template case formatter. RouteTemplateConvention ScopedRouteConvention ScopedRouteTemplateConvention Interfaces ISelectedControllerModelConfiguration Provides configuration for by adding conventions."
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.IControllerModelConfigurationExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.IControllerModelConfigurationExtensions.html",
    "title": "Class IControllerModelConfigurationExtensions | Documentations",
    "keywords": "Class IControllerModelConfigurationExtensions Inheritance System.Object IControllerModelConfigurationExtensions Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IControllerModelConfigurationExtensions : object Methods | Improve this Doc View Source AddRouteTemplateConvention(ISelectedControllerModelConfiguration, IStringFormatter, IActionModelFilter) Adds an RouteTemplateConvention instance to which operates recursively. Declaration public static ISelectedControllerModelConfiguration AddRouteTemplateConvention(this ISelectedControllerModelConfiguration configuration, IStringFormatter routeTemplateFormatter, IActionModelFilter actionFilter = null) Parameters Type Name Description ISelectedControllerModelConfiguration configuration IStringFormatter routeTemplateFormatter IActionModelFilter actionFilter Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddRouteTemplateConvention(ISelectedControllerModelConfiguration, CaseType, IActionModelFilter) Adds an RouteTemplateConvention instance to which operates recursively. Declaration public static ISelectedControllerModelConfiguration AddRouteTemplateConvention(this ISelectedControllerModelConfiguration configuration, CaseType caseType, IActionModelFilter actionFilter = null) Parameters Type Name Description ISelectedControllerModelConfiguration configuration CaseType caseType IActionModelFilter actionFilter Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) Adds an ScopedRouteConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteConvention(this ISelectedControllerModelConfiguration configuration, string? defaultRouteTemplate, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention> addConvention) Parameters Type Name Description ISelectedControllerModelConfiguration configuration System.Nullable < System.String > defaultRouteTemplate Action < ISelectedControllerModelConfiguration , ScopedRouteConvention > addConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Boolean, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) Adds an ScopedRouteConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteConvention(this ISelectedControllerModelConfiguration configuration, string? defaultRouteTemplate, bool forceDefaultRoute, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention> addConvention) Parameters Type Name Description ISelectedControllerModelConfiguration configuration System.Nullable < System.String > defaultRouteTemplate System.Boolean forceDefaultRoute Action < ISelectedControllerModelConfiguration , ScopedRouteConvention > addConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Boolean, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>, Nullable<TypeInfo>) Adds an ScopedRouteConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteConvention(this ISelectedControllerModelConfiguration configuration, string? defaultRouteTemplate, bool forceDefaultRoute, string? prefixRouteTemplate, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention> addConvention, TypeInfo? controllerType = null) Parameters Type Name Description ISelectedControllerModelConfiguration configuration System.Nullable < System.String > defaultRouteTemplate System.Boolean forceDefaultRoute System.Nullable < System.String > prefixRouteTemplate Action < ISelectedControllerModelConfiguration , ScopedRouteConvention > addConvention System.Nullable < TypeInfo > controllerType Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) Adds an ScopedRouteConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteConvention(this ISelectedControllerModelConfiguration configuration, string? defaultRouteTemplate, string? prefixRouteTemplate, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention> addConvention) Parameters Type Name Description ISelectedControllerModelConfiguration configuration System.Nullable < System.String > defaultRouteTemplate System.Nullable < System.String > prefixRouteTemplate Action < ISelectedControllerModelConfiguration , ScopedRouteConvention > addConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteTemplateConvention(ISelectedControllerModelConfiguration, IStringFormatter, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention>) Adds an ScopedRouteTemplateConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteTemplateConvention(this ISelectedControllerModelConfiguration configuration, IStringFormatter routeTemplateFormatter, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention> addConvention) Parameters Type Name Description ISelectedControllerModelConfiguration configuration IStringFormatter routeTemplateFormatter Action < ISelectedControllerModelConfiguration , ScopedRouteTemplateConvention > addConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddScopedRouteTemplateConvention(ISelectedControllerModelConfiguration, CaseType, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention>) Adds an ScopedRouteTemplateConvention instance to which only operates one level deep. Declaration public static ISelectedControllerModelConfiguration AddScopedRouteTemplateConvention(this ISelectedControllerModelConfiguration configuration, CaseType caseType, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention> addConvention) Parameters Type Name Description ISelectedControllerModelConfiguration configuration CaseType caseType Action < ISelectedControllerModelConfiguration , ScopedRouteTemplateConvention > addConvention Returns Type Description ISelectedControllerModelConfiguration"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ISelectedControllerModelConfiguration.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ISelectedControllerModelConfiguration.html",
    "title": "Interface ISelectedControllerModelConfiguration | Documentations",
    "keywords": "Interface ISelectedControllerModelConfiguration Provides configuration for by adding conventions. Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface ISelectedControllerModelConfiguration Properties | Improve this Doc View Source SelectedControllerType Declaration TypeInfo SelectedControllerType { get; } Property Value Type Description TypeInfo Methods | Improve this Doc View Source AddActionConvention(IActionModelConvention) Adds instance to . Declaration ISelectedControllerModelConfiguration AddActionConvention(IActionModelConvention actionConvention) Parameters Type Name Description IActionModelConvention actionConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddControllerConvention(IControllerModelConvention) Adds instance to . Declaration ISelectedControllerModelConfiguration AddControllerConvention(IControllerModelConvention controllerConvention) Parameters Type Name Description IControllerModelConvention controllerConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddParameterBaseConvention(IParameterModelBaseConvention) Adds instance to Declaration ISelectedControllerModelConfiguration AddParameterBaseConvention(IParameterModelBaseConvention parameterBaseConvention) Parameters Type Name Description IParameterModelBaseConvention parameterBaseConvention Returns Type Description ISelectedControllerModelConfiguration | Improve this Doc View Source AddParameterConvention(IParameterModelConvention) Adds instance to Declaration ISelectedControllerModelConfiguration AddParameterConvention(IParameterModelConvention parameterConvention) Parameters Type Name Description IParameterModelConvention parameterConvention Returns Type Description ISelectedControllerModelConfiguration Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IControllerModelConfigurationExtensions.AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Boolean, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>, Nullable<TypeInfo>) IControllerModelConfigurationExtensions.AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Boolean, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) IControllerModelConfigurationExtensions.AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) IControllerModelConfigurationExtensions.AddScopedRouteConvention(ISelectedControllerModelConfiguration, Nullable<String>, Nullable<String>, Action<ISelectedControllerModelConfiguration, ScopedRouteConvention>) IControllerModelConfigurationExtensions.AddScopedRouteTemplateConvention(ISelectedControllerModelConfiguration, IStringFormatter, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention>) IControllerModelConfigurationExtensions.AddScopedRouteTemplateConvention(ISelectedControllerModelConfiguration, CaseType, Action<ISelectedControllerModelConfiguration, ScopedRouteTemplateConvention>) IControllerModelConfigurationExtensions.AddRouteTemplateConvention(ISelectedControllerModelConfiguration, IStringFormatter, IActionModelFilter) IControllerModelConfigurationExtensions.AddRouteTemplateConvention(ISelectedControllerModelConfiguration, CaseType, IActionModelFilter)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source ApplyControllerModelConfiguration(IServiceCollection, ControllerModelConfiguration) Adds the configured conventions in ControllerModelConfiguration to . Declaration public static void ApplyControllerModelConfiguration(this IServiceCollection services, ControllerModelConfiguration controllerModelConfiguration) Parameters Type Name Description IServiceCollection services ControllerModelConfiguration controllerModelConfiguration | Improve this Doc View Source ApplyControllerModelConfiguration(IServiceCollection, ControllerModelConfiguration, Action<Action<MvcOptions>>) Adds the configured conventions in ControllerModelConfiguration to . Declaration public static void ApplyControllerModelConfiguration(this IServiceCollection _, ControllerModelConfiguration controllerModelConfiguration, Action<Action<MvcOptions>> configureOptions) Parameters Type Name Description IServiceCollection _ ControllerModelConfiguration controllerModelConfiguration Action < Action < MvcOptions >> configureOptions | Improve this Doc View Source ApplyControllerModelConfiguration(IServiceCollection, ControllerModelConfiguration, Action<IServiceCollection, Action<MvcOptions>>) Adds the configured conventions in ControllerModelConfiguration to . Declaration public static void ApplyControllerModelConfiguration(this IServiceCollection services, ControllerModelConfiguration controllerModelConfiguration, Action<IServiceCollection, Action<MvcOptions>> configureOptions) Parameters Type Name Description IServiceCollection services ControllerModelConfiguration controllerModelConfiguration Action < IServiceCollection , Action < MvcOptions >> configureOptions"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.RouteTemplateCaseFormatter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.RouteTemplateCaseFormatter.html",
    "title": "Class RouteTemplateCaseFormatter | Documentations",
    "keywords": "Class RouteTemplateCaseFormatter A route template case formatter. Inheritance System.Object CaseFormatter RouteTemplateCaseFormatter Implements IStringFormatter Inherited Members CaseFormatter.CaseType Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class RouteTemplateCaseFormatter : CaseFormatter, IStringFormatter Constructors | Improve this Doc View Source RouteTemplateCaseFormatter(CaseType) Declaration public RouteTemplateCaseFormatter(CaseType caseType) Parameters Type Name Description CaseType caseType Methods | Improve this Doc View Source Format(String) Formats the case of routeTemplate . Declaration public override string Format(string routeTemplate) Parameters Type Name Description System.String routeTemplate Returns Type Description System.String Overrides CaseFormatter.Format(String) Implements IStringFormatter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.RouteTemplateConvention.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.RouteTemplateConvention.html",
    "title": "Class RouteTemplateConvention | Documentations",
    "keywords": "Class RouteTemplateConvention Inheritance System.Object RouteTemplateConvention Implements IControllerModelConvention Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class RouteTemplateConvention : IApplicationModelConvention, IControllerModelConvention Constructors | Improve this Doc View Source RouteTemplateConvention(IStringFormatter, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Creates a route template convention for appliaction or controller that formats route template of s. Declaration public RouteTemplateConvention(IStringFormatter urlComponentTemplateFormatter, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description IStringFormatter urlComponentTemplateFormatter A route template formatter. IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter Applies formatter on specific controller models. IActionModelFilter actionFilter Applies formatter on specific action models. Methods | Improve this Doc View Source Apply(ApplicationModel) Declaration public void Apply(ApplicationModel application) Parameters Type Name Description ApplicationModel application | Improve this Doc View Source Apply(ControllerModel) Declaration public void Apply(ControllerModel controller) Parameters Type Name Description ControllerModel controller Implements IControllerModelConvention Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ScopedRouteConvention.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ScopedRouteConvention.html",
    "title": "Class ScopedRouteConvention | Documentations",
    "keywords": "Class ScopedRouteConvention Inheritance System.Object ScopedRouteConvention Implements IActionModelConvention Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ScopedRouteConvention : IControllerModelConvention, IActionModelConvention Constructors | Improve this Doc View Source ScopedRouteConvention(Nullable<String>, Boolean, Nullable<String>, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Defines a route convention for controllers or actions. Declaration public ScopedRouteConvention(string? defaultRouteTemplate, bool forceDefaultRoute, string? prefixRouteTemplate, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description System.Nullable < System.String > defaultRouteTemplate Used for empty routes. System.Boolean forceDefaultRoute System.Nullable < System.String > prefixRouteTemplate The prefix is prepend to each route. IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter IActionModelFilter actionFilter | Improve this Doc View Source ScopedRouteConvention(Nullable<String>, Boolean, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Declaration public ScopedRouteConvention(string? defaultRouteTemplate, bool forceDefaultRoute, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description System.Nullable < System.String > defaultRouteTemplate System.Boolean forceDefaultRoute IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter IActionModelFilter actionFilter | Improve this Doc View Source ScopedRouteConvention(Nullable<String>, Nullable<String>, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Declaration public ScopedRouteConvention(string? defaultRouteTemplate, string? prefixRouteTemplate, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description System.Nullable < System.String > defaultRouteTemplate System.Nullable < System.String > prefixRouteTemplate IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter IActionModelFilter actionFilter | Improve this Doc View Source ScopedRouteConvention(Nullable<String>, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Declaration public ScopedRouteConvention(string? defaultRouteTemplate, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description System.Nullable < System.String > defaultRouteTemplate IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter IActionModelFilter actionFilter Properties | Improve this Doc View Source DefaultRouteTemplate Declaration public string? DefaultRouteTemplate { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source ForceDefaultRoute Declaration public bool ForceDefaultRoute { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PrefixRouteTemplate Declaration public string? PrefixRouteTemplate { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Apply(ActionModel) Declaration public void Apply(ActionModel action) Parameters Type Name Description ActionModel action | Improve this Doc View Source Apply(ControllerModel) Declaration public void Apply(ControllerModel controller) Parameters Type Name Description ControllerModel controller Implements IActionModelConvention Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ScopedRouteTemplateConvention.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ApplicationModels.ScopedRouteTemplateConvention.html",
    "title": "Class ScopedRouteTemplateConvention | Documentations",
    "keywords": "Class ScopedRouteTemplateConvention Inheritance System.Object ScopedRouteTemplateConvention Implements IActionModelConvention Namespace : Teronis.Mvc.ApplicationModels Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ScopedRouteTemplateConvention : IControllerModelConvention, IActionModelConvention Constructors | Improve this Doc View Source ScopedRouteTemplateConvention(IStringFormatter, IApplicationModelFilter, IControllerModelFilter, IActionModelFilter) Creates a route template convention for controller that formats route template of s. Declaration public ScopedRouteTemplateConvention(IStringFormatter routeTemplateFormatter, IApplicationModelFilter applicationFilter = null, IControllerModelFilter controllerFilter = null, IActionModelFilter actionFilter = null) Parameters Type Name Description IStringFormatter routeTemplateFormatter Formats route template. IApplicationModelFilter applicationFilter IControllerModelFilter controllerFilter Filters on controller type. IActionModelFilter actionFilter Properties | Improve this Doc View Source ActionFilter Declaration public IActionModelFilter ActionFilter { get; } Property Value Type Description IActionModelFilter | Improve this Doc View Source ApplicationFilter Declaration public IApplicationModelFilter ApplicationFilter { get; } Property Value Type Description IApplicationModelFilter | Improve this Doc View Source ControllerFilter Declaration public IControllerModelFilter ControllerFilter { get; } Property Value Type Description IControllerModelFilter | Improve this Doc View Source RouteTemplateFormatter Declaration public IStringFormatter RouteTemplateFormatter { get; } Property Value Type Description IStringFormatter Methods | Improve this Doc View Source Apply(ActionModel) Declaration public void Apply(ActionModel action) Parameters Type Name Description ActionModel action | Improve this Doc View Source Apply(ControllerModel) Declaration public void Apply(ControllerModel controller) Parameters Type Name Description ControllerModel controller Implements IActionModelConvention Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.Case.CaseExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Case.CaseExtensions.html",
    "title": "Class CaseExtensions | Documentations",
    "keywords": "Class CaseExtensions Inheritance System.Object CaseExtensions Namespace : Teronis.Mvc.Case Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class CaseExtensions : object Methods | Improve this Doc View Source ToCase(String, CaseType) Declaration public static string ToCase(this string source, CaseType caseType) Parameters Type Name Description System.String source CaseType caseType Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Mvc.Case.CaseFormatter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Case.CaseFormatter.html",
    "title": "Class CaseFormatter | Documentations",
    "keywords": "Class CaseFormatter Inheritance System.Object CaseFormatter RouteTemplateCaseFormatter Implements IStringFormatter Namespace : Teronis.Mvc.Case Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class CaseFormatter : object, IStringFormatter Constructors | Improve this Doc View Source CaseFormatter(CaseType) Declaration public CaseFormatter(CaseType caseType) Parameters Type Name Description CaseType caseType Properties | Improve this Doc View Source CaseType Declaration public CaseType CaseType { get; } Property Value Type Description CaseType Methods | Improve this Doc View Source Format(String) Declaration public virtual string Format(string source) Parameters Type Name Description System.String source Returns Type Description System.String Implements IStringFormatter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.Case.CaseType.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Case.CaseType.html",
    "title": "Enum CaseType | Documentations",
    "keywords": "Enum CaseType Namespace : Teronis.Mvc.Case Assembly : Teronis.AspNetCore.Mvc.dll Syntax public enum CaseType : int Fields Name Description CamelCase camelCase KebabCase kebab-case PascalCase PascalCase SnakeCase snake_case TrainCase Train-Case"
  },
  "Teronis.DotNet/Teronis.Mvc.Case.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Case.html",
    "title": "Namespace Teronis.Mvc.Case | Documentations",
    "keywords": "Namespace Teronis.Mvc.Case Classes CaseExtensions CaseFormatter Enums CaseType"
  },
  "Teronis.DotNet/Teronis.Mvc.Hosting.ApplicationPartManagerOptions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Hosting.ApplicationPartManagerOptions.html",
    "title": "Class ApplicationPartManagerOptions | Documentations",
    "keywords": "Class ApplicationPartManagerOptions Inheritance System.Object ApplicationPartManagerOptions Namespace : Teronis.Mvc.Hosting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ApplicationPartManagerOptions : object Constructors | Improve this Doc View Source ApplicationPartManagerOptions(ApplicationPartManager) Declaration public ApplicationPartManagerOptions(ApplicationPartManager partManager) Parameters Type Name Description ApplicationPartManager partManager Properties | Improve this Doc View Source PartManager Declaration public ApplicationPartManager PartManager { get; } Property Value Type Description ApplicationPartManager Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.Hosting.HostingStartupAssemblies.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Hosting.HostingStartupAssemblies.html",
    "title": "Class HostingStartupAssemblies | Documentations",
    "keywords": "Class HostingStartupAssemblies Inheritance System.Object HostingStartupAssemblies Namespace : Teronis.Mvc.Hosting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class HostingStartupAssemblies : object Fields | Improve this Doc View Source AspNetCoreHostingStartupAssembliesEnvironmentVariableName Declaration public const string AspNetCoreHostingStartupAssembliesEnvironmentVariableName = null Field Value Type Description System.String Methods | Improve this Doc View Source InjectHostingStartup(Assembly) Declaration public static void InjectHostingStartup(Assembly assembly) Parameters Type Name Description Assembly assembly | Improve this Doc View Source InjectHostingStartup(String) Declaration public static void InjectHostingStartup(string fullAssemblyName) Parameters Type Name Description System.String fullAssemblyName | Improve this Doc View Source InjectHostingStartup(Type) Declaration public static void InjectHostingStartup(Type typeInsideAssembly) Parameters Type Name Description Type typeInsideAssembly"
  },
  "Teronis.DotNet/Teronis.Mvc.Hosting.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Hosting.html",
    "title": "Namespace Teronis.Mvc.Hosting | Documentations",
    "keywords": "Namespace Teronis.Mvc.Hosting Classes ApplicationPartManagerOptions HostingStartupAssemblies IServiceCollectionExtensions"
  },
  "Teronis.DotNet/Teronis.Mvc.Hosting.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.Hosting.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Mvc.Hosting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source PostConfigureMvcBuilderContext(IServiceCollection, Action<MvcBuilderContext>) Declaration public static void PostConfigureMvcBuilderContext(this IServiceCollection services, Action<MvcBuilderContext> configurePartManager) Parameters Type Name Description IServiceCollection services Action < MvcBuilderContext > configurePartManager"
  },
  "Teronis.DotNet/Teronis.Mvc.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.html",
    "title": "Namespace Teronis.Mvc | Documentations",
    "keywords": "Namespace Teronis.Mvc Classes MvcBuilderContext MvcBuilderContextCreator TypesProvidingApplicationPart Enables you to inject custom controllers to application that are not auto-discovered."
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.AllowInheritancesAttribute.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.AllowInheritancesAttribute.html",
    "title": "Class AllowInheritancesAttribute | Documentations",
    "keywords": "Class AllowInheritancesAttribute Inheritance System.Object AllowInheritancesAttribute Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class AllowInheritancesAttribute : Attribute Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Filters | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Filters Classes ProblemDetailsActionFilter ProblemDetailsExceptionFilter"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.ProblemDetailsActionFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.ProblemDetailsActionFilter.html",
    "title": "Class ProblemDetailsActionFilter | Documentations",
    "keywords": "Class ProblemDetailsActionFilter Inheritance System.Object ProblemDetailsActionFilter Implements IOrderedFilter Namespace : Teronis.Mvc.JsonProblemDetails.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsActionFilter : IActionFilter, IOrderedFilter Constructors | Improve this Doc View Source ProblemDetailsActionFilter(ProblemDetailsMiddlewareContext, ProblemDetailsResultProvider, IOptions<ProblemDetailsOptions>) Declaration public ProblemDetailsActionFilter(ProblemDetailsMiddlewareContext problemDetailsMiddlewareContext, ProblemDetailsResultProvider problemDetailsResponseProvider, IOptions<ProblemDetailsOptions> options) Parameters Type Name Description ProblemDetailsMiddlewareContext problemDetailsMiddlewareContext ProblemDetailsResultProvider problemDetailsResponseProvider IOptions < ProblemDetailsOptions > options Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnActionExecuted(ActionExecutedContext) Declaration public void OnActionExecuted(ActionExecutedContext actionExecutedContext) Parameters Type Name Description ActionExecutedContext actionExecutedContext | Improve this Doc View Source OnActionExecuting(ActionExecutingContext) Declaration public void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description ActionExecutingContext context Implements IOrderedFilter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.ProblemDetailsExceptionFilter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Filters.ProblemDetailsExceptionFilter.html",
    "title": "Class ProblemDetailsExceptionFilter | Documentations",
    "keywords": "Class ProblemDetailsExceptionFilter Inheritance System.Object ProblemDetailsExceptionFilter Implements IOrderedFilter Namespace : Teronis.Mvc.JsonProblemDetails.Filters Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsExceptionFilter : IExceptionFilter, IOrderedFilter Constructors | Improve this Doc View Source ProblemDetailsExceptionFilter(ProblemDetailsMiddlewareContext, ProblemDetailsResultProvider, IOptions<ProblemDetailsOptions>) Declaration public ProblemDetailsExceptionFilter(ProblemDetailsMiddlewareContext problemDetailsMiddlewareContext, ProblemDetailsResultProvider problemDetailsResponseProvider, IOptions<ProblemDetailsOptions> options) Parameters Type Name Description ProblemDetailsMiddlewareContext problemDetailsMiddlewareContext ProblemDetailsResultProvider problemDetailsResponseProvider IOptions < ProblemDetailsOptions > options Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnException(ExceptionContext) Declaration public void OnException(ExceptionContext exceptionContext) Parameters Type Name Description ExceptionContext exceptionContext Implements IOrderedFilter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails Classes AllowInheritancesAttribute IApplicationBuilderExtensions IJsonProblemDetailsBuilderExtensions IServiceCollectionExtensions ProblemDetailsFactoryScoped Wraps the original and extends it. It is now dependent on creation. Accessible through ProblemDetailsFactory . ProblemDetailsMapperProvider ProblemDetailsOptions ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection ProblemDetailsOptionsExtensions ProblemDetailsResult ProblemDetailsResultExecutor ProblemDetailsResultProvider ProblemDetailsUtils StatusCodeException Interfaces IHasProblemDetailsStatusCode If implemented in mappable objects, then the StatusCode takes precendence over all other defined status codes. IJsonProblemDetailsBuilder"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IApplicationBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IApplicationBuilderExtensions.html",
    "title": "Class IApplicationBuilderExtensions | Documentations",
    "keywords": "Class IApplicationBuilderExtensions Inheritance System.Object IApplicationBuilderExtensions Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IApplicationBuilderExtensions : object Methods | Improve this Doc View Source UseProblemDetails(IApplicationBuilder) Use it to add ProblemDetailsMiddleware to pipeline. Place it as early as possible. Declaration public static IApplicationBuilder UseProblemDetails(this IApplicationBuilder builder) Parameters Type Name Description IApplicationBuilder builder The builder where middleware is about to be added. Returns Type Description IApplicationBuilder Same builder you passed through."
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IHasProblemDetailsStatusCode.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IHasProblemDetailsStatusCode.html",
    "title": "Interface IHasProblemDetailsStatusCode | Documentations",
    "keywords": "Interface IHasProblemDetailsStatusCode If implemented in mappable objects, then the StatusCode takes precendence over all other defined status codes. Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IHasProblemDetailsStatusCode Properties | Improve this Doc View Source StatusCode The status code that takes precendence over all other defined status codes. Declaration int StatusCode { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IJsonProblemDetailsBuilder.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IJsonProblemDetailsBuilder.html",
    "title": "Interface IJsonProblemDetailsBuilder | Documentations",
    "keywords": "Interface IJsonProblemDetailsBuilder Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IJsonProblemDetailsBuilder Properties | Improve this Doc View Source Services Declaration IServiceCollection Services { get; } Property Value Type Description IServiceCollection Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IJsonProblemDetailsBuilderExtensions.AddJsonProblemDetails(IJsonProblemDetailsBuilder, Nullable<Action<ProblemDetailsOptions>>) IJsonProblemDetailsBuilderExtensions.ConfigureApiBehaviourOptions(IJsonProblemDetailsBuilder) IJsonProblemDetailsBuilderExtensions.ConfigureApiVersioningOptions(IJsonProblemDetailsBuilder)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IJsonProblemDetailsBuilderExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IJsonProblemDetailsBuilderExtensions.html",
    "title": "Class IJsonProblemDetailsBuilderExtensions | Documentations",
    "keywords": "Class IJsonProblemDetailsBuilderExtensions Inheritance System.Object IJsonProblemDetailsBuilderExtensions Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IJsonProblemDetailsBuilderExtensions : object Methods | Improve this Doc View Source AddJsonProblemDetails(IJsonProblemDetailsBuilder, Nullable<Action<ProblemDetailsOptions>>) Adds the problem details services to Services . The filters ProblemDetailsActionFilter and ProblemDetailsExceptionFilter are added to via . This means the order of configuring matters. Declaration public static IJsonProblemDetailsBuilder AddJsonProblemDetails(this IJsonProblemDetailsBuilder builder, Action<ProblemDetailsOptions>? configureOptions = null) Parameters Type Name Description IJsonProblemDetailsBuilder builder System.Nullable < Action < ProblemDetailsOptions >> configureOptions Returns Type Description IJsonProblemDetailsBuilder | Improve this Doc View Source ConfigureApiBehaviourOptions(IJsonProblemDetailsBuilder) This methods adds json problem details abilities to via . This means the order of configuring matters. You have to call it after calling , or similiar. Declaration public static IJsonProblemDetailsBuilder ConfigureApiBehaviourOptions(this IJsonProblemDetailsBuilder builder) Parameters Type Name Description IJsonProblemDetailsBuilder builder Returns Type Description IJsonProblemDetailsBuilder | Improve this Doc View Source ConfigureApiVersioningOptions(IJsonProblemDetailsBuilder) This methods adds json problem details abilities to via . This means the order of configuring matters. You have to call it after . Declaration public static IJsonProblemDetailsBuilder ConfigureApiVersioningOptions(this IJsonProblemDetailsBuilder builder) Parameters Type Name Description IJsonProblemDetailsBuilder builder Returns Type Description IJsonProblemDetailsBuilder"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IServiceCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.IServiceCollectionExtensions.html",
    "title": "Class IServiceCollectionExtensions | Documentations",
    "keywords": "Class IServiceCollectionExtensions Inheritance System.Object IServiceCollectionExtensions Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceCollectionExtensions : object Methods | Improve this Doc View Source CreateJsonProblemDetailsBuilder(IServiceCollection) Declaration public static IJsonProblemDetailsBuilder CreateJsonProblemDetailsBuilder(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IJsonProblemDetailsBuilder"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.DefaultActionResultObjectResolver.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.DefaultActionResultObjectResolver.html",
    "title": "Class DefaultActionResultObjectResolver | Documentations",
    "keywords": "Class DefaultActionResultObjectResolver Inheritance System.Object DefaultActionResultObjectResolver Implements IMappableObjectResolver Namespace : Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class DefaultActionResultObjectResolver : object, IMappableObjectResolver Methods | Improve this Doc View Source TryResolveObject(IActionResult, out Object) Declaration public bool TryResolveObject(IActionResult result, out object resolvedObject) Parameters Type Name Description IActionResult result System.Object resolvedObject Returns Type Description System.Boolean Implements IMappableObjectResolver Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers Classes DefaultActionResultObjectResolver Interfaces IMappableObjectResolver"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.IMappableObjectResolver.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers.IMappableObjectResolver.html",
    "title": "Interface IMappableObjectResolver | Documentations",
    "keywords": "Interface IMappableObjectResolver Namespace : Teronis.Mvc.JsonProblemDetails.MappableObjectResolvers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IMappableObjectResolver Methods | Improve this Doc View Source TryResolveObject(IActionResult, out Object) Declaration bool TryResolveObject(IActionResult result, out object resolvedObject) Parameters Type Name Description IActionResult result System.Object resolvedObject Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.AggregateExceptionProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.AggregateExceptionProblemDetailsMapper.html",
    "title": "Class AggregateExceptionProblemDetailsMapper | Documentations",
    "keywords": "Class AggregateExceptionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper < KeyedAggregateException > ExceptionProblemDetailsMapper < KeyedAggregateException > AggregateExceptionProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ProblemDetailsMapper<KeyedAggregateException>.MapperContext ProblemDetailsMapper<KeyedAggregateException>.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class AggregateExceptionProblemDetailsMapper : ExceptionProblemDetailsMapper<KeyedAggregateException>, IProblemDetailsMapper Constructors | Improve this Doc View Source AggregateExceptionProblemDetailsMapper(IMapperContext<KeyedAggregateException>, ExceptionContext) Declaration public AggregateExceptionProblemDetailsMapper(IMapperContext<KeyedAggregateException> mapperContext, ExceptionContext exceptionContext) Parameters Type Name Description IMapperContext < KeyedAggregateException > mapperContext ExceptionContext exceptionContext Methods | Improve this Doc View Source CreateProblemDetails() Declaration public override ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Overrides Teronis.Mvc.JsonProblemDetails.Mappers.ExceptionProblemDetailsMapper<Teronis.KeyedAggregateException>.CreateProblemDetails() Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ApiVersionProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ApiVersionProblemDetailsMapper.html",
    "title": "Class ApiVersionProblemDetailsMapper | Documentations",
    "keywords": "Class ApiVersionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper < ErrorResponseContext > ApiVersionProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ProblemDetailsMapper<ErrorResponseContext>.MapperContext ProblemDetailsMapper<ErrorResponseContext>.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ApiVersionProblemDetailsMapper : ProblemDetailsMapper<ErrorResponseContext>, IProblemDetailsMapper Constructors | Improve this Doc View Source ApiVersionProblemDetailsMapper(IMapperContext<ErrorResponseContext>) Declaration public ApiVersionProblemDetailsMapper(IMapperContext<ErrorResponseContext> mapperContext) Parameters Type Name Description IMapperContext < ErrorResponseContext > mapperContext Methods | Improve this Doc View Source CreateProblemDetails() Declaration public override ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Overrides Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper<ErrorResponseContext>.CreateProblemDetails() Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.DefaultExceptionProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.DefaultExceptionProblemDetailsMapper.html",
    "title": "Class DefaultExceptionProblemDetailsMapper | Documentations",
    "keywords": "Class DefaultExceptionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper < Exception > ExceptionProblemDetailsMapper < Exception > DefaultExceptionProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ExceptionProblemDetailsMapper<Exception>.CreateProblemDetails() ProblemDetailsMapper<Exception>.MapperContext ProblemDetailsMapper<Exception>.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class DefaultExceptionProblemDetailsMapper : ExceptionProblemDetailsMapper<Exception>, IProblemDetailsMapper Constructors | Improve this Doc View Source DefaultExceptionProblemDetailsMapper(IMapperContext<Exception>, ExceptionContext) Declaration public DefaultExceptionProblemDetailsMapper(IMapperContext<Exception> mapperContext, ExceptionContext exceptionContext) Parameters Type Name Description IMapperContext < Exception > mapperContext ExceptionContext exceptionContext Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Mappers.Description | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Mappers.Description Classes ProblemDetailsMapperDescriptor ProblemDetailsMapperDescriptorOptions ProblemDetailsMapperDescriptorOptionsExtensions ProblemDetailsMapperDescriptorUtils StatusCodeRange"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptor.html",
    "title": "Class ProblemDetailsMapperDescriptor | Documentations",
    "keywords": "Class ProblemDetailsMapperDescriptor Inheritance System.Object ProblemDetailsMapperDescriptor Namespace : Teronis.Mvc.JsonProblemDetails.Mappers.Description Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMapperDescriptor : object Constructors | Improve this Doc View Source ProblemDetailsMapperDescriptor(Type, Boolean, Nullable<IEnumerable<Int32>>) Declaration public ProblemDetailsMapperDescriptor(Type mapperType, bool allowDerivedMapperSourceObjectTypes, IEnumerable<int>? statusCodes) Parameters Type Name Description Type mapperType System.Boolean allowDerivedMapperSourceObjectTypes System.Nullable < IEnumerable < System.Int32 >> statusCodes Properties | Improve this Doc View Source AllowDerivedMapperSourceObjectTypes Declaration public bool AllowDerivedMapperSourceObjectTypes { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MappableObjectType Declaration public Type? MappableObjectType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source MapperConstructorsByArea Declaration public IReadOnlyDictionary<MapperConstructorArea, ReadOnlyCollection<MapperConstructorEvaluation>> MapperConstructorsByArea { get; } Property Value Type Description IReadOnlyDictionary < MapperConstructorArea , ReadOnlyCollection < MapperConstructorEvaluation >> | Improve this Doc View Source MapperType Declaration public Type MapperType { get; } Property Value Type Description Type | Improve this Doc View Source StatusCodes One or the other status code has to be contained so that the descriptor is chosen. If null this property is ignored. Declaration public IReadOnlyCollection<int>? StatusCodes { get; } Property Value Type Description System.Nullable < IReadOnlyCollection < System.Int32 >> | Improve this Doc View Source StatusCodesRepresentsRange If true StatusCodes contains two sorted values which represents a range. Declaration public bool StatusCodesRepresentsRange { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source IsStatusCodeSuitable(Nullable<Int32>) Declaration public bool IsStatusCodeSuitable(int? statusCode) Parameters Type Name Description System.Nullable < System.Int32 > statusCode Returns Type Description System.Boolean | Improve this Doc View Source TryFindConstructor(Int32, MapperConstructorArea, Nullable<Type>, out Nullable<(MapperConstructorEvaluation ConstructorEvaluation, Int32 NextIndex)>, Nullable<Boolean>) Declaration public bool TryFindConstructor(int startIndex, MapperConstructorArea area, Type? mappableObjectType, out (MapperConstructorEvaluation ConstructorEvaluation, int NextIndex)? foundConstructor, bool? globalAllowDerivedMappableObjectTypes = null) Parameters Type Name Description System.Int32 startIndex MapperConstructorArea area System.Nullable < Type > mappableObjectType System.Nullable < System.ValueTuple < MapperConstructorEvaluation , System.Int32 >> foundConstructor System.Nullable < System.Boolean > globalAllowDerivedMappableObjectTypes Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorOptions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorOptions.html",
    "title": "Class ProblemDetailsMapperDescriptorOptions | Documentations",
    "keywords": "Class ProblemDetailsMapperDescriptorOptions Inheritance System.Object ProblemDetailsMapperDescriptorOptions Namespace : Teronis.Mvc.JsonProblemDetails.Mappers.Description Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMapperDescriptorOptions : object Constructors | Improve this Doc View Source ProblemDetailsMapperDescriptorOptions() Declaration public ProblemDetailsMapperDescriptorOptions() Properties | Improve this Doc View Source AllowDerivedMappableObjectTypes Declaration public bool AllowDerivedMappableObjectTypes { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StatusCodes Declaration public IEnumerable<int>? StatusCodes { get; set; } Property Value Type Description System.Nullable < IEnumerable < System.Int32 >> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ProblemDetailsMapperDescriptorOptionsExtensions.AllowDerivedMappableObjectTypes(ProblemDetailsMapperDescriptorOptions, Boolean) ProblemDetailsMapperDescriptorOptionsExtensions.WithStatusCodeRange(ProblemDetailsMapperDescriptorOptions, Int32, Int32) ProblemDetailsMapperDescriptorOptionsExtensions.WithStatusCodeRange(ProblemDetailsMapperDescriptorOptions, HttpStatusCode, HttpStatusCode) ProblemDetailsMapperDescriptorOptionsExtensions.WithStatusCodes(ProblemDetailsMapperDescriptorOptions, Nullable<IEnumerable<Int32>>) ProblemDetailsMapperDescriptorOptionsExtensions.WithStatusCodes(ProblemDetailsMapperDescriptorOptions, Int32[])"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorOptionsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorOptionsExtensions.html",
    "title": "Class ProblemDetailsMapperDescriptorOptionsExtensions | Documentations",
    "keywords": "Class ProblemDetailsMapperDescriptorOptionsExtensions Inheritance System.Object ProblemDetailsMapperDescriptorOptionsExtensions Namespace : Teronis.Mvc.JsonProblemDetails.Mappers.Description Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ProblemDetailsMapperDescriptorOptionsExtensions : object Methods | Improve this Doc View Source AllowDerivedMappableObjectTypes(ProblemDetailsMapperDescriptorOptions, Boolean) Declaration public static ProblemDetailsMapperDescriptorOptions AllowDerivedMappableObjectTypes(this ProblemDetailsMapperDescriptorOptions options, bool allowDerivedMapperSourceObjectTypes = true) Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options System.Boolean allowDerivedMapperSourceObjectTypes Returns Type Description ProblemDetailsMapperDescriptorOptions | Improve this Doc View Source WithStatusCodeRange(ProblemDetailsMapperDescriptorOptions, HttpStatusCode, HttpStatusCode) Declaration public static ProblemDetailsMapperDescriptorOptions WithStatusCodeRange(this ProblemDetailsMapperDescriptorOptions options, HttpStatusCode beginStatusCode, HttpStatusCode endStatusCode) Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options HttpStatusCode beginStatusCode HttpStatusCode endStatusCode Returns Type Description ProblemDetailsMapperDescriptorOptions | Improve this Doc View Source WithStatusCodeRange(ProblemDetailsMapperDescriptorOptions, Int32, Int32) Declaration public static ProblemDetailsMapperDescriptorOptions WithStatusCodeRange(this ProblemDetailsMapperDescriptorOptions options, int beginStatusCode, int endStatusCode) Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options System.Int32 beginStatusCode System.Int32 endStatusCode Returns Type Description ProblemDetailsMapperDescriptorOptions | Improve this Doc View Source WithStatusCodes(ProblemDetailsMapperDescriptorOptions, Int32[]) Declaration public static ProblemDetailsMapperDescriptorOptions WithStatusCodes(this ProblemDetailsMapperDescriptorOptions options, params int[] statusCodes) Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options System.Int32 [] statusCodes The value null is assumed if empty. Returns Type Description ProblemDetailsMapperDescriptorOptions | Improve this Doc View Source WithStatusCodes(ProblemDetailsMapperDescriptorOptions, Nullable<IEnumerable<Int32>>) Declaration public static ProblemDetailsMapperDescriptorOptions WithStatusCodes(this ProblemDetailsMapperDescriptorOptions options, IEnumerable<int>? statusCodes) Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options System.Nullable < IEnumerable < System.Int32 >> statusCodes Returns Type Description ProblemDetailsMapperDescriptorOptions"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorUtils.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.ProblemDetailsMapperDescriptorUtils.html",
    "title": "Class ProblemDetailsMapperDescriptorUtils | Documentations",
    "keywords": "Class ProblemDetailsMapperDescriptorUtils Inheritance System.Object ProblemDetailsMapperDescriptorUtils Namespace : Teronis.Mvc.JsonProblemDetails.Mappers.Description Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ProblemDetailsMapperDescriptorUtils : object Methods | Improve this Doc View Source FindAreaForEachConstructor(Type) Declaration public static Dictionary<MapperConstructorArea, ReadOnlyCollection<MapperConstructorEvaluation>> FindAreaForEachConstructor(Type mapperType) Parameters Type Name Description Type mapperType Returns Type Description Dictionary < MapperConstructorArea , ReadOnlyCollection < MapperConstructorEvaluation >>"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.StatusCodeRange.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.Description.StatusCodeRange.html",
    "title": "Class StatusCodeRange | Documentations",
    "keywords": "Class StatusCodeRange Inheritance System.Object StatusCodeRange Namespace : Teronis.Mvc.JsonProblemDetails.Mappers.Description Assembly : Teronis.AspNetCore.Mvc.dll Syntax public sealed class StatusCodeRange : IEnumerable<int> Constructors | Improve this Doc View Source StatusCodeRange(Int32, Int32) Declaration public StatusCodeRange(int begin, int end) Parameters Type Name Description System.Int32 begin System.Int32 end Properties | Improve this Doc View Source Begin Declaration public int Begin { get; } Property Value Type Description System.Int32 | Improve this Doc View Source End Declaration public int End { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < System.Int32 > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ExceptionProblemDetailsMapper-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ExceptionProblemDetailsMapper-1.html",
    "title": "Class ExceptionProblemDetailsMapper<TException> | Documentations",
    "keywords": "Class ExceptionProblemDetailsMapper<TException> Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper <TException> ExceptionProblemDetailsMapper<TException> AggregateExceptionProblemDetailsMapper DefaultExceptionProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ProblemDetailsMapper<TException>.MapperContext ProblemDetailsMapper<TException>.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ExceptionProblemDetailsMapper<TException> : ProblemDetailsMapper<TException>, IProblemDetailsMapper where TException : Exception Type Parameters Name Description TException Constructors | Improve this Doc View Source ExceptionProblemDetailsMapper(IMapperContext<TException>, ExceptionContext) Declaration public ExceptionProblemDetailsMapper(IMapperContext<TException> mapperContext, ExceptionContext _) Parameters Type Name Description IMapperContext <TException> mapperContext ExceptionContext _ Methods | Improve this Doc View Source CreateProblemDetails() Declaration public override ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Overrides Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper<TException>.CreateProblemDetails() Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Mappers | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Mappers Classes AggregateExceptionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. ApiVersionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. DefaultExceptionProblemDetailsMapper Method CanMap() is defaultly implemented to return true. ExceptionProblemDetailsMapper<TException> Method CanMap() is defaultly implemented to return true. MapperContext MapperContext<ObjectType> ModelStateProblemDetailsMapper Method CanMap() is defaultly implemented to return true. ProblemDetailsMapper Method CanMap() is defaultly implemented to return true. ProblemDetailsMapper<MappableObjectType> Method CanMap() is defaultly implemented to return true. StatusCodeProblemDetailsMapper A mapper for StatusCode . It's going to be visited from all problem details filters as long as not handled. Method CanMap() is defaultly implemented to return . You may describe StatusCodes instead inheriting from this class and overriding CanMap() . Interfaces IMapperContext IMapperContext<MappableObjectType> IProblemDetailsMapper"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IMapperContext.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IMapperContext.html",
    "title": "Interface IMapperContext | Documentations",
    "keywords": "Interface IMapperContext Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IMapperContext Properties | Improve this Doc View Source ProblemDetailsFactory Declaration ProblemDetailsFactoryScoped ProblemDetailsFactory { get; } Property Value Type Description ProblemDetailsFactoryScoped | Improve this Doc View Source StatusCode This is the status code that has been provided by StatusCode . Declaration int? StatusCode { get; } Property Value Type Description System.Nullable < System.Int32 > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IMapperContext-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IMapperContext-1.html",
    "title": "Interface IMapperContext<MappableObjectType> | Documentations",
    "keywords": "Interface IMapperContext<MappableObjectType> Inherited Members IMapperContext.StatusCode IMapperContext.ProblemDetailsFactory Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IMapperContext<out MappableObjectType> : IMapperContext Type Parameters Name Description MappableObjectType Properties | Improve this Doc View Source MappableObject Declaration MappableObjectType MappableObject { get; } Property Value Type Description MappableObjectType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.IProblemDetailsMapper.html",
    "title": "Interface IProblemDetailsMapper | Documentations",
    "keywords": "Interface IProblemDetailsMapper Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IProblemDetailsMapper Methods | Improve this Doc View Source CanMap() Declaration bool CanMap() Returns Type Description System.Boolean | Improve this Doc View Source CreateProblemDetails() Declaration ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.MapperContext.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.MapperContext.html",
    "title": "Class MapperContext | Documentations",
    "keywords": "Class MapperContext Inheritance System.Object MapperContext Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class MapperContext : object"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.MapperContext-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.MapperContext-1.html",
    "title": "Class MapperContext<ObjectType> | Documentations",
    "keywords": "Class MapperContext<ObjectType> Inheritance System.Object MapperContext<ObjectType> Implements IMapperContext <ObjectType> IMapperContext Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class MapperContext<ObjectType> : object, IMapperContext<ObjectType>, IMapperContext Type Parameters Name Description ObjectType Constructors | Improve this Doc View Source MapperContext(ObjectType, Nullable<Int32>, ProblemDetailsFactoryScoped) Declaration public MapperContext(ObjectType mappableObject, int? statusCode, ProblemDetailsFactoryScoped problemDetailsFactory) Parameters Type Name Description ObjectType mappableObject System.Nullable < System.Int32 > statusCode ProblemDetailsFactoryScoped problemDetailsFactory Properties | Improve this Doc View Source MappableObject Declaration public ObjectType MappableObject { get; } Property Value Type Description ObjectType | Improve this Doc View Source ProblemDetailsFactory Declaration public ProblemDetailsFactoryScoped ProblemDetailsFactory { get; } Property Value Type Description ProblemDetailsFactoryScoped | Improve this Doc View Source StatusCode Declaration public int? StatusCode { get; } Property Value Type Description System.Nullable < System.Int32 > Implements IMapperContext<MappableObjectType> IMapperContext Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ModelStateProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ModelStateProblemDetailsMapper.html",
    "title": "Class ModelStateProblemDetailsMapper | Documentations",
    "keywords": "Class ModelStateProblemDetailsMapper Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper < ModelStateDictionary > ModelStateProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ProblemDetailsMapper<ModelStateDictionary>.MapperContext ProblemDetailsMapper<ModelStateDictionary>.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ModelStateProblemDetailsMapper : ProblemDetailsMapper<ModelStateDictionary>, IProblemDetailsMapper Constructors | Improve this Doc View Source ModelStateProblemDetailsMapper(IMapperContext<ModelStateDictionary>) Declaration public ModelStateProblemDetailsMapper(IMapperContext<ModelStateDictionary> mapperContext) Parameters Type Name Description IMapperContext < ModelStateDictionary > mapperContext Methods | Improve this Doc View Source CreateProblemDetails() Declaration public override ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Overrides Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper<ModelStateDictionary>.CreateProblemDetails() Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper.html",
    "title": "Class ProblemDetailsMapper | Documentations",
    "keywords": "Class ProblemDetailsMapper Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper StatusCodeProblemDetailsMapper Implements IProblemDetailsMapper Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public abstract class ProblemDetailsMapper : object, IProblemDetailsMapper Constructors | Improve this Doc View Source ProblemDetailsMapper(IMapperContext) Declaration public ProblemDetailsMapper(IMapperContext mapperContext) Parameters Type Name Description IMapperContext mapperContext Properties | Improve this Doc View Source MapperContext Declaration public IMapperContext MapperContext { get; } Property Value Type Description IMapperContext Methods | Improve this Doc View Source CanMap() Declaration public virtual bool CanMap() Returns Type Description System.Boolean | Improve this Doc View Source CreateProblemDetails() Declaration public virtual ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.ProblemDetailsMapper-1.html",
    "title": "Class ProblemDetailsMapper<MappableObjectType> | Documentations",
    "keywords": "Class ProblemDetailsMapper<MappableObjectType> Method CanMap() is defaultly implemented to return true. Inheritance System.Object ProblemDetailsMapper<MappableObjectType> ApiVersionProblemDetailsMapper ExceptionProblemDetailsMapper<TException> ModelStateProblemDetailsMapper Implements IProblemDetailsMapper Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public abstract class ProblemDetailsMapper<MappableObjectType> : object, IProblemDetailsMapper Type Parameters Name Description MappableObjectType Constructors | Improve this Doc View Source ProblemDetailsMapper(IMapperContext<MappableObjectType>) Declaration public ProblemDetailsMapper(IMapperContext<MappableObjectType> mapperContext) Parameters Type Name Description IMapperContext <MappableObjectType> mapperContext Properties | Improve this Doc View Source MapperContext Declaration public IMapperContext<MappableObjectType> MapperContext { get; } Property Value Type Description IMapperContext <MappableObjectType> Methods | Improve this Doc View Source CanMap() Declaration public virtual bool CanMap() Returns Type Description System.Boolean | Improve this Doc View Source CreateProblemDetails() Declaration public abstract ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.StatusCodeProblemDetailsMapper.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Mappers.StatusCodeProblemDetailsMapper.html",
    "title": "Class StatusCodeProblemDetailsMapper | Documentations",
    "keywords": "Class StatusCodeProblemDetailsMapper A mapper for StatusCode . It's going to be visited from all problem details filters as long as not handled. Method CanMap() is defaultly implemented to return . You may describe StatusCodes instead inheriting from this class and overriding CanMap() . Inheritance System.Object ProblemDetailsMapper StatusCodeProblemDetailsMapper Implements IProblemDetailsMapper Inherited Members ProblemDetailsMapper.MapperContext ProblemDetailsMapper.CanMap() Namespace : Teronis.Mvc.JsonProblemDetails.Mappers Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class StatusCodeProblemDetailsMapper : ProblemDetailsMapper, IProblemDetailsMapper Constructors | Improve this Doc View Source StatusCodeProblemDetailsMapper(IMapperContext, ActionExecutedContext) Declaration public StatusCodeProblemDetailsMapper(IMapperContext mapperContext, ActionExecutedContext context) Parameters Type Name Description IMapperContext mapperContext ActionExecutedContext context | Improve this Doc View Source StatusCodeProblemDetailsMapper(IMapperContext, ExceptionContext) Declaration public StatusCodeProblemDetailsMapper(IMapperContext mapperContext, ExceptionContext context) Parameters Type Name Description IMapperContext mapperContext ExceptionContext context | Improve this Doc View Source StatusCodeProblemDetailsMapper(IMapperContext, HttpContext) Declaration public StatusCodeProblemDetailsMapper(IMapperContext mapperContext, HttpContext context) Parameters Type Name Description IMapperContext mapperContext HttpContext context Properties | Improve this Doc View Source StatusCode The status code is set from . As we only compare to status code, we do not regard StatusCode . Declaration public virtual int StatusCode { get; protected set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source CreateProblemDetails() Declaration public override ProblemDetails CreateProblemDetails() Returns Type Description ProblemDetails Overrides ProblemDetailsMapper.CreateProblemDetails() Implements IProblemDetailsMapper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Middleware | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Middleware Classes ProblemDetailsMiddleware ProblemDetailsMiddlewareContext ProblemDetailsMiddlewareContextExtensions ProblemDetailsMiddlewareContextProxy"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddleware.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddleware.html",
    "title": "Class ProblemDetailsMiddleware | Documentations",
    "keywords": "Class ProblemDetailsMiddleware Inheritance System.Object ProblemDetailsMiddleware Namespace : Teronis.Mvc.JsonProblemDetails.Middleware Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMiddleware : object Constructors | Improve this Doc View Source ProblemDetailsMiddleware(RequestDelegate, ProblemDetailsMiddlewareContextProxy, ProblemDetailsResultProvider, Nullable<ILogger<ProblemDetailsMiddleware>>) Declaration public ProblemDetailsMiddleware(RequestDelegate nextRequestDelegate, ProblemDetailsMiddlewareContextProxy problemDetailsMiddlewareContextProxy, ProblemDetailsResultProvider problemDetailsResponseProvider, ILogger<ProblemDetailsMiddleware>? logger) Parameters Type Name Description RequestDelegate nextRequestDelegate ProblemDetailsMiddlewareContextProxy problemDetailsMiddlewareContextProxy ProblemDetailsResultProvider problemDetailsResponseProvider System.Nullable < ILogger < ProblemDetailsMiddleware >> logger Methods | Improve this Doc View Source Invoke(HttpContext, ProblemDetailsMiddlewareContext, IActionResultExecutor<ProblemDetailsResult>) Declaration public Task Invoke(HttpContext httpContext, ProblemDetailsMiddlewareContext middlewareContext, IActionResultExecutor<ProblemDetailsResult> resultExecutor) Parameters Type Name Description HttpContext httpContext ProblemDetailsMiddlewareContext middlewareContext IActionResultExecutor < ProblemDetailsResult > resultExecutor Returns Type Description Task | Improve this Doc View Source StartResponseAsync(HttpContext) Declaration protected virtual Task StartResponseAsync(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContext.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContext.html",
    "title": "Class ProblemDetailsMiddlewareContext | Documentations",
    "keywords": "Class ProblemDetailsMiddlewareContext Inheritance System.Object ProblemDetailsMiddlewareContext Namespace : Teronis.Mvc.JsonProblemDetails.Middleware Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMiddlewareContext : object Properties | Improve this Doc View Source FaultyConditionalResult Only taken when MappableObject cannot be mapped. Declaration public ProblemDetailsResult FaultyConditionalResult { get; set; } Property Value Type Description ProblemDetailsResult | Improve this Doc View Source Handled if HandledResult is not null. Declaration public bool Handled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HandledResult The result that has been written to response. Declaration public ProblemDetailsResult HandledResult { get; } Property Value Type Description ProblemDetailsResult | Improve this Doc View Source MappableObject If not null the object is going to to be expected definitely being mapped. Otherwise FaultyConditionalResult or erroneous default result will be taken as response. Declaration public object? MappableObject { get; set; } Property Value Type Description System.Nullable < System.Object > Methods | Improve this Doc View Source IsFilterSkippable() You may call this from a or . Declaration public bool IsFilterSkippable() Returns Type Description System.Boolean if filter is skippable. | Improve this Doc View Source SetHandled(ProblemDetailsResult) Declaration public void SetHandled(ProblemDetailsResult result) Parameters Type Name Description ProblemDetailsResult result Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ProblemDetailsMiddlewareContextExtensions.CanSkipFilter(ProblemDetailsMiddlewareContext)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContextExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContextExtensions.html",
    "title": "Class ProblemDetailsMiddlewareContextExtensions | Documentations",
    "keywords": "Class ProblemDetailsMiddlewareContextExtensions Inheritance System.Object ProblemDetailsMiddlewareContextExtensions Namespace : Teronis.Mvc.JsonProblemDetails.Middleware Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ProblemDetailsMiddlewareContextExtensions : object Methods | Improve this Doc View Source CanSkipFilter(ProblemDetailsMiddlewareContext) Declaration public static bool CanSkipFilter(this ProblemDetailsMiddlewareContext middlewareContext) Parameters Type Name Description ProblemDetailsMiddlewareContext middlewareContext Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContextProxy.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Middleware.ProblemDetailsMiddlewareContextProxy.html",
    "title": "Class ProblemDetailsMiddlewareContextProxy | Documentations",
    "keywords": "Class ProblemDetailsMiddlewareContextProxy Inheritance System.Object ProblemDetailsMiddlewareContextProxy Namespace : Teronis.Mvc.JsonProblemDetails.Middleware Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMiddlewareContextProxy : object Properties | Improve this Doc View Source MiddlewareContext Declaration public ProblemDetailsMiddlewareContext MiddlewareContext { get; set; } Property Value Type Description ProblemDetailsMiddlewareContext Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsFactoryScoped.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsFactoryScoped.html",
    "title": "Class ProblemDetailsFactoryScoped | Documentations",
    "keywords": "Class ProblemDetailsFactoryScoped Wraps the original and extends it. It is now dependent on creation. Accessible through ProblemDetailsFactory . Inheritance System.Object ProblemDetailsFactoryScoped Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsFactoryScoped : object Constructors | Improve this Doc View Source ProblemDetailsFactoryScoped(ProblemDetailsFactory, HttpContext) Declaration public ProblemDetailsFactoryScoped(ProblemDetailsFactory problemDetailsFactory, HttpContext httpContext) Parameters Type Name Description ProblemDetailsFactory problemDetailsFactory HttpContext httpContext Methods | Improve this Doc View Source ApplyAlternativeProblemDetails(ProblemDetails, ProblemDetails) Declaration protected virtual void ApplyAlternativeProblemDetails(ProblemDetails problemDetails, ProblemDetails alternativeProblemDetails) Parameters Type Name Description ProblemDetails problemDetails ProblemDetails alternativeProblemDetails | Improve this Doc View Source ApplyExceptionDetails(ProblemDetails, Exception) Declaration protected virtual void ApplyExceptionDetails(ProblemDetails problemDetails, Exception exception) Parameters Type Name Description ProblemDetails problemDetails Exception exception | Improve this Doc View Source CreateProblemDetails(Exception, Nullable<Int32>) Declaration public virtual ProblemDetails CreateProblemDetails(Exception exception, int? statusCode = null) Parameters Type Name Description Exception exception System.Nullable < System.Int32 > statusCode Returns Type Description ProblemDetails | Improve this Doc View Source CreateProblemDetails(Nullable<Int32>, Nullable<String>, Nullable<String>, Nullable<String>, Nullable<String>) Declaration public virtual ProblemDetails CreateProblemDetails(int? statusCode = null, string? title = null, string? type = null, string? detail = null, string? instance = null) Parameters Type Name Description System.Nullable < System.Int32 > statusCode System.Nullable < System.String > title System.Nullable < System.String > type System.Nullable < System.String > detail System.Nullable < System.String > instance Returns Type Description ProblemDetails | Improve this Doc View Source CreateValidationProblemDetails(AggregateException, Nullable<Int32>) Declaration public virtual ValidationProblemDetails CreateValidationProblemDetails(AggregateException aggregateException, int? statusCode = null) Parameters Type Name Description AggregateException aggregateException System.Nullable < System.Int32 > statusCode Returns Type Description ValidationProblemDetails | Improve this Doc View Source CreateValidationProblemDetails(IDictionary<String, String[]>, Nullable<Int32>, Nullable<String>, Nullable<String>, Nullable<String>, Nullable<String>) Declaration public virtual ValidationProblemDetails CreateValidationProblemDetails(IDictionary<string, string[]> errors, int? statusCode = null, string? title = null, string? type = null, string? detail = null, string? instance = null) Parameters Type Name Description IDictionary < System.String , System.String []> errors System.Nullable < System.Int32 > statusCode System.Nullable < System.String > title System.Nullable < System.String > type System.Nullable < System.String > detail System.Nullable < System.String > instance Returns Type Description ValidationProblemDetails | Improve this Doc View Source CreateValidationProblemDetails(ModelStateDictionary, Nullable<Int32>, Nullable<String>, Nullable<String>, Nullable<String>, Nullable<String>) Declaration public virtual ValidationProblemDetails CreateValidationProblemDetails(ModelStateDictionary modelStateDictionary, int? statusCode = null, string? title = null, string? type = null, string? detail = null, string? instance = null) Parameters Type Name Description ModelStateDictionary modelStateDictionary System.Nullable < System.Int32 > statusCode System.Nullable < System.String > title System.Nullable < System.String > type System.Nullable < System.String > detail System.Nullable < System.String > instance Returns Type Description ValidationProblemDetails | Improve this Doc View Source CreateValidationProblemDetails(Nullable<Int32>, Nullable<String>, Nullable<String>, Nullable<String>, Nullable<String>) Declaration protected virtual ValidationProblemDetails CreateValidationProblemDetails(int? statusCode = null, string? title = null, string? type = null, string? detail = null, string? instance = null) Parameters Type Name Description System.Nullable < System.Int32 > statusCode System.Nullable < System.String > title System.Nullable < System.String > type System.Nullable < System.String > detail System.Nullable < System.String > instance Returns Type Description ValidationProblemDetails | Improve this Doc View Source CreateValidationProblemDetails(KeyedAggregateException, Nullable<Int32>) Declaration public virtual ValidationProblemDetails CreateValidationProblemDetails(KeyedAggregateException keyedAggregateException, int? statusCode = null) Parameters Type Name Description KeyedAggregateException keyedAggregateException System.Nullable < System.Int32 > statusCode Returns Type Description ValidationProblemDetails | Improve this Doc View Source GetAlternativeExcpetionStatusCode(Nullable<Exception>) Declaration protected virtual int? GetAlternativeExcpetionStatusCode(Exception? exception) Parameters Type Name Description System.Nullable < Exception > exception Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source GetAlternativeInstance() Gets the alternative instance string value. Declaration protected virtual string? GetAlternativeInstance() Returns Type Description System.Nullable < System.String > The alternative instance string. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsMapperProvider.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsMapperProvider.html",
    "title": "Class ProblemDetailsMapperProvider | Documentations",
    "keywords": "Class ProblemDetailsMapperProvider Inheritance System.Object ProblemDetailsMapperProvider Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMapperProvider : object Constructors | Improve this Doc View Source ProblemDetailsMapperProvider(IServiceProvider) Declaration public ProblemDetailsMapperProvider(IServiceProvider applicationServiceProvider) Parameters Type Name Description IServiceProvider applicationServiceProvider Methods | Improve this Doc View Source TryCreateMapper(ProblemDetailsMapperDescriptor, MapperConstructorEvaluation, IServiceProvider, out IProblemDetailsMapper) Tries to create a mapper. Declaration public bool TryCreateMapper(ProblemDetailsMapperDescriptor descriptor, MapperConstructorEvaluation mapperConstructor, IServiceProvider problemDetailsServiceProvider, out IProblemDetailsMapper mapper) Parameters Type Name Description ProblemDetailsMapperDescriptor descriptor A mapper descriptor. MapperConstructorEvaluation mapperConstructor One mapper constructor from descriptor . IServiceProvider problemDetailsServiceProvider A custom built service provider that can resolve the following services: IMapperContext and one of the following: , or . IProblemDetailsMapper mapper The created mapper. Returns Type Description System.Boolean if mapper could be created otherwise . Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptions.html",
    "title": "Class ProblemDetailsOptions | Documentations",
    "keywords": "Class ProblemDetailsOptions Inheritance System.Object ProblemDetailsOptions Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsOptions : object Constructors | Improve this Doc View Source ProblemDetailsOptions() Declaration public ProblemDetailsOptions() Properties | Improve this Doc View Source ActionResultFilterOrder Order of execution of ProblemDetailsActionFilter . Default is the - 10 (magic number). Declaration public int ActionResultFilterOrder { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ExceptionFilterOrder Declaration public int ExceptionFilterOrder { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MappableObjectResolvers Collection of s object resolver which enables you to find mappable objects. Declaration public List<IMappableObjectResolver> MappableObjectResolvers { get; } Property Value Type Description List < IMappableObjectResolver > | Improve this Doc View Source MapperDescriptors Collection of ProblemDetailsMapperDescriptor which are used to describe suitable mappers. Declaration public ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection MapperDescriptors { get; } Property Value Type Description ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ProblemDetailsOptionsExtensions.AddDefaultMappers(ProblemDetailsOptions)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection.html",
    "title": "Class ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection | Documentations",
    "keywords": "Class ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection Inheritance System.Object ProblemDetailsOptions.ProblemDetailsMapperDescriptorCollection Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsMapperDescriptorCollection : IReadOnlyCollection<ProblemDetailsMapperDescriptor> Constructors | Improve this Doc View Source ProblemDetailsMapperDescriptorCollection() Declaration public ProblemDetailsMapperDescriptorCollection() Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add(Type, ProblemDetailsMapperDescriptorOptions) Declaration public void Add(Type mapperType, ProblemDetailsMapperDescriptorOptions options = null) Parameters Type Name Description Type mapperType ProblemDetailsMapperDescriptorOptions options | Improve this Doc View Source Add<MapperType>(ProblemDetailsMapperDescriptorOptions) Declaration public void Add<MapperType>(ProblemDetailsMapperDescriptorOptions options = null) where MapperType : class, IProblemDetailsMapper Parameters Type Name Description ProblemDetailsMapperDescriptorOptions options Type Parameters Name Description MapperType | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<ProblemDetailsMapperDescriptor> GetEnumerator() Returns Type Description IEnumerator < ProblemDetailsMapperDescriptor > | Improve this Doc View Source Insert(Type, Int32, ProblemDetailsMapperDescriptorOptions) Declaration public void Insert(Type mapperType, int index, ProblemDetailsMapperDescriptorOptions options = null) Parameters Type Name Description Type mapperType System.Int32 index ProblemDetailsMapperDescriptorOptions options | Improve this Doc View Source Insert<MapperType>(Int32, ProblemDetailsMapperDescriptorOptions) Declaration public void Insert<MapperType>(int index, ProblemDetailsMapperDescriptorOptions options = null) where MapperType : class, IProblemDetailsMapper Parameters Type Name Description System.Int32 index ProblemDetailsMapperDescriptorOptions options Type Parameters Name Description MapperType | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source TryFind(Int32, Nullable<Int32>, out Nullable<(ProblemDetailsMapperDescriptor MapperDescriptor, Int32 NextIndex)>) Declaration public bool TryFind(int startIndex, int? statusCode, out (ProblemDetailsMapperDescriptor MapperDescriptor, int NextIndex)? find) Parameters Type Name Description System.Int32 startIndex System.Nullable < System.Int32 > statusCode System.Nullable < System.ValueTuple < ProblemDetailsMapperDescriptor , System.Int32 >> find Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptionsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsOptionsExtensions.html",
    "title": "Class ProblemDetailsOptionsExtensions | Documentations",
    "keywords": "Class ProblemDetailsOptionsExtensions Inheritance System.Object ProblemDetailsOptionsExtensions Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ProblemDetailsOptionsExtensions : object Methods | Improve this Doc View Source AddDefaultMappers(ProblemDetailsOptions) Declaration public static ProblemDetailsOptions AddDefaultMappers(this ProblemDetailsOptions options) Parameters Type Name Description ProblemDetailsOptions options Returns Type Description ProblemDetailsOptions"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResult.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResult.html",
    "title": "Class ProblemDetailsResult | Documentations",
    "keywords": "Class ProblemDetailsResult Inheritance System.Object ProblemDetailsResult Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsResult : ObjectResult Constructors | Improve this Doc View Source ProblemDetailsResult(Nullable<ProblemDetails>) Declaration public ProblemDetailsResult(ProblemDetails? problemDetails) Parameters Type Name Description System.Nullable < ProblemDetails > problemDetails Properties | Improve this Doc View Source Value The problem details that is about to be serialized. Declaration public ProblemDetails Value { get; set; } Property Value Type Description ProblemDetails Methods | Improve this Doc View Source ExecuteResultAsync(ActionContext) Declaration public override Task ExecuteResultAsync(ActionContext context) Parameters Type Name Description ActionContext context Returns Type Description Task Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResultExecutor.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResultExecutor.html",
    "title": "Class ProblemDetailsResultExecutor | Documentations",
    "keywords": "Class ProblemDetailsResultExecutor Inheritance System.Object ProblemDetailsResultExecutor Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsResultExecutor : IActionResultExecutor<ProblemDetailsResult> Constructors | Improve this Doc View Source ProblemDetailsResultExecutor(IActionResultExecutor<ObjectResult>) Declaration public ProblemDetailsResultExecutor(IActionResultExecutor<ObjectResult> resultExecutor) Parameters Type Name Description IActionResultExecutor < ObjectResult > resultExecutor Methods | Improve this Doc View Source ExecuteAsync(ActionContext, ProblemDetailsResult) Declaration public Task ExecuteAsync(ActionContext context, ProblemDetailsResult result) Parameters Type Name Description ActionContext context ProblemDetailsResult result Returns Type Description Task Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResultProvider.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsResultProvider.html",
    "title": "Class ProblemDetailsResultProvider | Documentations",
    "keywords": "Class ProblemDetailsResultProvider Inheritance System.Object ProblemDetailsResultProvider Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ProblemDetailsResultProvider : object Constructors | Improve this Doc View Source ProblemDetailsResultProvider(ProblemDetailsMapperProvider, ProblemDetailsFactory, IOptions<ProblemDetailsOptions>) Declaration public ProblemDetailsResultProvider(ProblemDetailsMapperProvider mapperProvider, ProblemDetailsFactory problemDetailsFactory, IOptions<ProblemDetailsOptions> options) Parameters Type Name Description ProblemDetailsMapperProvider mapperProvider ProblemDetailsFactory problemDetailsFactory IOptions < ProblemDetailsOptions > options Methods | Improve this Doc View Source TryCreateResult(ActionExecutedContext, out ProblemDetailsResult) Declaration public bool TryCreateResult(ActionExecutedContext actionExecutedContext, out ProblemDetailsResult result) Parameters Type Name Description ActionExecutedContext actionExecutedContext ProblemDetailsResult result Returns Type Description System.Boolean | Improve this Doc View Source TryCreateResult(ExceptionContext, out ProblemDetailsResult) Declaration public bool TryCreateResult(ExceptionContext exceptionContext, out ProblemDetailsResult result) Parameters Type Name Description ExceptionContext exceptionContext ProblemDetailsResult result Returns Type Description System.Boolean | Improve this Doc View Source TryCreateResult(HttpContext, Nullable<Object>, out ProblemDetailsResult) Declaration public bool TryCreateResult(HttpContext httpContext, object? mappableObject, out ProblemDetailsResult result) Parameters Type Name Description HttpContext httpContext System.Nullable < System.Object > mappableObject ProblemDetailsResult result Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsUtils.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.ProblemDetailsUtils.html",
    "title": "Class ProblemDetailsUtils | Documentations",
    "keywords": "Class ProblemDetailsUtils Inheritance System.Object ProblemDetailsUtils Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ProblemDetailsUtils : object Methods | Improve this Doc View Source CreateDefault(String, Nullable<String>, Nullable<String>, Nullable<Int32>, Nullable<String>) Declaration public static ProblemDetails CreateDefault(string title, string? detail = null, string? instance = null, int? statusCode = null, string? type = null) Parameters Type Name Description System.String title System.Nullable < System.String > detail System.Nullable < System.String > instance System.Nullable < System.Int32 > statusCode System.Nullable < System.String > type Returns Type Description ProblemDetails | Improve this Doc View Source CreateMissingMapper(Type, Nullable<String>, Nullable<String>, Nullable<Int32>) Declaration public static ProblemDetails CreateMissingMapper(Type exampleMapperType, string? detail = null, string? instance = null, int? statusCode = null) Parameters Type Name Description Type exampleMapperType System.Nullable < System.String > detail System.Nullable < System.String > instance System.Nullable < System.Int32 > statusCode Returns Type Description ProblemDetails"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Reflection | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Reflection Classes MapperConstructorEvaluation MapperContextParameterEvaluation ParameterEvaluation ParameterEvaluationExtensions Enums MapperConstructorArea"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperConstructorArea.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperConstructorArea.html",
    "title": "Enum MapperConstructorArea | Documentations",
    "keywords": "Enum MapperConstructorArea Namespace : Teronis.Mvc.JsonProblemDetails.Reflection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public enum MapperConstructorArea : int Fields Name Description ActionFilter ExceptionFilter Middleware"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperConstructorEvaluation.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperConstructorEvaluation.html",
    "title": "Class MapperConstructorEvaluation | Documentations",
    "keywords": "Class MapperConstructorEvaluation Inheritance System.Object MapperConstructorEvaluation Namespace : Teronis.Mvc.JsonProblemDetails.Reflection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class MapperConstructorEvaluation : object Constructors | Improve this Doc View Source MapperConstructorEvaluation(MapperConstructorArea, ConstructorInfo, IReadOnlyCollection<ParameterEvaluation>) Declaration public MapperConstructorEvaluation(MapperConstructorArea area, ConstructorInfo sourceInfo, IReadOnlyCollection<ParameterEvaluation> parameterInfos) Parameters Type Name Description MapperConstructorArea area ConstructorInfo sourceInfo IReadOnlyCollection < ParameterEvaluation > parameterInfos Properties | Improve this Doc View Source FirstParameterEvaluation Declaration public ParameterEvaluation FirstParameterEvaluation { get; } Property Value Type Description ParameterEvaluation | Improve this Doc View Source MapperConstructorArea Declaration public MapperConstructorArea MapperConstructorArea { get; } Property Value Type Description MapperConstructorArea | Improve this Doc View Source ParameterEvaluations Declaration public IReadOnlyCollection<ParameterEvaluation> ParameterEvaluations { get; } Property Value Type Description IReadOnlyCollection < ParameterEvaluation > | Improve this Doc View Source SourceInfo Declaration public ConstructorInfo SourceInfo { get; } Property Value Type Description ConstructorInfo Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperContextParameterEvaluation.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.MapperContextParameterEvaluation.html",
    "title": "Class MapperContextParameterEvaluation | Documentations",
    "keywords": "Class MapperContextParameterEvaluation Inheritance System.Object ParameterEvaluation MapperContextParameterEvaluation Inherited Members ParameterEvaluation.SourceInfo Namespace : Teronis.Mvc.JsonProblemDetails.Reflection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class MapperContextParameterEvaluation : ParameterEvaluation Constructors | Improve this Doc View Source MapperContextParameterEvaluation(ParameterInfo, Type, Boolean) Declaration public MapperContextParameterEvaluation(ParameterInfo sourceInfo, Type mappableObjectType, bool isGenericMapperContextType) Parameters Type Name Description ParameterInfo sourceInfo Type mappableObjectType System.Boolean isGenericMapperContextType Properties | Improve this Doc View Source AllowDerivedMappableObjectTypes Declaration public bool AllowDerivedMappableObjectTypes { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGenericMapperContextType Declaration public bool IsGenericMapperContextType { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMapperContextParameter Declaration public override bool IsMapperContextParameter { get; } Property Value Type Description System.Boolean Overrides ParameterEvaluation.IsMapperContextParameter | Improve this Doc View Source MappableObjectType Declaration public Type MappableObjectType { get; } Property Value Type Description Type Methods | Improve this Doc View Source IsMappableObjectTypeSuitable(Nullable<Type>, Nullable<Boolean>) Declaration public bool IsMappableObjectTypeSuitable(Type? mappableObjectType, bool? globalAllowDerivedMappableObjectTypes = null) Parameters Type Name Description System.Nullable < Type > mappableObjectType System.Nullable < System.Boolean > globalAllowDerivedMappableObjectTypes If AllowDerivedMappableObjectTypes is false globalAllowDerivedMappableObjectTypes is taken instead. Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ParameterEvaluationExtensions.TryGetMapperContextParameterEvaluation(ParameterEvaluation, out MapperContextParameterEvaluation)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.ParameterEvaluation.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.ParameterEvaluation.html",
    "title": "Class ParameterEvaluation | Documentations",
    "keywords": "Class ParameterEvaluation Inheritance System.Object ParameterEvaluation MapperContextParameterEvaluation Namespace : Teronis.Mvc.JsonProblemDetails.Reflection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ParameterEvaluation : object Constructors | Improve this Doc View Source ParameterEvaluation(ParameterInfo) Declaration public ParameterEvaluation(ParameterInfo sourceInfo) Parameters Type Name Description ParameterInfo sourceInfo Properties | Improve this Doc View Source IsMapperContextParameter Declaration public virtual bool IsMapperContextParameter { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SourceInfo Declaration public ParameterInfo SourceInfo { get; } Property Value Type Description ParameterInfo Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ParameterEvaluationExtensions.TryGetMapperContextParameterEvaluation(ParameterEvaluation, out MapperContextParameterEvaluation)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.ParameterEvaluationExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Reflection.ParameterEvaluationExtensions.html",
    "title": "Class ParameterEvaluationExtensions | Documentations",
    "keywords": "Class ParameterEvaluationExtensions Inheritance System.Object ParameterEvaluationExtensions Namespace : Teronis.Mvc.JsonProblemDetails.Reflection Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class ParameterEvaluationExtensions : object Methods | Improve this Doc View Source TryGetMapperContextParameterEvaluation(ParameterEvaluation, out MapperContextParameterEvaluation) Declaration public static bool TryGetMapperContextParameterEvaluation(this ParameterEvaluation parameterEvaluation, out MapperContextParameterEvaluation mapperContextParameterEvaluation) Parameters Type Name Description ParameterEvaluation parameterEvaluation MapperContextParameterEvaluation mapperContextParameterEvaluation Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.StatusCodeException.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.StatusCodeException.html",
    "title": "Class StatusCodeException | Documentations",
    "keywords": "Class StatusCodeException Inheritance System.Object StatusCodeException Implements IHasProblemDetailsStatusCode Namespace : Teronis.Mvc.JsonProblemDetails Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class StatusCodeException : Exception, IHasProblemDetailsStatusCode Constructors | Improve this Doc View Source StatusCodeException(SerializationInfo, StreamingContext) Declaration protected StatusCodeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source StatusCodeException(Int32) Declaration public StatusCodeException(int statusCode) Parameters Type Name Description System.Int32 statusCode | Improve this Doc View Source StatusCodeException(Int32, Nullable<String>) Declaration public StatusCodeException(int statusCode, string? message) Parameters Type Name Description System.Int32 statusCode System.Nullable < System.String > message | Improve this Doc View Source StatusCodeException(Int32, Nullable<String>, Nullable<Exception>) Declaration public StatusCodeException(int statusCode, string? message, Exception? innerException) Parameters Type Name Description System.Int32 statusCode System.Nullable < System.String > message System.Nullable < Exception > innerException Properties | Improve this Doc View Source StatusCode Declaration public int StatusCode { get; } Property Value Type Description System.Int32 Implements IHasProblemDetailsStatusCode Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Versioning.ApiVersionProblemDetailsResponseProvider.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Versioning.ApiVersionProblemDetailsResponseProvider.html",
    "title": "Class ApiVersionProblemDetailsResponseProvider | Documentations",
    "keywords": "Class ApiVersionProblemDetailsResponseProvider Inheritance System.Object ApiVersionProblemDetailsResponseProvider Namespace : Teronis.Mvc.JsonProblemDetails.Versioning Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ApiVersionProblemDetailsResponseProvider : DefaultErrorResponseProvider Constructors | Improve this Doc View Source ApiVersionProblemDetailsResponseProvider(ProblemDetailsMiddlewareContextProxy) Declaration public ApiVersionProblemDetailsResponseProvider(ProblemDetailsMiddlewareContextProxy problemDetailsMiddlewareContextProxy) Parameters Type Name Description ProblemDetailsMiddlewareContextProxy problemDetailsMiddlewareContextProxy Methods | Improve this Doc View Source CreateResponse(ErrorResponseContext) Declaration public override IActionResult CreateResponse(ErrorResponseContext context) Parameters Type Name Description ErrorResponseContext context Returns Type Description IActionResult Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Versioning.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.JsonProblemDetails.Versioning.html",
    "title": "Namespace Teronis.Mvc.JsonProblemDetails.Versioning | Documentations",
    "keywords": "Namespace Teronis.Mvc.JsonProblemDetails.Versioning Classes ApiVersionProblemDetailsResponseProvider"
  },
  "Teronis.DotNet/Teronis.Mvc.MvcBuilderContext.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.MvcBuilderContext.html",
    "title": "Class MvcBuilderContext | Documentations",
    "keywords": "Class MvcBuilderContext Inheritance System.Object MvcBuilderContext Namespace : Teronis.Mvc Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class MvcBuilderContext : object Constructors | Improve this Doc View Source MvcBuilderContext(ApplicationPartManager) Declaration public MvcBuilderContext(ApplicationPartManager partManager) Parameters Type Name Description ApplicationPartManager partManager Properties | Improve this Doc View Source PartManager Declaration public ApplicationPartManager PartManager { get; } Property Value Type Description ApplicationPartManager Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.MvcBuilderContextCreator.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.MvcBuilderContextCreator.html",
    "title": "Class MvcBuilderContextCreator | Documentations",
    "keywords": "Class MvcBuilderContextCreator Inheritance System.Object MvcBuilderContextCreator Namespace : Teronis.Mvc Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class MvcBuilderContextCreator : IPostConfigureOptions<MvcOptions> Constructors | Improve this Doc View Source MvcBuilderContextCreator(IServiceCollection, Action<MvcBuilderContext>) Declaration public MvcBuilderContextCreator(IServiceCollection services, Action<MvcBuilderContext> configureContext) Parameters Type Name Description IServiceCollection services Action < MvcBuilderContext > configureContext Only run once. Not added to service collection. Methods | Improve this Doc View Source PostConfigure(String, MvcOptions) Declaration public void PostConfigure(string name, MvcOptions option) Parameters Type Name Description System.String name MvcOptions option Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Extensions.html",
    "title": "Namespace Teronis.Mvc.ServiceResulting.Extensions | Documentations",
    "keywords": "Namespace Teronis.Mvc.ServiceResulting.Extensions Classes IServiceResultFactoryExtensions"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Extensions.IServiceResultFactoryExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Extensions.IServiceResultFactoryExtensions.html",
    "title": "Class IServiceResultFactoryExtensions | Documentations",
    "keywords": "Class IServiceResultFactoryExtensions Inheritance System.Object IServiceResultFactoryExtensions Namespace : Teronis.Mvc.ServiceResulting.Extensions Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceResultFactoryExtensions : object Methods | Improve this Doc View Source WithHttpStatusCode<ServiceResultPostConfigurationType>(ServiceResultPostConfigurationType, HttpStatusCode) Declaration public static IServiceResultPostConfiguration WithHttpStatusCode<ServiceResultPostConfigurationType>(this ServiceResultPostConfigurationType serviceResultPostConfiguration, HttpStatusCode statusCode) where ServiceResultPostConfigurationType : IServiceResultPostConfiguration Parameters Type Name Description ServiceResultPostConfigurationType serviceResultPostConfiguration HttpStatusCode statusCode Returns Type Description IServiceResultPostConfiguration Type Parameters Name Description ServiceResultPostConfigurationType"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.html",
    "title": "Namespace Teronis.Mvc.ServiceResulting.Generic | Documentations",
    "keywords": "Namespace Teronis.Mvc.ServiceResulting.Generic Classes IServiceResultContentExtensions IServiceResultPostConfigurationGenericExtensions JsonErrorExtensions ServiceResult<ContentType> ServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> Interfaces IServiceResult<ContentType> IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType>"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResult-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResult-1.html",
    "title": "Interface IServiceResult<ContentType> | Documentations",
    "keywords": "Interface IServiceResult<ContentType> Inherited Members IServiceResult.Succeeded IServiceResult.Errors IServiceResult.DeclaredType IServiceResult.Formatters IServiceResult.ContentTypes IServiceResult.DeepCopy() Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResult<out ContentType> : IServiceResult, IStatusCodeActionResult, IActionResult Type Parameters Name Description ContentType Properties | Improve this Doc View Source Content Declaration ContentType Content { get; } Property Value Type Description ContentType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultExtensions.Success(IServiceResult, IEnumerable<String>) IServiceResultExtensions.Success(IServiceResult, String[]) IServiceResultExtensions.ThrowOnError(IServiceResult) IServiceResultContentExtensions.Content<ContentType>(IServiceResult<ContentType>) IServiceResultContentExtensions.ContentOrException<ContentType>(IServiceResult<ContentType>) IServiceResultContentExtensions.CopyButSucceededWithContent<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) IServiceResultContentExtensions.CopyButSucceededWithContentIfSucceeded<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) IServiceResultContentExtensions.CopyButFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors) IServiceResultContentExtensions.CopyButFailedIfFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultContentExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultContentExtensions.html",
    "title": "Class IServiceResultContentExtensions | Documentations",
    "keywords": "Class IServiceResultContentExtensions Inheritance System.Object IServiceResultContentExtensions Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceResultContentExtensions : object Methods | Improve this Doc View Source Content<ContentType>(IServiceResult<ContentType>) If you are sure that content is not null it returns the content as not null. Declaration public static ContentType Content<ContentType>(this IServiceResult<ContentType> result) Parameters Type Name Description IServiceResult <ContentType> result Returns Type Description ContentType Type Parameters Name Description ContentType | Improve this Doc View Source ContentOrException<ContentType>(IServiceResult<ContentType>) If you are sure that content is not null it returns the content as not null. If it is null an excpetion will be thrown. Declaration public static ContentType ContentOrException<ContentType>(this IServiceResult<ContentType> result) Parameters Type Name Description IServiceResult <ContentType> result Returns Type Description ContentType Type Parameters Name Description ContentType | Improve this Doc View Source CopyButFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors) Declaration public static ServiceResult<TargetContentType> CopyButFailed<SourceContentType, TargetContentType>(this IServiceResult<SourceContentType> result, JsonErrors errors = null) Parameters Type Name Description IServiceResult <SourceContentType> result JsonErrors errors Returns Type Description ServiceResult <TargetContentType> Type Parameters Name Description SourceContentType TargetContentType | Improve this Doc View Source CopyButFailedIfFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors) Declaration public static ServiceResult<TargetContentType> CopyButFailedIfFailed<SourceContentType, TargetContentType>(this IServiceResult<SourceContentType> result, JsonErrors errors = null) Parameters Type Name Description IServiceResult <SourceContentType> result JsonErrors errors Returns Type Description ServiceResult <TargetContentType> Type Parameters Name Description SourceContentType TargetContentType | Improve this Doc View Source CopyButSucceededWithContent<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) Declaration public static ServiceResult<TargetContentType> CopyButSucceededWithContent<SourceContentType, TargetContentType>(this IServiceResult<SourceContentType> result, TargetContentType content) Parameters Type Name Description IServiceResult <SourceContentType> result TargetContentType content Returns Type Description ServiceResult <TargetContentType> Type Parameters Name Description SourceContentType TargetContentType | Improve this Doc View Source CopyButSucceededWithContentIfSucceeded<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) Declaration public static ServiceResult<TargetContentType> CopyButSucceededWithContentIfSucceeded<SourceContentType, TargetContentType>(this IServiceResult<SourceContentType> result, TargetContentType content) Parameters Type Name Description IServiceResult <SourceContentType> result TargetContentType content Returns Type Description ServiceResult <TargetContentType> Type Parameters Name Description SourceContentType TargetContentType"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultPostConfiguration-2.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultPostConfiguration-2.html",
    "title": "Interface IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> | Documentations",
    "keywords": "Interface IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> : IServiceResultPostConfiguration where ServiceResultType : IServiceResult<ServiceResultContentType> Type Parameters Name Description ServiceResultType ServiceResultContentType Methods | Improve this Doc View Source WithStatusCode(Nullable<Int32>) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> WithStatusCode(int? statusCode) Parameters Type Name Description System.Nullable < System.Int32 > statusCode Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultFactoryExtensions.WithHttpStatusCode<ServiceResultPostConfigurationType>(ServiceResultPostConfigurationType, HttpStatusCode)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultPostConfigurationGenericExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.IServiceResultPostConfigurationGenericExtensions.html",
    "title": "Class IServiceResultPostConfigurationGenericExtensions | Documentations",
    "keywords": "Class IServiceResultPostConfigurationGenericExtensions Inheritance System.Object IServiceResultPostConfigurationGenericExtensions Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceResultPostConfigurationGenericExtensions : object Methods | Improve this Doc View Source WithHttpStatusCode<ServiceResultType, ServiceResultContentType>(IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType>, HttpStatusCode) Declaration public static IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> WithHttpStatusCode<ServiceResultType, ServiceResultContentType>(this IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> serviceResultFactory, HttpStatusCode statusCode) where ServiceResultType : IServiceResult<ServiceResultContentType> Parameters Type Name Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> serviceResultFactory HttpStatusCode statusCode Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> Type Parameters Name Description ServiceResultType ServiceResultContentType"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.JsonErrorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.JsonErrorExtensions.html",
    "title": "Class JsonErrorExtensions | Documentations",
    "keywords": "Class JsonErrorExtensions Inheritance System.Object JsonErrorExtensions Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class JsonErrorExtensions : object Methods | Improve this Doc View Source ToServiceResult<T>(JsonError) Creates a servce result from provided error . Declaration public static ServiceResult<T> ToServiceResult<T>(this JsonError error) Parameters Type Name Description JsonError error Returns Type Description ServiceResult <T> Type Parameters Name Description T | Improve this Doc View Source ToServiceResultFactory<ContentType>(JsonError) Creates a service result factory for creating a customized service result. Declaration public static IServiceResultPostConfiguration<ServiceResult<ContentType>, ContentType> ToServiceResultFactory<ContentType>(this JsonError error) Parameters Type Name Description JsonError error Returns Type Description IServiceResultPostConfiguration < ServiceResult <ContentType>, ContentType> Type Parameters Name Description ContentType"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.html",
    "title": "Namespace Teronis.Mvc.ServiceResulting.Generic.ObjectModel | Documentations",
    "keywords": "Namespace Teronis.Mvc.ServiceResulting.Generic.ObjectModel Classes ServiceResultDelegatedFactory<ContentType> Interfaces IServiceResultDelegatedFactory<ContentType> Provides methods to set service result where creation and injection is abstracted away. IServiceResultDelegatedFactory<ServiceResultType, ServiceResultContentType> Provides methods to set service result where creation and injection is abstracted away. IServiceResultInjection<ContentType>"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultDelegatedFactory-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultDelegatedFactory-1.html",
    "title": "Interface IServiceResultDelegatedFactory<ContentType> | Documentations",
    "keywords": "Interface IServiceResultDelegatedFactory<ContentType> Provides methods to set service result where creation and injection is abstracted away. Namespace : Teronis.Mvc.ServiceResulting.Generic.ObjectModel Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResultDelegatedFactory<ContentType> Type Parameters Name Description ContentType Methods | Improve this Doc View Source ToFailure() Declaration IServiceResultPostConfiguration ToFailure() Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToFailure(Nullable<Exception>) Declaration IServiceResultPostConfiguration ToFailure(Exception? error) Parameters Type Name Description System.Nullable < Exception > error Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToFailure(Nullable<String>) Declaration IServiceResultPostConfiguration ToFailure(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToFailure(IServiceResult) Declaration IServiceResultPostConfiguration ToFailure(IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToFailure(JsonError) Declaration IServiceResultPostConfiguration ToFailure(JsonError errors) Parameters Type Name Description JsonError errors Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToFailure(JsonErrors) Declaration IServiceResultPostConfiguration ToFailure(JsonErrors error) Parameters Type Name Description JsonErrors error Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToSuccess() Declaration IServiceResultPostConfiguration ToSuccess() Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source ToSuccess(ContentType) Declaration IServiceResultPostConfiguration ToSuccess(ContentType content) Parameters Type Name Description ContentType content Returns Type Description IServiceResultPostConfiguration Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultDelegatedFactory-2.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultDelegatedFactory-2.html",
    "title": "Interface IServiceResultDelegatedFactory<ServiceResultType, ServiceResultContentType> | Documentations",
    "keywords": "Interface IServiceResultDelegatedFactory<ServiceResultType, ServiceResultContentType> Provides methods to set service result where creation and injection is abstracted away. Inherited Members IServiceResultDelegatedFactory<ServiceResultContentType>.ToFailure(Nullable<Exception>) Namespace : Teronis.Mvc.ServiceResulting.Generic.ObjectModel Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResultDelegatedFactory<ServiceResultType, ServiceResultContentType> : IServiceResultDelegatedFactory<ServiceResultContentType> where ServiceResultType : IServiceResult<ServiceResultContentType> Type Parameters Name Description ServiceResultType ServiceResultContentType Methods | Improve this Doc View Source ToFailure() Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToFailure() Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToFailure(Nullable<String>) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToFailure(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToFailure(IServiceResult) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToFailure(IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToFailure(JsonError) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToFailure(JsonError error) Parameters Type Name Description JsonError error Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToFailure(JsonErrors) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToFailure(JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToSuccess() Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToSuccess() Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> | Improve this Doc View Source ToSuccess(ServiceResultContentType) Declaration IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> ToSuccess(ServiceResultContentType content) Parameters Type Name Description ServiceResultContentType content Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultInjection-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.IServiceResultInjection-1.html",
    "title": "Interface IServiceResultInjection<ContentType> | Documentations",
    "keywords": "Interface IServiceResultInjection<ContentType> Namespace : Teronis.Mvc.ServiceResulting.Generic.ObjectModel Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResultInjection<in ContentType> Type Parameters Name Description ContentType Methods | Improve this Doc View Source SetResult(IServiceResult<ContentType>) Declaration void SetResult(IServiceResult<ContentType> value) Parameters Type Name Description IServiceResult <ContentType> value Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.ServiceResultDelegatedFactory-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ObjectModel.ServiceResultDelegatedFactory-1.html",
    "title": "Class ServiceResultDelegatedFactory<ContentType> | Documentations",
    "keywords": "Class ServiceResultDelegatedFactory<ContentType> Inheritance System.Object ServiceResultDelegatedFactory<ContentType> Implements IServiceResultDelegatedFactory < IServiceResult <ContentType>, ContentType> IServiceResultDelegatedFactory <ContentType> Namespace : Teronis.Mvc.ServiceResulting.Generic.ObjectModel Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ServiceResultDelegatedFactory<ContentType> : object, IServiceResultDelegatedFactory<IServiceResult<ContentType>, ContentType>, IServiceResultDelegatedFactory<ContentType> Type Parameters Name Description ContentType Constructors | Improve this Doc View Source ServiceResultDelegatedFactory(IServiceResultInjection<ContentType>) Declaration public ServiceResultDelegatedFactory(IServiceResultInjection<ContentType> serviceResultInjection) Parameters Type Name Description IServiceResultInjection <ContentType> serviceResultInjection Methods | Improve this Doc View Source ToFailure() Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure() Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToFailure(Nullable<Exception>) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure(Exception? error) Parameters Type Name Description System.Nullable < Exception > error Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToFailure(Nullable<String>) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToFailure(IServiceResult) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure(IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToFailure(JsonError) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure(JsonError error) Parameters Type Name Description JsonError error Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToFailure(JsonErrors) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToFailure(JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToSuccess() Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToSuccess() Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> | Improve this Doc View Source ToSuccess(ContentType) Declaration public IServiceResultPostConfiguration<IServiceResult<ContentType>, ContentType> ToSuccess(ContentType content) Parameters Type Name Description ContentType content Returns Type Description IServiceResultPostConfiguration < IServiceResult <ContentType>, ContentType> Explicit Interface Implementations | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure() Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure() Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure(Nullable<Exception>) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure(Exception? error) Parameters Type Name Description System.Nullable < Exception > error Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure(Nullable<String>) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure(IServiceResult) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure(IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure(JsonError) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure(JsonError error) Parameters Type Name Description JsonError error Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToFailure(JsonErrors) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToFailure(JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToSuccess() Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToSuccess() Returns Type Description IServiceResultPostConfiguration | Improve this Doc View Source IServiceResultDelegatedFactory<ContentType>.ToSuccess(ContentType) Declaration IServiceResultPostConfiguration IServiceResultDelegatedFactory<ContentType>.ToSuccess(ContentType content) Parameters Type Name Description ContentType content Returns Type Description IServiceResultPostConfiguration Implements IServiceResultDelegatedFactory<ServiceResultType, ServiceResultContentType> IServiceResultDelegatedFactory<ContentType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ServiceResult-1.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ServiceResult-1.html",
    "title": "Class ServiceResult<ContentType> | Documentations",
    "keywords": "Class ServiceResult<ContentType> Inheritance System.Object JsonResult ServiceResult ServiceResult<ContentType> Implements IServiceResult <ContentType> IServiceResult IStatusCodeActionResult IActionResult IMutableServiceResult Inherited Members ServiceResult.Errors ServiceResult.Succeeded ServiceResult.IMutableServiceResult.Succeeded ServiceResult.IMutableServiceResult.Content ServiceResult.IMutableServiceResult.StatusCode ServiceResult.IMutableServiceResult.Errors ServiceResult.DeepCopy() JsonResult.Formatters JsonResult.ToString() Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ServiceResult<ContentType> : ServiceResult, IServiceResult<ContentType>, IServiceResult, IStatusCodeActionResult, IActionResult, IMutableServiceResult Type Parameters Name Description ContentType Constructors | Improve this Doc View Source ServiceResult(ContentType, Nullable<Int32>) Declaration public ServiceResult(ContentType content, int? statusCode = null) Parameters Type Name Description ContentType content System.Nullable < System.Int32 > statusCode | Improve this Doc View Source ServiceResult(Boolean) Declaration public ServiceResult(bool succeeded) Parameters Type Name Description System.Boolean succeeded | Improve this Doc View Source ServiceResult(Boolean, Nullable<Object>, Nullable<Int32>) Declaration protected ServiceResult(bool succeeded, object? content = null, int? statusCode = null) Parameters Type Name Description System.Boolean succeeded System.Nullable < System.Object > content System.Nullable < System.Int32 > statusCode | Improve this Doc View Source ServiceResult(JsonErrors, Nullable<Int32>) Declaration public ServiceResult(JsonErrors errors, int? statusCode = null) Parameters Type Name Description JsonErrors errors System.Nullable < System.Int32 > statusCode Properties | Improve this Doc View Source Content Declaration public ContentType Content { get; } Property Value Type Description ContentType | Improve this Doc View Source ContentOrDefault Declaration protected override object? ContentOrDefault { get; } Property Value Type Description System.Nullable < System.Object > Overrides ServiceResult.ContentOrDefault Methods | Improve this Doc View Source Failure() Creates a result that is marked as failed. Declaration public static ServiceResult<ContentType> Failure() Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Failure(Nullable<Exception>) Creates a result that is marked as failed with json error as content. Declaration public static ServiceResult<ContentType> Failure(Exception? error) Parameters Type Name Description System.Nullable < Exception > error Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Failure(Nullable<String>) Creates a result that is marked as failed with json converted error message as content. Declaration public static ServiceResult<ContentType> Failure(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Failure(IServiceResult) Declaration public static ServiceResult<ContentType> Failure(IServiceResult result) Parameters Type Name Description IServiceResult result Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Failure(JsonError) Creates a result that is marked as failed with json error as content. Declaration public static ServiceResult<ContentType> Failure(JsonError error) Parameters Type Name Description JsonError error Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Failure(JsonErrors) Creates a result that is marked as failed with json errors as content. Declaration public static ServiceResult<ContentType> Failure(JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Success() Creates a result that is marked as succeeded but without content. Declaration public static ServiceResult<ContentType> Success() Returns Type Description ServiceResult <ContentType> | Improve this Doc View Source Success(ContentType) Creates a result that is marked as succeeded. Declaration public static ServiceResult<ContentType> Success(ContentType content) Parameters Type Name Description ContentType content Returns Type Description ServiceResult <ContentType> Implements IServiceResult<ContentType> IServiceResult IStatusCodeActionResult IActionResult IMutableServiceResult Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultExtensions.Success(IServiceResult, IEnumerable<String>) IServiceResultExtensions.Success(IServiceResult, String[]) IServiceResultExtensions.ThrowOnError(IServiceResult) IServiceResultContentExtensions.Content<ContentType>(IServiceResult<ContentType>) IServiceResultContentExtensions.ContentOrException<ContentType>(IServiceResult<ContentType>) IServiceResultContentExtensions.CopyButSucceededWithContent<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) IServiceResultContentExtensions.CopyButSucceededWithContentIfSucceeded<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, TargetContentType) IServiceResultContentExtensions.CopyButFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors) IServiceResultContentExtensions.CopyButFailedIfFailed<SourceContentType, TargetContentType>(IServiceResult<SourceContentType>, JsonErrors)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ServiceResultPostConfiguration-2.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.Generic.ServiceResultPostConfiguration-2.html",
    "title": "Class ServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> | Documentations",
    "keywords": "Class ServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> Inheritance System.Object ServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> Implements IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> IServiceResultPostConfiguration Namespace : Teronis.Mvc.ServiceResulting.Generic Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> : object, IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType>, IServiceResultPostConfiguration where ServiceResultType : IServiceResult<ServiceResultContentType> Type Parameters Name Description ServiceResultType ServiceResultContentType Constructors | Improve this Doc View Source ServiceResultPostConfiguration(ServiceResult) Declaration public ServiceResultPostConfiguration(ServiceResult serviceResult) Parameters Type Name Description ServiceResult serviceResult Methods | Improve this Doc View Source WithStatusCode(Nullable<Int32>) Declaration public IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> WithStatusCode(int? statusCode) Parameters Type Name Description System.Nullable < System.Int32 > statusCode Returns Type Description IServiceResultPostConfiguration <ServiceResultType, ServiceResultContentType> Explicit Interface Implementations | Improve this Doc View Source IServiceResultPostConfiguration.WithStatusCode(Nullable<Int32>) Declaration IServiceResultPostConfiguration IServiceResultPostConfiguration.WithStatusCode(int? statusCode) Parameters Type Name Description System.Nullable < System.Int32 > statusCode Returns Type Description IServiceResultPostConfiguration Implements IServiceResultPostConfiguration<ServiceResultType, ServiceResultContentType> IServiceResultPostConfiguration Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.html",
    "title": "Namespace Teronis.Mvc.ServiceResulting | Documentations",
    "keywords": "Namespace Teronis.Mvc.ServiceResulting Classes IServiceResultExtensions JsonError JsonErrorExtensions JsonErrors JsonErrorsExtensions JsonErrorsTextJsonConverter JsonResult NotSucceededException ServiceResult Structs ServiceResultDatransject Interfaces IJsonError IMutableServiceResult IServiceResult IServiceResultPostConfiguration"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IJsonError.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IJsonError.html",
    "title": "Interface IJsonError | Documentations",
    "keywords": "Interface IJsonError Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IJsonError Properties | Improve this Doc View Source Error Declaration Exception? Error { get; } Property Value Type Description System.Nullable < Exception > | Improve this Doc View Source ErrorCode Declaration string ErrorCode { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IMutableServiceResult.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IMutableServiceResult.html",
    "title": "Interface IMutableServiceResult | Documentations",
    "keywords": "Interface IMutableServiceResult Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IMutableServiceResult Properties | Improve this Doc View Source Content Declaration object? Content { get; set; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source Errors Declaration JsonErrors Errors { get; set; } Property Value Type Description JsonErrors | Improve this Doc View Source StatusCode Declaration int? StatusCode { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Succeeded Declaration bool Succeeded { get; set; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResult.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResult.html",
    "title": "Interface IServiceResult | Documentations",
    "keywords": "Interface IServiceResult Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResult : IStatusCodeActionResult, IActionResult Properties | Improve this Doc View Source Content Declaration object? Content { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source ContentTypes Declaration MediaTypeCollection? ContentTypes { get; } Property Value Type Description System.Nullable < MediaTypeCollection > | Improve this Doc View Source DeclaredType Declaration Type DeclaredType { get; } Property Value Type Description Type | Improve this Doc View Source Errors Declaration JsonErrors Errors { get; } Property Value Type Description JsonErrors | Improve this Doc View Source Formatters Declaration FormatterCollection<IOutputFormatter>? Formatters { get; } Property Value Type Description System.Nullable < FormatterCollection < IOutputFormatter >> | Improve this Doc View Source Succeeded Declaration bool Succeeded { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DeepCopy() Declaration ServiceResultDatransject DeepCopy() Returns Type Description ServiceResultDatransject Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultExtensions.Success(IServiceResult, IEnumerable<String>) IServiceResultExtensions.Success(IServiceResult, String[]) IServiceResultExtensions.ThrowOnError(IServiceResult)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResultExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResultExtensions.html",
    "title": "Class IServiceResultExtensions | Documentations",
    "keywords": "Class IServiceResultExtensions Inheritance System.Object IServiceResultExtensions Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class IServiceResultExtensions : object Methods | Improve this Doc View Source Success(IServiceResult, IEnumerable<String>) Check conditions for a succeeded result. You may ingnore error codes that could cause to a failed result. Declaration public static bool Success(this IServiceResult serviceResult, IEnumerable<string> ignoredErrorCodes) Parameters Type Name Description IServiceResult serviceResult IEnumerable < System.String > ignoredErrorCodes Returns Type Description System.Boolean | Improve this Doc View Source Success(IServiceResult, String[]) Declaration public static bool Success(this IServiceResult serviceResult, params string[] excludeErrorCodes) Parameters Type Name Description IServiceResult serviceResult System.String [] excludeErrorCodes Returns Type Description System.Boolean | Improve this Doc View Source ThrowOnError(IServiceResult) Declaration public static void ThrowOnError(this IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResultPostConfiguration.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.IServiceResultPostConfiguration.html",
    "title": "Interface IServiceResultPostConfiguration | Documentations",
    "keywords": "Interface IServiceResultPostConfiguration Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public interface IServiceResultPostConfiguration Methods | Improve this Doc View Source WithStatusCode(Nullable<Int32>) Declaration IServiceResultPostConfiguration WithStatusCode(int? statusCode) Parameters Type Name Description System.Nullable < System.Int32 > statusCode Returns Type Description IServiceResultPostConfiguration Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultFactoryExtensions.WithHttpStatusCode<ServiceResultPostConfigurationType>(ServiceResultPostConfigurationType, HttpStatusCode)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonError.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonError.html",
    "title": "Class JsonError | Documentations",
    "keywords": "Class JsonError Inheritance System.Object JsonError Implements IJsonError Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class JsonError : object, IJsonError Constructors | Improve this Doc View Source JsonError(Nullable<Exception>) Declaration public JsonError(Exception? error) Parameters Type Name Description System.Nullable < Exception > error | Improve this Doc View Source JsonError(Nullable<Exception>, Nullable<String>) Declaration public JsonError(Exception? error = null, string? errorCode = null) Parameters Type Name Description System.Nullable < Exception > error System.Nullable < System.String > errorCode | Improve this Doc View Source JsonError(Nullable<String>, Nullable<String>) Declaration public JsonError(string? errorMessage, string? errorCode = null) Parameters Type Name Description System.Nullable < System.String > errorMessage System.Nullable < System.String > errorCode Fields | Improve this Doc View Source DefaultErrorCode Declaration public const string DefaultErrorCode = null Field Value Type Description System.String Properties | Improve this Doc View Source Error Declaration public Exception Error { get; } Property Value Type Description Exception | Improve this Doc View Source ErrorCode Declaration public string ErrorCode { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Implicit(Nullable<String> to JsonError) Declaration public static implicit operator JsonError(string? errorMessage) Parameters Type Name Description System.Nullable < System.String > errorMessage Returns Type Description JsonError Implements IJsonError Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) JsonErrorExtensions.ToServiceResult(JsonError) JsonErrorExtensions.ToJsonErrors(JsonError) JsonErrorExtensions.ToServiceResult<T>(JsonError) JsonErrorExtensions.ToServiceResultFactory<ContentType>(JsonError)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorExtensions.html",
    "title": "Class JsonErrorExtensions | Documentations",
    "keywords": "Class JsonErrorExtensions Inheritance System.Object JsonErrorExtensions Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class JsonErrorExtensions : object Methods | Improve this Doc View Source ToJsonErrors(JsonError) Declaration public static JsonErrors ToJsonErrors(this JsonError jsonError) Parameters Type Name Description JsonError jsonError Returns Type Description JsonErrors | Improve this Doc View Source ToServiceResult(JsonError) Creates a servce result from provided jsonError . Declaration public static ServiceResult ToServiceResult(this JsonError jsonError) Parameters Type Name Description JsonError jsonError Returns Type Description ServiceResult"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrors.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrors.html",
    "title": "Class JsonErrors | Documentations",
    "keywords": "Class JsonErrors Inheritance System.Object JsonErrors Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class JsonErrors : IList<JsonError> Constructors | Improve this Doc View Source JsonErrors() Declaration public JsonErrors() | Improve this Doc View Source JsonErrors(IEnumerable<KeyValuePair<Exception, String>>) Declaration public JsonErrors(IEnumerable<KeyValuePair<Exception, string>> errors) Parameters Type Name Description IEnumerable < KeyValuePair < Exception , System.String >> errors | Improve this Doc View Source JsonErrors(IEnumerable<KeyValuePair<String, String>>) Declaration public JsonErrors(IEnumerable<KeyValuePair<string, string>> errors) Parameters Type Name Description IEnumerable < KeyValuePair < System.String , System.String >> errors | Improve this Doc View Source JsonErrors(Nullable<Exception>, Nullable<String>) Declaration public JsonErrors(Exception? error, string? errorCode = null) Parameters Type Name Description System.Nullable < Exception > error System.Nullable < System.String > errorCode | Improve this Doc View Source JsonErrors(Nullable<String>, Nullable<String>) Declaration public JsonErrors(string? errorMessage, string? errorCode = null) Parameters Type Name Description System.Nullable < System.String > errorMessage System.Nullable < System.String > errorCode | Improve this Doc View Source JsonErrors(JsonError) Declaration public JsonErrors(JsonError error) Parameters Type Name Description JsonError error Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Error Declaration public JsonError Error { get; } Property Value Type Description JsonError | Improve this Doc View Source Errors Declaration public List<JsonError> Errors { get; } Property Value Type Description List < JsonError > | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[Int32] Declaration public JsonError this[int index] { get; set; } Parameters Type Name Description System.Int32 index Property Value Type Description JsonError Methods | Improve this Doc View Source Add(JsonError) Declaration public void Add(JsonError error) Parameters Type Name Description JsonError error | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(JsonError) Declaration public bool Contains(JsonError error) Parameters Type Name Description JsonError error Returns Type Description System.Boolean | Improve this Doc View Source CopyTo(JsonError[], Int32) Declaration public void CopyTo(JsonError[] array, int beginInsertAtIndex) Parameters Type Name Description JsonError [] array System.Int32 beginInsertAtIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<JsonError> GetEnumerator() Returns Type Description IEnumerator < JsonError > | Improve this Doc View Source IndexOf(JsonError) Declaration public int IndexOf(JsonError item) Parameters Type Name Description JsonError item Returns Type Description System.Int32 | Improve this Doc View Source Insert(Int32, JsonError) Declaration public void Insert(int index, JsonError item) Parameters Type Name Description System.Int32 index JsonError item | Improve this Doc View Source Remove(JsonError) Declaration public bool Remove(JsonError error) Parameters Type Name Description JsonError error Returns Type Description System.Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) JsonErrorsExtensions.ToSingleOrAggregatedException(JsonErrors) JsonErrorsExtensions.ToSingleOrAggregatedOrDefaultException(JsonErrors) JsonErrorsExtensions.ToStringOrDefaultMessage(JsonErrors) JsonErrorsExtensions.DeepCopy(JsonErrors) JsonErrorsExtensions.ToServiceResult(JsonErrors) JsonErrorsExtensions.ToServiceResult<T>(JsonErrors) JsonErrorsExtensions.ToServiceResultFactory<ContentType>(JsonErrors)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorsExtensions.html",
    "title": "Class JsonErrorsExtensions | Documentations",
    "keywords": "Class JsonErrorsExtensions Inheritance System.Object JsonErrorsExtensions Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public static class JsonErrorsExtensions : object Methods | Improve this Doc View Source DeepCopy(JsonErrors) Makes a copy of . Declaration public static JsonErrors DeepCopy(this JsonErrors jsonErrors) Parameters Type Name Description JsonErrors jsonErrors Returns Type Description JsonErrors | Improve this Doc View Source ToServiceResult(JsonErrors) Creates a servce result from provided errors . Declaration public static ServiceResult ToServiceResult(this JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description ServiceResult | Improve this Doc View Source ToServiceResult<T>(JsonErrors) Creates a servce result from provided error . Declaration public static ServiceResult<T> ToServiceResult<T>(this JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description ServiceResult <T> Type Parameters Name Description T | Improve this Doc View Source ToServiceResultFactory<ContentType>(JsonErrors) Creates a service result factory for creating a customized service result. Declaration public static IServiceResultPostConfiguration<ServiceResult<ContentType>, ContentType> ToServiceResultFactory<ContentType>(this JsonErrors errors) Parameters Type Name Description JsonErrors errors Returns Type Description IServiceResultPostConfiguration < ServiceResult <ContentType>, ContentType> Type Parameters Name Description ContentType | Improve this Doc View Source ToSingleOrAggregatedException(JsonErrors) Declaration public static Exception? ToSingleOrAggregatedException(this JsonErrors jsonErrors) Parameters Type Name Description JsonErrors jsonErrors Returns Type Description System.Nullable < Exception > | Improve this Doc View Source ToSingleOrAggregatedOrDefaultException(JsonErrors) Declaration public static Exception ToSingleOrAggregatedOrDefaultException(this JsonErrors jsonErrors) Parameters Type Name Description JsonErrors jsonErrors Returns Type Description Exception | Improve this Doc View Source ToStringOrDefaultMessage(JsonErrors) Declaration public static string ToStringOrDefaultMessage(this JsonErrors jsonErrors) Parameters Type Name Description JsonErrors jsonErrors Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorsTextJsonConverter.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonErrorsTextJsonConverter.html",
    "title": "Class JsonErrorsTextJsonConverter | Documentations",
    "keywords": "Class JsonErrorsTextJsonConverter Inheritance System.Object JsonErrorsTextJsonConverter Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class JsonErrorsTextJsonConverter : JsonConverter<JsonErrors> Methods | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override JsonErrors Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description JsonErrors | Improve this Doc View Source Write(Utf8JsonWriter, JsonErrors, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, JsonErrors jsonErrors, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer JsonErrors jsonErrors JsonSerializerOptions options Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonResult.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.JsonResult.html",
    "title": "Class JsonResult | Documentations",
    "keywords": "Class JsonResult Inheritance System.Object JsonResult ServiceResult Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class JsonResult : ObjectResult Constructors | Improve this Doc View Source JsonResult() Declaration public JsonResult() Properties | Improve this Doc View Source Formatters If not specified, the formatters from startup are used by default. Declaration public FormatterCollection<IOutputFormatter>? Formatters { get; set; } Property Value Type Description System.Nullable < FormatterCollection < IOutputFormatter >> Methods | Improve this Doc View Source ToString() Declaration public override string? ToString() Returns Type Description System.Nullable < System.String > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.NotSucceededException.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.NotSucceededException.html",
    "title": "Class NotSucceededException | Documentations",
    "keywords": "Class NotSucceededException Inheritance System.Object NotSucceededException Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class NotSucceededException : Exception Constructors | Improve this Doc View Source NotSucceededException(IServiceResult) Declaration public NotSucceededException(IServiceResult serviceResult) Parameters Type Name Description IServiceResult serviceResult | Improve this Doc View Source NotSucceededException(IServiceResult, Nullable<String>) Declaration public NotSucceededException(IServiceResult serviceResult, string? message) Parameters Type Name Description IServiceResult serviceResult System.Nullable < System.String > message | Improve this Doc View Source NotSucceededException(IServiceResult, Nullable<String>, Nullable<Exception>) Declaration public NotSucceededException(IServiceResult serviceResult, string? message, Exception? innerException) Parameters Type Name Description IServiceResult serviceResult System.Nullable < System.String > message System.Nullable < Exception > innerException Properties | Improve this Doc View Source ServiceResult Declaration public IServiceResult ServiceResult { get; } Property Value Type Description IServiceResult Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.ServiceResult.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.ServiceResult.html",
    "title": "Class ServiceResult | Documentations",
    "keywords": "Class ServiceResult Inheritance System.Object JsonResult ServiceResult ServiceResult<ContentType> Implements IServiceResult IStatusCodeActionResult IActionResult IMutableServiceResult Inherited Members JsonResult.Formatters JsonResult.ToString() Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class ServiceResult : JsonResult, IServiceResult, IStatusCodeActionResult, IActionResult, IMutableServiceResult Constructors | Improve this Doc View Source ServiceResult(Boolean, Nullable<Object>, Nullable<Int32>) Declaration public ServiceResult(bool succeeded, object? content = null, int? statusCode = null) Parameters Type Name Description System.Boolean succeeded System.Nullable < System.Object > content System.Nullable < System.Int32 > statusCode Properties | Improve this Doc View Source Content Declaration public object? Content { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source ContentOrDefault Declaration protected virtual object? ContentOrDefault { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source Errors Declaration public JsonErrors Errors { get; } Property Value Type Description JsonErrors | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DeepCopy() Declaration public ServiceResultDatransject DeepCopy() Returns Type Description ServiceResultDatransject Explicit Interface Implementations | Improve this Doc View Source IMutableServiceResult.Content Declaration object? IMutableServiceResult.Content { get; set; } Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source IMutableServiceResult.Errors Declaration JsonErrors IMutableServiceResult.Errors { get; set; } Returns Type Description JsonErrors | Improve this Doc View Source IMutableServiceResult.StatusCode Declaration int? IMutableServiceResult.StatusCode { get; set; } Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source IMutableServiceResult.Succeeded Declaration bool IMutableServiceResult.Succeeded { get; set; } Returns Type Description System.Boolean Implements IServiceResult IStatusCodeActionResult IActionResult IMutableServiceResult Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IServiceResultExtensions.Success(IServiceResult, IEnumerable<String>) IServiceResultExtensions.Success(IServiceResult, String[]) IServiceResultExtensions.ThrowOnError(IServiceResult)"
  },
  "Teronis.DotNet/Teronis.Mvc.ServiceResulting.ServiceResultDatransject.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.ServiceResulting.ServiceResultDatransject.html",
    "title": "Struct ServiceResultDatransject | Documentations",
    "keywords": "Struct ServiceResultDatransject Namespace : Teronis.Mvc.ServiceResulting Assembly : Teronis.AspNetCore.Mvc.dll Syntax public struct ServiceResultDatransject Constructors | Improve this Doc View Source ServiceResultDatransject(Boolean, Nullable<Object>, JsonErrors, Type, Nullable<FormatterCollection<IOutputFormatter>>, Nullable<MediaTypeCollection>, Nullable<Int32>) Declaration public ServiceResultDatransject(bool succeeded, object? content, JsonErrors errors, Type declaredType, FormatterCollection<IOutputFormatter>? formatters, MediaTypeCollection? contentTypes, int? statusCode) Parameters Type Name Description System.Boolean succeeded System.Nullable < System.Object > content JsonErrors errors Type declaredType System.Nullable < FormatterCollection < IOutputFormatter >> formatters System.Nullable < MediaTypeCollection > contentTypes System.Nullable < System.Int32 > statusCode Properties | Improve this Doc View Source Content Declaration public object? Content { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source ContentTypes Declaration public MediaTypeCollection? ContentTypes { get; } Property Value Type Description System.Nullable < MediaTypeCollection > | Improve this Doc View Source DeclaredType Declaration public Type DeclaredType { get; } Property Value Type Description Type | Improve this Doc View Source Errors Declaration public JsonErrors Errors { get; } Property Value Type Description JsonErrors | Improve this Doc View Source Formatters Declaration public FormatterCollection<IOutputFormatter>? Formatters { get; } Property Value Type Description System.Nullable < FormatterCollection < IOutputFormatter >> | Improve this Doc View Source StatusCode Declaration public int? StatusCode { get; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Succeeded Declaration public bool Succeeded { get; } Property Value Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Mvc.TypesProvidingApplicationPart.html": {
    "href": "Teronis.DotNet/Teronis.Mvc.TypesProvidingApplicationPart.html",
    "title": "Class TypesProvidingApplicationPart | Documentations",
    "keywords": "Class TypesProvidingApplicationPart Enables you to inject custom controllers to application that are not auto-discovered. Inheritance System.Object TypesProvidingApplicationPart Implements IApplicationPartTypeProvider Namespace : Teronis.Mvc Assembly : Teronis.AspNetCore.Mvc.dll Syntax public class TypesProvidingApplicationPart : ApplicationPart, IApplicationPartTypeProvider Constructors | Improve this Doc View Source TypesProvidingApplicationPart(IEnumerable<TypeInfo>) Declaration public TypesProvidingApplicationPart(IEnumerable<TypeInfo> types) Parameters Type Name Description IEnumerable < TypeInfo > types | Improve this Doc View Source TypesProvidingApplicationPart(IEnumerable<TypeInfo>, Nullable<String>) Declaration public TypesProvidingApplicationPart(IEnumerable<TypeInfo> types, string? name) Parameters Type Name Description IEnumerable < TypeInfo > types System.Nullable < System.String > name Properties | Improve this Doc View Source Name Declaration public override string? Name { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Types Declaration public IEnumerable<TypeInfo> Types { get; } Property Value Type Description IEnumerable < TypeInfo > Methods | Improve this Doc View Source Create(Nullable<String>, TypeInfo[]) Declaration public static TypesProvidingApplicationPart Create(string? name, params TypeInfo[] types) Parameters Type Name Description System.Nullable < System.String > name TypeInfo [] types Returns Type Description TypesProvidingApplicationPart | Improve this Doc View Source Create(TypeInfo[]) Declaration public static TypesProvidingApplicationPart Create(params TypeInfo[] types) Parameters Type Name Description TypeInfo [] types Returns Type Description TypesProvidingApplicationPart Implements IApplicationPartTypeProvider Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.Api.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.Api.html",
    "title": "Namespace Teronis.NUnit.Api | Documentations",
    "keywords": "Namespace Teronis.NUnit.Api Classes ITestResultExtensions NUnitSingleThreadAssemblyRunner Creates a runner with following hardcoded settings: [FrameworkPackageSettings.NumberOfTestWorkers] = 0, [FrameworkPackageSettings.SynchronousEvents] = true, [FrameworkPackageSettings.RunOnMainThread] = true Uses internally."
  },
  "Teronis.DotNet/Teronis.NUnit.Api.ITestResultExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.Api.ITestResultExtensions.html",
    "title": "Class ITestResultExtensions | Documentations",
    "keywords": "Class ITestResultExtensions Inheritance System.Object ITestResultExtensions Namespace : Teronis.NUnit.Api Assembly : Teronis.NUnit.Core.dll Syntax public static class ITestResultExtensions : object Methods | Improve this Doc View Source GenerateSummaryReport(Nullable<ITestResult>) Generates an human readable summary report. Declaration public static string? GenerateSummaryReport(this ITestResult? result) Parameters Type Name Description System.Nullable < ITestResult > result Returns Type Description System.Nullable < System.String > The result report generated from . | Improve this Doc View Source GenerateXmlReport(Nullable<ITestResult>, Boolean) Generates the XML report of result . Declaration public static string GenerateXmlReport(this ITestResult? result, bool ident = false) Parameters Type Name Description System.Nullable < ITestResult > result The test result. System.Boolean ident Idents XML output. Returns Type Description System.String The result of of . The root node is <tests/>."
  },
  "Teronis.DotNet/Teronis.NUnit.Api.NUnitSingleThreadAssemblyRunner.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.Api.NUnitSingleThreadAssemblyRunner.html",
    "title": "Class NUnitSingleThreadAssemblyRunner | Documentations",
    "keywords": "Class NUnitSingleThreadAssemblyRunner Creates a runner with following hardcoded settings: [FrameworkPackageSettings.NumberOfTestWorkers] = 0, [FrameworkPackageSettings.SynchronousEvents] = true, [FrameworkPackageSettings.RunOnMainThread] = true Uses internally. Inheritance System.Object NUnitSingleThreadAssemblyRunner Namespace : Teronis.NUnit.Api Assembly : Teronis.NUnit.Core.dll Syntax public class NUnitSingleThreadAssemblyRunner : object Constructors | Improve this Doc View Source NUnitSingleThreadAssemblyRunner() Declaration public NUnitSingleThreadAssemblyRunner() | Improve this Doc View Source NUnitSingleThreadAssemblyRunner(Nullable<IEnumerable<KeyValuePair<String, Object>>>) Declaration public NUnitSingleThreadAssemblyRunner(IEnumerable<KeyValuePair<string, object>>? additionalSettings) Parameters Type Name Description System.Nullable < IEnumerable < KeyValuePair < System.String , System.Object >>> additionalSettings Methods | Improve this Doc View Source LoadTestsInAssembly(Assembly) Declaration public void LoadTestsInAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly | Improve this Doc View Source RunTests(Nullable<ITestListener>, Nullable<ITestFilter>) Declaration public ITestResult? RunTests(ITestListener? listener = null, ITestFilter? filter = null) Parameters Type Name Description System.Nullable < ITestListener > listener System.Nullable < ITestFilter > filter Returns Type Description System.Nullable < ITestResult > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.AssemblyTaskTestCaseBlockStaticMemberCollector.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.AssemblyTaskTestCaseBlockStaticMemberCollector.html",
    "title": "Class AssemblyTaskTestCaseBlockStaticMemberCollector | Documentations",
    "keywords": "Class AssemblyTaskTestCaseBlockStaticMemberCollector A class that collects the member of each class that is annotated with TaskTestCaseBlockStaticMemberProviderAttribute . The results of CollectMembers() you can use with TaskTestCaseBlockMemberAssigner . Inheritance System.Object AssemblyTaskTestCaseBlockStaticMemberCollector Implements ITaskTestCaseBlockMemberCollector Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class AssemblyTaskTestCaseBlockStaticMemberCollector : object, ITaskTestCaseBlockMemberCollector Constructors | Improve this Doc View Source AssemblyTaskTestCaseBlockStaticMemberCollector(Assembly) Declaration public AssemblyTaskTestCaseBlockStaticMemberCollector(Assembly assembly) Parameters Type Name Description Assembly assembly Methods | Improve this Doc View Source CollectMembers() Declaration public IEnumerable<TaskTestCaseBlockMember> CollectMembers() Returns Type Description IEnumerable < TaskTestCaseBlockMember > Implements ITaskTestCaseBlockMemberCollector Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.EmptyServiceProvider.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.EmptyServiceProvider.html",
    "title": "Class EmptyServiceProvider | Documentations",
    "keywords": "Class EmptyServiceProvider Represents default implementation of where activates the requested service by using . Inheritance System.Object EmptyServiceProvider Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public sealed class EmptyServiceProvider : IServiceProvider Fields | Improve this Doc View Source Instance Declaration public static EmptyServiceProvider Instance Field Value Type Description EmptyServiceProvider Methods | Improve this Doc View Source GetService(Type) Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType Returns Type Description System.Object Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.html",
    "title": "Namespace Teronis.NUnit.TaskTests | Documentations",
    "keywords": "Namespace Teronis.NUnit.TaskTests Classes AssemblyTaskTestCaseBlockStaticMemberCollector A class that collects the member of each class that is annotated with TaskTestCaseBlockStaticMemberProviderAttribute . The results of CollectMembers() you can use with TaskTestCaseBlockMemberAssigner . EmptyServiceProvider Represents default implementation of where activates the requested service by using . IEnumerableTaskTestCaseBlockExtensions IEnumerableTaskTestsMemberExtensions IInitializableTaskTestCaseBlockExtensions TaskExtensions TaskTestCase TaskTestCaseBlock This class is inteded to be inherited. In its derived class it is intended to implement a static member of such derived class. There are three ways to initialize the static member. First store a static instance of TaskTestCaseList in derived class and pass it as parameter to constructor of TaskTestCaseBlock . Then use AddTest(TaskTestCaseList, Func<CancellationToken, Task>, Nullable<String>) . By calling GetTestCases() you get the TaskTestCaseParameters , but before that you need to prepare them by calling PrepareTasksAssertion(CancellationToken) . The more automatic way is to use the parameterless constructor of TaskTestCaseBlock . It passes a TaskTestCaseList to its base type TaskTestCaseBlock . Because you can't to call AddTest(TaskTestCaseList, Func<CancellationToken, Task>, Nullable<String>) but AddTest(Func<CancellationToken, Task>, Nullable<String>) , you have to call Initialize() after the creation of derived class. Last but not least you can you just skip the instantiation of the static member. Then you must decorate the derived class with TaskTestCaseBlockStaticMemberProviderAttribute . After that you can leave the instantiaton to AssemblyTaskTestCaseBlockStaticMemberCollector in conjunction with TaskTestCaseBlockMemberAssigner . TaskTestCaseBlockMember TaskTestCaseBlockMemberAssigner TaskTestCaseBlockMemberAssignerExtensions TaskTestCaseBlockPreparer Prepare instances of type ITaskTestCaseBlock . The results of PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, CancellationToken) you can use with and that result in return you can store at example to TaskTestCases that is used by AssertTask(Task) . TaskTestCaseBlockServiceCollector Provides ITaskTestCaseBlock service collector. TaskTestCaseBlockStaticMemberProviderAttribute Describes a class that it has a static member of type ITaskTestCaseBlock . This attribute is higly recommend to be used in conjunction with AssemblyTaskTestCaseBlockStaticMemberCollector . TaskTestCaseBlockStaticMemberSourceAttribute Use this attribute when you only want to test a single static instance member of ITaskTestCaseBlock . TaskTestCaseList A list of many SlimLazy<T> whose generic type is . TaskTestCaseParameters This is the derived class of . TaskTestCaseSourceTestFixture A NUnit test fixture for tasks. The only implemented method AssertTask(Task) is annoated with whose property points to TaskTestCases . If this (derived) class is target of for example NUnitSingleThreadAssemblyRunner you should initialize TaskTestCases . Structs TestCaseDataConfigurator Interfaces IInitializableTaskTestCaseBlock ITaskTestCaseBlock ITaskTestCaseBlockMemberAssigner ITaskTestCaseBlockMemberCollector Provides a mechanism to collect TaskTestCaseBlockMember . ITaskTestCaseBlockPreparer Prepare instances of type ITaskTestCaseBlock ."
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.IEnumerableTaskTestCaseBlockExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.IEnumerableTaskTestCaseBlockExtensions.html",
    "title": "Class IEnumerableTaskTestCaseBlockExtensions | Documentations",
    "keywords": "Class IEnumerableTaskTestCaseBlockExtensions Inheritance System.Object IEnumerableTaskTestCaseBlockExtensions Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public static class IEnumerableTaskTestCaseBlockExtensions : object Methods | Improve this Doc View Source PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, TaskTestCaseBlockPreparer, CancellationToken) See PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, CancellationToken) . Declaration public static IAsyncEnumerable<TaskTestCaseParameters> PrepareTasksAssertion(this IEnumerable<ITaskTestCaseBlock> taskTestCaseBlocks, TaskTestCaseBlockPreparer testBlockPreparer, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable < ITaskTestCaseBlock > taskTestCaseBlocks TaskTestCaseBlockPreparer testBlockPreparer CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < TaskTestCaseParameters >"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.IEnumerableTaskTestsMemberExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.IEnumerableTaskTestsMemberExtensions.html",
    "title": "Class IEnumerableTaskTestsMemberExtensions | Documentations",
    "keywords": "Class IEnumerableTaskTestsMemberExtensions Inheritance System.Object IEnumerableTaskTestsMemberExtensions Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public static class IEnumerableTaskTestsMemberExtensions : object Methods | Improve this Doc View Source AssignInstances(IEnumerable<TaskTestCaseBlockMember>, TaskTestCaseBlockMemberAssigner, Nullable<IServiceProvider>) See AssignInstance(TaskTestCaseBlockMember, Nullable<IServiceProvider>) . Declaration public static IEnumerable<ITaskTestCaseBlock> AssignInstances(this IEnumerable<TaskTestCaseBlockMember> taskTestsMember, TaskTestCaseBlockMemberAssigner memberPreparer, IServiceProvider? serviceProvider = null) Parameters Type Name Description IEnumerable < TaskTestCaseBlockMember > taskTestsMember TaskTestCaseBlockMemberAssigner memberPreparer System.Nullable < IServiceProvider > serviceProvider Returns Type Description IEnumerable < ITaskTestCaseBlock >"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.IInitializableTaskTestCaseBlock.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.IInitializableTaskTestCaseBlock.html",
    "title": "Interface IInitializableTaskTestCaseBlock | Documentations",
    "keywords": "Interface IInitializableTaskTestCaseBlock Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public interface IInitializableTaskTestCaseBlock Methods | Improve this Doc View Source Initialize() Initializes the instance. (Compare ). Used only in TaskTestCaseBlockMemberAssigner when assigning instance. Declaration void Initialize() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.IInitializableTaskTestCaseBlockExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.IInitializableTaskTestCaseBlockExtensions.html",
    "title": "Class IInitializableTaskTestCaseBlockExtensions | Documentations",
    "keywords": "Class IInitializableTaskTestCaseBlockExtensions Inheritance System.Object IInitializableTaskTestCaseBlockExtensions Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public static class IInitializableTaskTestCaseBlockExtensions : object Methods | Improve this Doc View Source Initialize<T>(T) Copies temporary, static and to be tested lazy tasks over to instance scoped list. Must be called when you use AddTest(Func<CancellationToken, Task>, Nullable<String>) . Declaration public static T Initialize<T>(this T testCaseBlock) where T : TaskTestCaseBlock, IInitializableTaskTestCaseBlock Parameters Type Name Description T testCaseBlock Returns Type Description T Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlock.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlock.html",
    "title": "Interface ITaskTestCaseBlock | Documentations",
    "keywords": "Interface ITaskTestCaseBlock Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public interface ITaskTestCaseBlock Methods | Improve this Doc View Source GetTestCases() Gets the list of assertable tasks. Declaration IEnumerable<TaskTestCase> GetTestCases() Returns Type Description IEnumerable < TaskTestCase > | Improve this Doc View Source PrepareTasksAssertion(CancellationToken) Awaits each assertable tasks while ignoring occuring exceptions. Declaration Task PrepareTasksAssertion(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Represents the operation. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockMemberAssigner.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockMemberAssigner.html",
    "title": "Interface ITaskTestCaseBlockMemberAssigner | Documentations",
    "keywords": "Interface ITaskTestCaseBlockMemberAssigner Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public interface ITaskTestCaseBlockMemberAssigner Methods | Improve this Doc View Source AssignInstance(TaskTestCaseBlockMember, Nullable<IServiceProvider>) Sets Instance via and serviceProvider . Declaration ITaskTestCaseBlock AssignInstance(TaskTestCaseBlockMember collectorEntry, IServiceProvider? serviceProvider) Parameters Type Name Description TaskTestCaseBlockMember collectorEntry The collector its instance you want to assign. System.Nullable < IServiceProvider > serviceProvider The service provider is used to get or create instances if Instance is null. If null Instance is taken in exchange. The consequence is that the class cannot have parameterized constructors unless is used. Returns Type Description ITaskTestCaseBlock The assigned instance. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) TaskTestCaseBlockMemberAssignerExtensions.AssignInstances(ITaskTestCaseBlockMemberAssigner, IEnumerable<TaskTestCaseBlockMember>, Nullable<IServiceProvider>)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockMemberCollector.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockMemberCollector.html",
    "title": "Interface ITaskTestCaseBlockMemberCollector | Documentations",
    "keywords": "Interface ITaskTestCaseBlockMemberCollector Provides a mechanism to collect TaskTestCaseBlockMember . Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public interface ITaskTestCaseBlockMemberCollector Methods | Improve this Doc View Source CollectMembers() Collects class members which implements ITaskTestCaseBlock . Declaration IEnumerable<TaskTestCaseBlockMember> CollectMembers() Returns Type Description IEnumerable < TaskTestCaseBlockMember > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockPreparer.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.ITaskTestCaseBlockPreparer.html",
    "title": "Interface ITaskTestCaseBlockPreparer | Documentations",
    "keywords": "Interface ITaskTestCaseBlockPreparer Prepare instances of type ITaskTestCaseBlock . Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public interface ITaskTestCaseBlockPreparer Methods | Improve this Doc View Source PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, CancellationToken) Awaits all assertable tasks in each ITaskTestCaseBlock instance by calling PrepareTasksAssertion(CancellationToken) . Declaration IAsyncEnumerable<TaskTestCaseParameters> PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock> instances, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable < ITaskTestCaseBlock > instances Instances of type ITaskTestCaseBlock . CancellationToken cancellationToken The cancellation token. Returns Type Description IAsyncEnumerable < TaskTestCaseParameters > Represents the list of assertable tasks that are about to finish. Store it in static scope and use it in combination with and . Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskExtensions.html",
    "title": "Class TaskExtensions | Documentations",
    "keywords": "Class TaskExtensions Inheritance System.Object TaskExtensions Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public static class TaskExtensions : object Methods | Improve this Doc View Source AssertIsNotErroneous(Task) Asserts that task is not erroneous, otherwise the inner exceptions are thrown within . You may call it in a test case that is decorated with TaskTestCaseBlockStaticMemberSourceAttribute or that provides assertable task as first parameter. Declaration public static void AssertIsNotErroneous(this Task task) Parameters Type Name Description Task task The task to be asserted."
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCase.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCase.html",
    "title": "Class TaskTestCase | Documentations",
    "keywords": "Class TaskTestCase Inheritance System.Object SlimLazy < Task > LazyTask TaskTestCase Implements ITestCaseData Inherited Members LazyTask.SetValueIfNotCreated(CancellationToken) SlimLazy<Task>.IsValueCreated SlimLazy<Task>.Value SlimLazy<Task>.SetValueIfNotCreated(Task) Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCase : LazyTask, ITestCaseData Constructors | Improve this Doc View Source TaskTestCase(Func<CancellationToken, Task>, TestCaseData) Declaration public TaskTestCase(Func<CancellationToken, Task> taskProvider, TestCaseData testCaseData) Parameters Type Name Description Func < CancellationToken , Task > taskProvider TestCaseData testCaseData Properties | Improve this Doc View Source Arguments Declaration public object? [] Arguments { get; } Property Value Type Description System.Nullable < System.Object >[] | Improve this Doc View Source ExpectedResult Declaration public object? ExpectedResult { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source HasExpectedResult Declaration public bool HasExpectedResult { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Properties Declaration public IPropertyBag Properties { get; } Property Value Type Description IPropertyBag | Improve this Doc View Source RunState Declaration public RunState RunState { get; } Property Value Type Description RunState | Improve this Doc View Source TestName Declaration public string? TestName { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source ConfigureTestCaseData(Action<TestCaseDataConfigurator>) Let's you configure the internal residing . Declaration public TaskTestCase ConfigureTestCaseData(Action<TestCaseDataConfigurator> configure) Parameters Type Name Description Action < TestCaseDataConfigurator > configure Returns Type Description TaskTestCase Implements ITestCaseData Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlock.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlock.html",
    "title": "Class TaskTestCaseBlock | Documentations",
    "keywords": "Class TaskTestCaseBlock This class is inteded to be inherited. In its derived class it is intended to implement a static member of such derived class. There are three ways to initialize the static member. First store a static instance of TaskTestCaseList in derived class and pass it as parameter to constructor of TaskTestCaseBlock . Then use AddTest(TaskTestCaseList, Func<CancellationToken, Task>, Nullable<String>) . By calling GetTestCases() you get the TaskTestCaseParameters , but before that you need to prepare them by calling PrepareTasksAssertion(CancellationToken) . The more automatic way is to use the parameterless constructor of TaskTestCaseBlock . It passes a TaskTestCaseList to its base type TaskTestCaseBlock . Because you can't to call AddTest(TaskTestCaseList, Func<CancellationToken, Task>, Nullable<String>) but AddTest(Func<CancellationToken, Task>, Nullable<String>) , you have to call Initialize() after the creation of derived class. Last but not least you can you just skip the instantiation of the static member. Then you must decorate the derived class with TaskTestCaseBlockStaticMemberProviderAttribute . After that you can leave the instantiaton to AssemblyTaskTestCaseBlockStaticMemberCollector in conjunction with TaskTestCaseBlockMemberAssigner . Inheritance System.Object TaskTestCaseBlock Implements ITaskTestCaseBlock IInitializableTaskTestCaseBlock Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public abstract class TaskTestCaseBlock : object, ITaskTestCaseBlock, IInitializableTaskTestCaseBlock Constructors | Improve this Doc View Source TaskTestCaseBlock() Declaration protected TaskTestCaseBlock() | Improve this Doc View Source TaskTestCaseBlock(TaskTestCaseList) Declaration protected TaskTestCaseBlock(TaskTestCaseList assertableTaskFactoryList) Parameters Type Name Description TaskTestCaseList assertableTaskFactoryList Properties | Improve this Doc View Source TaskTestCaseList Declaration protected virtual TaskTestCaseList TaskTestCaseList { get; } Property Value Type Description TaskTestCaseList Methods | Improve this Doc View Source AddTest(Func<CancellationToken, Task>, Nullable<String>) Adds assertableTaskFactory to an internal static task factory list. You must call Initialize() when creating TaskTestCaseBlock manually. Declaration public static TaskTestCase AddTest(Func<CancellationToken, Task> assertableTaskFactory, string? testName = null) Parameters Type Name Description Func < CancellationToken , Task > assertableTaskFactory System.Nullable < System.String > testName Inferred by . Returns Type Description TaskTestCase | Improve this Doc View Source AddTest(TaskTestCaseList, Func<CancellationToken, Task>, Nullable<String>) Adds assertableTaskFactory to assertableTaskFactoryList . Declaration public static TaskTestCase AddTest(TaskTestCaseList assertableTaskFactoryList, Func<CancellationToken, Task> assertableTaskFactory, string? testName = null) Parameters Type Name Description TaskTestCaseList assertableTaskFactoryList Func < CancellationToken , Task > assertableTaskFactory The assertable task factory. System.Nullable < System.String > testName Inferred by . Returns Type Description TaskTestCase | Improve this Doc View Source GetTestCases() Returns all tasks that you can await (e.g. rethrow (assertion) exceptions) from TaskTestCaseList . Each assertable task represents one test. Declaration public IEnumerable<TaskTestCase> GetTestCases() Returns Type Description IEnumerable < TaskTestCase > The test cases (yielded). | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source InitializeInstance() Extends the initializing procedure when calling Initialize() . Declaration protected virtual void InitializeInstance() | Improve this Doc View Source PrepareTasksAssertion(CancellationToken) Awaits each task but ignores exceptions. Declaration public virtual Task PrepareTasksAssertion(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements ITaskTestCaseBlock IInitializableTaskTestCaseBlock Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMember.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMember.html",
    "title": "Class TaskTestCaseBlockMember | Documentations",
    "keywords": "Class TaskTestCaseBlockMember Inheritance System.Object TaskTestCaseBlockMember Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockMember : object Constructors | Improve this Doc View Source TaskTestCaseBlockMember(MemberInfo, ITaskTestCaseBlock) Declaration public TaskTestCaseBlockMember(MemberInfo memberInfo, ITaskTestCaseBlock taskTestsInstance) Parameters Type Name Description MemberInfo memberInfo ITaskTestCaseBlock taskTestsInstance Properties | Improve this Doc View Source Instance If null it can be set by calling SetInstance(ITaskTestCaseBlock) . Declaration public ITaskTestCaseBlock Instance { get; } Property Value Type Description ITaskTestCaseBlock | Improve this Doc View Source MemberInfo Declaration public MemberInfo MemberInfo { get; } Property Value Type Description MemberInfo Methods | Improve this Doc View Source GetInstanceType() Gets the concrete instance type of MemberInfo . Declaration public Type GetInstanceType() Returns Type Description Type | Improve this Doc View Source SetInstance(ITaskTestCaseBlock) Sets taskTestsInstance as value of MemberInfo . After that it is stored to Instance too. Declaration public void SetInstance(ITaskTestCaseBlock taskTestsInstance) Parameters Type Name Description ITaskTestCaseBlock taskTestsInstance The new instance. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMemberAssigner.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMemberAssigner.html",
    "title": "Class TaskTestCaseBlockMemberAssigner | Documentations",
    "keywords": "Class TaskTestCaseBlockMemberAssigner Inheritance System.Object TaskTestCaseBlockMemberAssigner Implements ITaskTestCaseBlockMemberAssigner Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockMemberAssigner : object, ITaskTestCaseBlockMemberAssigner Methods | Improve this Doc View Source AssignInstance(TaskTestCaseBlockMember, Nullable<IServiceProvider>) If the activated instance is of type IInitializableTaskTestCaseBlock its method Initialize() method will be called. Declaration public virtual ITaskTestCaseBlock AssignInstance(TaskTestCaseBlockMember collectorEntry, IServiceProvider? serviceProvider) Parameters Type Name Description TaskTestCaseBlockMember collectorEntry System.Nullable < IServiceProvider > serviceProvider Returns Type Description ITaskTestCaseBlock Implements ITaskTestCaseBlockMemberAssigner Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMemberAssignerExtensions.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockMemberAssignerExtensions.html",
    "title": "Class TaskTestCaseBlockMemberAssignerExtensions | Documentations",
    "keywords": "Class TaskTestCaseBlockMemberAssignerExtensions Inheritance System.Object TaskTestCaseBlockMemberAssignerExtensions Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public static class TaskTestCaseBlockMemberAssignerExtensions : object Methods | Improve this Doc View Source AssignInstances(ITaskTestCaseBlockMemberAssigner, IEnumerable<TaskTestCaseBlockMember>, Nullable<IServiceProvider>) Sets Instance via and serviceProvider of each item. Declaration public static IEnumerable<ITaskTestCaseBlock> AssignInstances(this ITaskTestCaseBlockMemberAssigner memberAssigner, IEnumerable<TaskTestCaseBlockMember> collectorEntries, IServiceProvider? serviceProvider = null) Parameters Type Name Description ITaskTestCaseBlockMemberAssigner memberAssigner IEnumerable < TaskTestCaseBlockMember > collectorEntries System.Nullable < IServiceProvider > serviceProvider The service provider is used to get or create instances if Instance is null. If null Instance is taken in exchange. The consequence is that the class cannot have parameterized constructors unless is used. Returns Type Description IEnumerable < ITaskTestCaseBlock > The assigned instance."
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockPreparer.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockPreparer.html",
    "title": "Class TaskTestCaseBlockPreparer | Documentations",
    "keywords": "Class TaskTestCaseBlockPreparer Prepare instances of type ITaskTestCaseBlock . The results of PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, CancellationToken) you can use with and that result in return you can store at example to TaskTestCases that is used by AssertTask(Task) . Inheritance System.Object TaskTestCaseBlockPreparer Implements ITaskTestCaseBlockPreparer Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockPreparer : object, ITaskTestCaseBlockPreparer Methods | Improve this Doc View Source PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock>, CancellationToken) Declaration public IAsyncEnumerable<TaskTestCaseParameters> PrepareTasksAssertion(IEnumerable<ITaskTestCaseBlock> instances, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable < ITaskTestCaseBlock > instances CancellationToken cancellationToken Returns Type Description IAsyncEnumerable < TaskTestCaseParameters > Implements ITaskTestCaseBlockPreparer Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockServiceCollector.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockServiceCollector.html",
    "title": "Class TaskTestCaseBlockServiceCollector | Documentations",
    "keywords": "Class TaskTestCaseBlockServiceCollector Provides ITaskTestCaseBlock service collector. Inheritance System.Object TaskTestCaseBlockServiceCollector Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockServiceCollector : object Methods | Improve this Doc View Source CollectTaskTests(IServiceProvider) Collects services from serviceProvider that registered as ITaskTestCaseBlock . Declaration public virtual IEnumerable<ITaskTestCaseBlock> CollectTaskTests(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider. Returns Type Description IEnumerable < ITaskTestCaseBlock > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockStaticMemberProviderAttribute.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockStaticMemberProviderAttribute.html",
    "title": "Class TaskTestCaseBlockStaticMemberProviderAttribute | Documentations",
    "keywords": "Class TaskTestCaseBlockStaticMemberProviderAttribute Describes a class that it has a static member of type ITaskTestCaseBlock . This attribute is higly recommend to be used in conjunction with AssemblyTaskTestCaseBlockStaticMemberCollector . Inheritance System.Object TaskTestCaseBlockStaticMemberProviderAttribute Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockStaticMemberProviderAttribute : Attribute Constructors | Improve this Doc View Source TaskTestCaseBlockStaticMemberProviderAttribute(String) Declaration public TaskTestCaseBlockStaticMemberProviderAttribute(string staticMemberName) Parameters Type Name Description System.String staticMemberName Properties | Improve this Doc View Source StaticMemberMemberName Declaration public string StaticMemberMemberName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockStaticMemberSourceAttribute.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseBlockStaticMemberSourceAttribute.html",
    "title": "Class TaskTestCaseBlockStaticMemberSourceAttribute | Documentations",
    "keywords": "Class TaskTestCaseBlockStaticMemberSourceAttribute Use this attribute when you only want to test a single static instance member of ITaskTestCaseBlock . Inheritance System.Object TaskTestCaseBlockStaticMemberSourceAttribute Implements ITestBuilder IImplyFixture Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseBlockStaticMemberSourceAttribute : NUnitAttribute, ITestBuilder, IImplyFixture Constructors | Improve this Doc View Source TaskTestCaseBlockStaticMemberSourceAttribute(Type, String) Creates an attribute that is recognized by NUnit. Declaration public TaskTestCaseBlockStaticMemberSourceAttribute(Type taskTestsClassType, string staticMemberName) Parameters Type Name Description Type taskTestsClassType The TaskTestCaseBlock class type that has a static member of type ITaskTestCaseBlock . System.String staticMemberName The name of the static member that implements ITaskTestCaseBlock . Properties | Improve this Doc View Source TaskTestsClassType Declaration public Type TaskTestsClassType { get; } Property Value Type Description Type | Improve this Doc View Source TaskTestsMemberName Declaration public string TaskTestsMemberName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source BuildFrom(IMethodInfo, Nullable<NUnit.Framework.Internal.Test>) Declaration public IEnumerable<TestMethod> BuildFrom(IMethodInfo testMethodInfo, NUnit.Framework.Internal.Test? suite) Parameters Type Name Description IMethodInfo testMethodInfo System.Nullable < NUnit.Framework.Internal.Test > suite Returns Type Description IEnumerable < TestMethod > Implements ITestBuilder IImplyFixture Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseList.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseList.html",
    "title": "Class TaskTestCaseList | Documentations",
    "keywords": "Class TaskTestCaseList A list of many SlimLazy<T> whose generic type is . Inheritance System.Object TaskTestCaseList Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseList : Collection<TaskTestCase> Methods | Improve this Doc View Source AddRange(IEnumerable<TaskTestCase>) Declaration public void AddRange(IEnumerable<TaskTestCase> testTasks) Parameters Type Name Description IEnumerable < TaskTestCase > testTasks | Improve this Doc View Source AwaitEachTaskButIgnoreExceptionsAsync(CancellationToken) Declaration public Task AwaitEachTaskButIgnoreExceptionsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseParameters.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseParameters.html",
    "title": "Class TaskTestCaseParameters | Documentations",
    "keywords": "Class TaskTestCaseParameters This is the derived class of . Inheritance System.Object TaskTestCaseParameters Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public sealed class TaskTestCaseParameters : TestCaseParameters Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseSourceTestFixture.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TaskTestCaseSourceTestFixture.html",
    "title": "Class TaskTestCaseSourceTestFixture | Documentations",
    "keywords": "Class TaskTestCaseSourceTestFixture A NUnit test fixture for tasks. The only implemented method AssertTask(Task) is annoated with whose property points to TaskTestCases . If this (derived) class is target of for example NUnitSingleThreadAssemblyRunner you should initialize TaskTestCases . Inheritance System.Object TaskTestCaseSourceTestFixture Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public class TaskTestCaseSourceTestFixture : object Fields | Improve this Doc View Source TaskTestCases If this (derived) class is target of for example NUnitSingleThreadAssemblyRunner you should initialize TaskTestCases . Items of enumerable can consist of TaskTestCaseParameters and / [] Declaration public static IEnumerable? TaskTestCases Field Value Type Description System.Nullable < IEnumerable > Methods | Improve this Doc View Source AssertTask(Task) Declaration public virtual void AssertTask(Task assertableTask) Parameters Type Name Description Task assertableTask Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.NUnit.TaskTests.TestCaseDataConfigurator.html": {
    "href": "Teronis.DotNet/Teronis.NUnit.TaskTests.TestCaseDataConfigurator.html",
    "title": "Struct TestCaseDataConfigurator | Documentations",
    "keywords": "Struct TestCaseDataConfigurator Namespace : Teronis.NUnit.TaskTests Assembly : Teronis.NUnit.Core.dll Syntax public struct TestCaseDataConfigurator Methods | Improve this Doc View Source Explicit() Marks the test case as explicit. Declaration public TestCaseData Explicit() Returns Type Description TestCaseData | Improve this Doc View Source Explicit(String) Marks the test case as explicit, specifying the reason. Declaration public TestCaseData Explicit(string reason) Parameters Type Name Description System.String reason Returns Type Description TestCaseData | Improve this Doc View Source Ignore(String) Ignores this TestCase, specifying the reason.. Declaration public IgnoredTestCaseData Ignore(string reason) Parameters Type Name Description System.String reason The ignore reason. Returns Type Description IgnoredTestCaseData | Improve this Doc View Source Returns(Nullable<Object>) Sets the expected result for the test Declaration public TestCaseData Returns(object? result) Parameters Type Name Description System.Nullable < System.Object > result The expected result. Returns Type Description TestCaseData The modified TestCaseDataConfigurator . | Improve this Doc View Source SetArgDisplayNames(String[]) Sets the list of display names to use as the parameters in the test name. Declaration public TestCaseData SetArgDisplayNames(params string[] displayNames) Parameters Type Name Description System.String [] displayNames Returns Type Description TestCaseData | Improve this Doc View Source SetCategory(String) Applies a category to the test. Declaration public TestCaseData SetCategory(string category) Parameters Type Name Description System.String category The category. Returns Type Description TestCaseData | Improve this Doc View Source SetDescription(String) Sets the description for the test case being constructed. Declaration public TestCaseData SetDescription(string description) Parameters Type Name Description System.String description The description. Returns Type Description TestCaseData The modified TestCaseData instance. | Improve this Doc View Source SetName(Nullable<String>) Sets the name of the test case. Declaration public TestCaseData SetName(string? name) Parameters Type Name Description System.Nullable < System.String > name Returns Type Description TestCaseData The modified TestCaseData instance | Improve this Doc View Source SetProperty(String, Double) Applies a named property to the test. Declaration public TestCaseData SetProperty(string propName, double propValue) Parameters Type Name Description System.String propName System.Double propValue Returns Type Description TestCaseData | Improve this Doc View Source SetProperty(String, Int32) Applies a named property to the test. Declaration public TestCaseData SetProperty(string propName, int propValue) Parameters Type Name Description System.String propName System.Int32 propValue Returns Type Description TestCaseData | Improve this Doc View Source SetProperty(String, String) Applies a named property to the test. Declaration public TestCaseData SetProperty(string propName, string propValue) Parameters Type Name Description System.String propName System.String propValue Returns Type Description TestCaseData"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Annotations.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Annotations.html",
    "title": "Namespace Teronis.ObjectModel.Annotations | Documentations",
    "keywords": "Namespace Teronis.ObjectModel.Annotations Classes StringValueAttribute This attribute is used to represent a string value for a value in an enum. StringValueAttributeExtensions"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Annotations.StringValueAttribute.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Annotations.StringValueAttribute.html",
    "title": "Class StringValueAttribute | Documentations",
    "keywords": "Class StringValueAttribute This attribute is used to represent a string value for a value in an enum. Inheritance System.Object StringValueAttribute Namespace : Teronis.ObjectModel.Annotations Assembly : Teronis.NetStandard.Core.dll Syntax public class StringValueAttribute : Attribute Constructors | Improve this Doc View Source StringValueAttribute(String) Declaration public StringValueAttribute(string stringValue) Parameters Type Name Description System.String stringValue Properties | Improve this Doc View Source StringValue Holds the string value for a value in an enum. Declaration public string StringValue { get; protected set; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Annotations.StringValueAttributeExtensions.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Annotations.StringValueAttributeExtensions.html",
    "title": "Class StringValueAttributeExtensions | Documentations",
    "keywords": "Class StringValueAttributeExtensions Inheritance System.Object StringValueAttributeExtensions Namespace : Teronis.ObjectModel.Annotations Assembly : Teronis.NetStandard.Core.dll Syntax public static class StringValueAttributeExtensions : object Methods | Improve this Doc View Source GetStringValue(Enum, Int32) Will get the string value for a given enums value, this will only work if you assign the StringValue attribute to the items in your enum. Declaration public static string GetStringValue(this Enum value, int index = 0) Parameters Type Name Description Enum value System.Int32 index Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.ObjectModel.DataErrorInfosBase.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.DataErrorInfosBase.html",
    "title": "Class DataErrorInfosBase | Documentations",
    "keywords": "Class DataErrorInfosBase Inheritance System.Object DataErrorInfosBase ViewModelBase.DefaultDataErrorInfos Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public abstract class DataErrorInfosBase : INotifyDataErrorInfo Constructors | Improve this Doc View Source DataErrorInfosBase() Declaration public DataErrorInfosBase() Properties | Improve this Doc View Source ErrorInfos Declaration protected virtual Dictionary<string, ICollection<string>> ErrorInfos { get; } Property Value Type Description Dictionary < System.String , ICollection < System.String >> | Improve this Doc View Source HasErrors Declaration public virtual bool HasErrors { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetErrors(Nullable<String>) Declaration public virtual IEnumerable GetErrors(string? propertyName) Parameters Type Name Description System.Nullable < System.String > propertyName Returns Type Description IEnumerable | Improve this Doc View Source OnErrorsChanged(String) Declaration protected virtual void OnErrorsChanged(string propertyName) Parameters Type Name Description System.String propertyName | Improve this Doc View Source RemoveErrors(String) Declaration public virtual void RemoveErrors(string propertyName) Parameters Type Name Description System.String propertyName | Improve this Doc View Source SetErrors(String, ICollection<String>) Declaration public virtual void SetErrors(string propertyName, ICollection<string> errors) Parameters Type Name Description System.String propertyName ICollection < System.String > errors Events | Improve this Doc View Source ErrorsChanged Declaration public event EventHandler<DataErrorsChangedEventArgs>? ErrorsChanged Event Type Type Description System.Nullable < EventHandler < DataErrorsChangedEventArgs >> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.EventInvocationForwarder-2.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.EventInvocationForwarder-2.html",
    "title": "Class EventInvocationForwarder<SenderType, EventArgumentType> | Documentations",
    "keywords": "Class EventInvocationForwarder<SenderType, EventArgumentType> Inheritance System.Object EventInvocationForwarder<SenderType, EventArgumentType> PropertyChangeForwarder<EventArgumentType> Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public abstract class EventInvocationForwarder<SenderType, EventArgumentType> : object Type Parameters Name Description SenderType EventArgumentType Constructors | Improve this Doc View Source EventInvocationForwarder() Declaration public EventInvocationForwarder() | Improve this Doc View Source EventInvocationForwarder(SenderType) Declaration public EventInvocationForwarder(SenderType alternativeEventSender) Parameters Type Name Description SenderType alternativeEventSender Properties | Improve this Doc View Source AlternativeEventSender Declaration public virtual SenderType AlternativeEventSender { get; } Property Value Type Description SenderType | Improve this Doc View Source ForwardEventInvocation Declaration protected abstract Action<SenderType, EventArgumentType>? ForwardEventInvocation { get; } Property Value Type Description System.Nullable < Action <SenderType, EventArgumentType>> | Improve this Doc View Source HasAlternativeEventSender Declaration public virtual bool HasAlternativeEventSender { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanForwardEventInvocation(EventArgumentType) Declaration protected abstract bool CanForwardEventInvocation(EventArgumentType eventArgument) Parameters Type Name Description EventArgumentType eventArgument Returns Type Description System.Boolean | Improve this Doc View Source CreateEventArgument(EventArgumentType) Declaration protected abstract EventArgumentType CreateEventArgument(EventArgumentType eventArgument) Parameters Type Name Description EventArgumentType eventArgument Returns Type Description EventArgumentType | Improve this Doc View Source GetAlternativeEventSender(SenderType) Declaration protected virtual SenderType GetAlternativeEventSender(SenderType originalSender) Parameters Type Name Description SenderType originalSender Returns Type Description SenderType | Improve this Doc View Source OnEventInvocationForward(SenderType, EventArgumentType) Declaration protected void OnEventInvocationForward(SenderType sender, EventArgumentType eventArgument) Parameters Type Name Description SenderType sender EventArgumentType eventArgument Events | Improve this Doc View Source EventInvocationForward Declaration protected event Action<SenderType, EventArgumentType>? EventInvocationForward Event Type Type Description System.Nullable < Action <SenderType, EventArgumentType>> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.EventInvocationGate-2.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.EventInvocationGate-2.html",
    "title": "Class EventInvocationGate<SenderType, ArgumentType> | Documentations",
    "keywords": "Class EventInvocationGate<SenderType, ArgumentType> Inheritance System.Object EventInvocationGate<SenderType, ArgumentType> Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public class EventInvocationGate<SenderType, ArgumentType> : object, IPassableEventInvocationGate Type Parameters Name Description SenderType ArgumentType Constructors | Improve this Doc View Source EventInvocationGate(Action<SenderType, ArgumentType>) Declaration public EventInvocationGate(Action<SenderType, ArgumentType> eventInvoker) Parameters Type Name Description Action <SenderType, ArgumentType> eventInvoker Methods | Improve this Doc View Source Guard() Declaration public EventInvocationGateGuardian Guard() Returns Type Description EventInvocationGateGuardian | Improve this Doc View Source PassThrough(SenderType, ArgumentType) Declaration public void PassThrough(SenderType sender, ArgumentType argument) Parameters Type Name Description SenderType sender ArgumentType argument Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.EventInvocationGateGuardian.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.EventInvocationGateGuardian.html",
    "title": "Struct EventInvocationGateGuardian | Documentations",
    "keywords": "Struct EventInvocationGateGuardian Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public struct EventInvocationGateGuardian Methods | Improve this Doc View Source LetPassThrough() Declaration public void LetPassThrough()"
  },
  "Teronis.DotNet/Teronis.ObjectModel.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.html",
    "title": "Namespace Teronis.ObjectModel | Documentations",
    "keywords": "Namespace Teronis.ObjectModel Classes DataErrorInfosBase EventInvocationForwarder<SenderType, EventArgumentType> EventInvocationGate<SenderType, ArgumentType> PropertyChangedForwarder PropertyChangeForwarder<EventArgumentType> PropertyChangingForwarder PropertyNotificationComponent Work Structs EventInvocationGateGuardian Interfaces IEventInvocablePropertyNotificationComponent IMemberCallablePropertyNotificationComponent IWorking"
  },
  "Teronis.DotNet/Teronis.ObjectModel.IEventInvocablePropertyNotificationComponent.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.IEventInvocablePropertyNotificationComponent.html",
    "title": "Interface IEventInvocablePropertyNotificationComponent | Documentations",
    "keywords": "Interface IEventInvocablePropertyNotificationComponent Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public interface IEventInvocablePropertyNotificationComponent Methods | Improve this Doc View Source OnPropertyChanged(Nullable<Object>, PropertyChangedEventArgs) Declaration void OnPropertyChanged(object? sender, PropertyChangedEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender PropertyChangedEventArgs args | Improve this Doc View Source OnPropertyChanging(Nullable<Object>, PropertyChangingEventArgs) Declaration void OnPropertyChanging(object? sender, PropertyChangingEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender PropertyChangingEventArgs args Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.IMemberCallablePropertyNotificationComponent.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.IMemberCallablePropertyNotificationComponent.html",
    "title": "Interface IMemberCallablePropertyNotificationComponent | Documentations",
    "keywords": "Interface IMemberCallablePropertyNotificationComponent Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public interface IMemberCallablePropertyNotificationComponent Methods | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName | Improve this Doc View Source OnPropertyChanging(Nullable<String>) Declaration void OnPropertyChanging(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.IWorking.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.IWorking.html",
    "title": "Interface IWorking | Documentations",
    "keywords": "Interface IWorking Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public interface IWorking Properties | Improve this Doc View Source IsWorking Declaration bool IsWorking { get; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.HavingParentsEventArgs.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.HavingParentsEventArgs.html",
    "title": "Class HavingParentsEventArgs | Documentations",
    "keywords": "Class HavingParentsEventArgs Inheritance System.Object HavingParentsEventArgs Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class HavingParentsEventArgs : EventArgs Constructors | Improve this Doc View Source HavingParentsEventArgs(Object, Nullable<Type>) Declaration public HavingParentsEventArgs(object originalSource, Type? wantedType) Parameters Type Name Description System.Object originalSource System.Nullable < Type > wantedType Properties | Improve this Doc View Source Container Declaration public ParentsContainer Container { get; } Property Value Type Description ParentsContainer | Improve this Doc View Source OriginalSource Declaration public object OriginalSource { get; } Property Value Type Description System.Object Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) HavingParentsEventArgsExtensions.AddParent(HavingParentsEventArgs, Object) HavingParentsEventArgsExtensions.AddParents(HavingParentsEventArgs, IEnumerable<Object>) HavingParentsEventArgsExtensions.AddParents(HavingParentsEventArgs, Object[]) HavingParentsEventArgsExtensions.AddParentAndItsParents(HavingParentsEventArgs, Object) HavingParentsEventArgsExtensions.AddParentsAndTheirParents(HavingParentsEventArgs, IEnumerable<Object>)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.HavingParentsEventArgsExtensions.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.HavingParentsEventArgsExtensions.html",
    "title": "Class HavingParentsEventArgsExtensions | Documentations",
    "keywords": "Class HavingParentsEventArgsExtensions Inheritance System.Object HavingParentsEventArgsExtensions Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public static class HavingParentsEventArgsExtensions : object Methods | Improve this Doc View Source AddParent(HavingParentsEventArgs, Object) Does only attach the parent to the parent container and does not look for IHaveParents implementation. Declaration public static void AddParent(this HavingParentsEventArgs args, object parent) Parameters Type Name Description HavingParentsEventArgs args System.Object parent | Improve this Doc View Source AddParentAndItsParents(HavingParentsEventArgs, Object) Does attach the parent to the parent container and does look for IHaveParents implementation. Declaration public static void AddParentAndItsParents(this HavingParentsEventArgs args, object parent) Parameters Type Name Description HavingParentsEventArgs args System.Object parent | Improve this Doc View Source AddParents(HavingParentsEventArgs, IEnumerable<Object>) Does only attach the parents to the parent container and does not look for IHaveParents implementation. Declaration public static void AddParents(this HavingParentsEventArgs args, IEnumerable<object> parents) Parameters Type Name Description HavingParentsEventArgs args IEnumerable < System.Object > parents | Improve this Doc View Source AddParents(HavingParentsEventArgs, Object[]) Does only attach the parents to the parent container and does not look for IHaveParents implementation. Declaration public static void AddParents(this HavingParentsEventArgs args, params object[] parents) Parameters Type Name Description HavingParentsEventArgs args System.Object [] parents | Improve this Doc View Source AddParentsAndTheirParents(HavingParentsEventArgs, IEnumerable<Object>) Does attach the parents to the parent container and does look for IHaveParents implementation. Declaration public static void AddParentsAndTheirParents(this HavingParentsEventArgs args, IEnumerable<object> parents) Parameters Type Name Description HavingParentsEventArgs args IEnumerable < System.Object > parents"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.html",
    "title": "Namespace Teronis.ObjectModel.Parenthood | Documentations",
    "keywords": "Namespace Teronis.ObjectModel.Parenthood Classes HavingParentsEventArgs HavingParentsEventArgsExtensions ParentsCollector ParentsContainer ParentsContainer.ParentCollection RegisteredRequestParentHandlerDictionary SingleParentByTypeDynamicObject Class that implements to get single parent by type name. Interfaces IHaveParents IHaveRegisteredParents Delegates ParentsRequestedEventHandler"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.IHaveParents.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.IHaveParents.html",
    "title": "Interface IHaveParents | Documentations",
    "keywords": "Interface IHaveParents Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public interface IHaveParents Methods | Improve this Doc View Source CreateParentsCollector() Declaration ParentsCollector CreateParentsCollector() Returns Type Description ParentsCollector Events | Improve this Doc View Source ParentsRequested Declaration event ParentsRequestedEventHandler ParentsRequested Event Type Type Description ParentsRequestedEventHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.IHaveRegisteredParents.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.IHaveRegisteredParents.html",
    "title": "Interface IHaveRegisteredParents | Documentations",
    "keywords": "Interface IHaveRegisteredParents Inherited Members IHaveParents.ParentsRequested IHaveParents.CreateParentsCollector() Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public interface IHaveRegisteredParents : IHaveParents Methods | Improve this Doc View Source RegisterParent(Object, ParentsRequestedEventHandler) Declaration void RegisterParent(object caller, ParentsRequestedEventHandler handler) Parameters Type Name Description System.Object caller ParentsRequestedEventHandler handler | Improve this Doc View Source RegisterParent(ParentsRequestedEventHandler) Declaration void RegisterParent(ParentsRequestedEventHandler handler) Parameters Type Name Description ParentsRequestedEventHandler handler | Improve this Doc View Source UnregisterParent(Object) Declaration void UnregisterParent(object caller) Parameters Type Name Description System.Object caller | Improve this Doc View Source UnregisterParent(ParentsRequestedEventHandler) Declaration void UnregisterParent(ParentsRequestedEventHandler handler) Parameters Type Name Description ParentsRequestedEventHandler handler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsCollector.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsCollector.html",
    "title": "Class ParentsCollector | Documentations",
    "keywords": "Class ParentsCollector Inheritance System.Object ParentsCollector Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class ParentsCollector : object Constructors | Improve this Doc View Source ParentsCollector(Object, ParentsRequestedEventHandler) Declaration public ParentsCollector(object sender, ParentsRequestedEventHandler eventHandler) Parameters Type Name Description System.Object sender ParentsRequestedEventHandler eventHandler The event handler who requests parents for sender . Properties | Improve this Doc View Source Sender Declaration public object Sender { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source CollectParents(Nullable<Type>) Declaration public ParentsContainer.ParentCollection CollectParents(Type? requestedParentType) Parameters Type Name Description System.Nullable < Type > requestedParentType Returns Type Description ParentsContainer.ParentCollection | Improve this Doc View Source FirstParent<RequestedParentType>() Declaration public RequestedParentType FirstParent<RequestedParentType>() Returns Type Description RequestedParentType Type Parameters Name Description RequestedParentType | Improve this Doc View Source SingleParent<RequestedParentType>() Declaration public RequestedParentType SingleParent<RequestedParentType>() Returns Type Description RequestedParentType Type Parameters Name Description RequestedParentType Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsContainer.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsContainer.html",
    "title": "Class ParentsContainer | Documentations",
    "keywords": "Class ParentsContainer Inheritance System.Object ParentsContainer Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class ParentsContainer : object Constructors | Improve this Doc View Source ParentsContainer(Nullable<Type>) If wantedType is null, then all parents may attach themselves. Declaration public ParentsContainer(Type? wantedType) Parameters Type Name Description System.Nullable < Type > wantedType Properties | Improve this Doc View Source Parents Declaration public ParentsContainer.ParentCollection Parents { get; } Property Value Type Description ParentsContainer.ParentCollection | Improve this Doc View Source WantedType Declaration public Type? WantedType { get; } Property Value Type Description System.Nullable < Type > Methods | Improve this Doc View Source AddParent(Object) The parent will be added to the Parents , if the type of parent the same type of WantedType or if none WantedType is provided. Declaration public void AddParent(object parent) Parameters Type Name Description System.Object parent | Improve this Doc View Source AddParents(IEnumerable<Object>) Declaration public void AddParents(IEnumerable<object> parents) Parameters Type Name Description IEnumerable < System.Object > parents Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsContainer.ParentCollection.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsContainer.ParentCollection.html",
    "title": "Class ParentsContainer.ParentCollection | Documentations",
    "keywords": "Class ParentsContainer.ParentCollection Inheritance System.Object ParentsContainer.ParentCollection Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class ParentCollection : Collection<object> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsRequestedEventHandler.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.ParentsRequestedEventHandler.html",
    "title": "Delegate ParentsRequestedEventHandler | Documentations",
    "keywords": "Delegate ParentsRequestedEventHandler Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public delegate void ParentsRequestedEventHandler(object sender, HavingParentsEventArgs havingParents); Parameters Type Name Description System.Object sender HavingParentsEventArgs havingParents Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.RegisteredRequestParentHandlerDictionary.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.RegisteredRequestParentHandlerDictionary.html",
    "title": "Class RegisteredRequestParentHandlerDictionary | Documentations",
    "keywords": "Class RegisteredRequestParentHandlerDictionary Inheritance System.Object RegisteredRequestParentHandlerDictionary Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class RegisteredRequestParentHandlerDictionary : IReadOnlyDictionary<object, ParentsRequestedEventHandler> Constructors | Improve this Doc View Source RegisteredRequestParentHandlerDictionary(IHaveRegisteredParents) Declaration public RegisteredRequestParentHandlerDictionary(IHaveRegisteredParents havingRegisteredParents) Parameters Type Name Description IHaveRegisteredParents havingRegisteredParents Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Object] Declaration public ParentsRequestedEventHandler this[object key] { get; } Parameters Type Name Description System.Object key Property Value Type Description ParentsRequestedEventHandler | Improve this Doc View Source Keys Declaration public IEnumerable<object> Keys { get; } Property Value Type Description IEnumerable < System.Object > | Improve this Doc View Source Values Declaration public IEnumerable<ParentsRequestedEventHandler> Values { get; } Property Value Type Description IEnumerable < ParentsRequestedEventHandler > Methods | Improve this Doc View Source ContainsKey(Object) Declaration public bool ContainsKey(object key) Parameters Type Name Description System.Object key Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<object, ParentsRequestedEventHandler>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair < System.Object , ParentsRequestedEventHandler >> | Improve this Doc View Source RegisterParent(Object, ParentsRequestedEventHandler) Declaration public void RegisterParent(object caller, ParentsRequestedEventHandler handler) Parameters Type Name Description System.Object caller ParentsRequestedEventHandler handler | Improve this Doc View Source TryGetValue(Object, out ParentsRequestedEventHandler) Declaration public bool TryGetValue(object key, out ParentsRequestedEventHandler value) Parameters Type Name Description System.Object key ParentsRequestedEventHandler value Returns Type Description System.Boolean | Improve this Doc View Source UnregisterParent(Object) Declaration public void UnregisterParent(object caller) Parameters Type Name Description System.Object caller Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Parenthood.SingleParentByTypeDynamicObject.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Parenthood.SingleParentByTypeDynamicObject.html",
    "title": "Class SingleParentByTypeDynamicObject | Documentations",
    "keywords": "Class SingleParentByTypeDynamicObject Class that implements to get single parent by type name. Inheritance System.Object SingleParentByTypeDynamicObject Namespace : Teronis.ObjectModel.Parenthood Assembly : Teronis.NetStandard.Core.dll Syntax public class SingleParentByTypeDynamicObject : DynamicObject Constructors | Improve this Doc View Source SingleParentByTypeDynamicObject(IHaveParents) Declaration public SingleParentByTypeDynamicObject(IHaveParents havingParents) Parameters Type Name Description IHaveParents havingParents Methods | Improve this Doc View Source TryGetMember(GetMemberBinder, out Object) Declaration public override bool TryGetMember(GetMemberBinder binder, out object result) Parameters Type Name Description GetMemberBinder binder System.Object result Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.PropertyChangedForwarder.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.PropertyChangedForwarder.html",
    "title": "Class PropertyChangedForwarder | Documentations",
    "keywords": "Class PropertyChangedForwarder Inheritance System.Object EventInvocationForwarder < System.Nullable < System.Object >, PropertyChangedEventArgs > PropertyChangeForwarder < PropertyChangedEventArgs > PropertyChangedForwarder Implements INotifyPropertyChanged Inherited Members PropertyChangeForwarder<PropertyChangedEventArgs>.CalleePropertyNameByCallerPropertyNameDictionary PropertyChangeForwarder<PropertyChangedEventArgs>.AddPropertyChangeForwarding(String, String) PropertyChangeForwarder<PropertyChangedEventArgs>.AddPropertyChangeForwarding(String) PropertyChangeForwarder<PropertyChangedEventArgs>.RemovePropertyChangeForwarding(String) EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.EventInvocationForward EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.ForwardEventInvocation EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.HasAlternativeEventSender EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.AlternativeEventSender EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.CanForwardEventInvocation(PropertyChangedEventArgs) EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.CreateEventArgument(PropertyChangedEventArgs) EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.GetAlternativeEventSender(Nullable<Object>) EventInvocationForwarder<Nullable<Object>, PropertyChangedEventArgs>.OnEventInvocationForward(Nullable<Object>, PropertyChangedEventArgs) Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyChangedForwarder : PropertyChangeForwarder<PropertyChangedEventArgs>, INotifyPropertyChanged Constructors | Improve this Doc View Source PropertyChangedForwarder() Declaration public PropertyChangedForwarder() | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<PropertyChangedEventArgs>>) Declaration public PropertyChangedForwarder(Action<PropertyChangedEventArgs>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < PropertyChangedEventArgs >> notifyPropertyChange | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<PropertyChangedEventArgs>>, Nullable<Object>) Declaration public PropertyChangedForwarder(Action<PropertyChangedEventArgs>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < PropertyChangedEventArgs >> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<Nullable<Object>, PropertyChangedEventArgs>>) Declaration public PropertyChangedForwarder(Action<object?, PropertyChangedEventArgs>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangedEventArgs >> notifyPropertyChange | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<Nullable<Object>, PropertyChangedEventArgs>>, Nullable<Object>) Declaration public PropertyChangedForwarder(Action<object?, PropertyChangedEventArgs>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangedEventArgs >> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<Nullable<String>>>) Declaration public PropertyChangedForwarder(Action<string?>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.String >>> notifyPropertyChange | Improve this Doc View Source PropertyChangedForwarder(Nullable<Action<Nullable<String>>>, Nullable<Object>) Declaration public PropertyChangedForwarder(Action<string?>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.String >>> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangedForwarder(Nullable<Object>) Declaration public PropertyChangedForwarder(object? alternativeEventSender) Parameters Type Name Description System.Nullable < System.Object > alternativeEventSender Properties | Improve this Doc View Source ForwardEventInvocation Declaration protected override Action<object?, PropertyChangedEventArgs>? ForwardEventInvocation { get; } Property Value Type Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangedEventArgs >> Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangedEventArgs>.ForwardEventInvocation Methods | Improve this Doc View Source CanForwardEventInvocation(PropertyChangedEventArgs) Declaration protected override bool CanForwardEventInvocation(PropertyChangedEventArgs eventArgs) Parameters Type Name Description PropertyChangedEventArgs eventArgs Returns Type Description System.Boolean Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangedEventArgs>.CanForwardEventInvocation(PropertyChangedEventArgs) | Improve this Doc View Source CreateEventArgument(PropertyChangedEventArgs) Declaration protected override PropertyChangedEventArgs CreateEventArgument(PropertyChangedEventArgs eventArgs) Parameters Type Name Description PropertyChangedEventArgs eventArgs Returns Type Description PropertyChangedEventArgs Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangedEventArgs>.CreateEventArgument(PropertyChangedEventArgs) Events | Improve this Doc View Source PropertyChangedForward Notifies about forwarded property changes from . Declaration public event PropertyChangedEventHandler? PropertyChangedForward Event Type Type Description System.Nullable < PropertyChangedEventHandler > Implements INotifyPropertyChanged Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.PropertyChangeForwarder-1.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.PropertyChangeForwarder-1.html",
    "title": "Class PropertyChangeForwarder<EventArgumentType> | Documentations",
    "keywords": "Class PropertyChangeForwarder<EventArgumentType> Inheritance System.Object EventInvocationForwarder < System.Nullable < System.Object >, EventArgumentType> PropertyChangeForwarder<EventArgumentType> PropertyChangedForwarder PropertyChangingForwarder Inherited Members EventInvocationForwarder<Nullable<Object>, EventArgumentType>.EventInvocationForward EventInvocationForwarder<Nullable<Object>, EventArgumentType>.ForwardEventInvocation EventInvocationForwarder<Nullable<Object>, EventArgumentType>.HasAlternativeEventSender EventInvocationForwarder<Nullable<Object>, EventArgumentType>.AlternativeEventSender EventInvocationForwarder<Nullable<Object>, EventArgumentType>.CanForwardEventInvocation(EventArgumentType) EventInvocationForwarder<Nullable<Object>, EventArgumentType>.CreateEventArgument(EventArgumentType) EventInvocationForwarder<Nullable<Object>, EventArgumentType>.GetAlternativeEventSender(Nullable<Object>) EventInvocationForwarder<Nullable<Object>, EventArgumentType>.OnEventInvocationForward(Nullable<Object>, EventArgumentType) Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public abstract class PropertyChangeForwarder<EventArgumentType> : EventInvocationForwarder<object?, EventArgumentType> Type Parameters Name Description EventArgumentType Constructors | Improve this Doc View Source PropertyChangeForwarder() Declaration public PropertyChangeForwarder() | Improve this Doc View Source PropertyChangeForwarder(Nullable<Object>) Declaration public PropertyChangeForwarder(object? alternativeEventSender) Parameters Type Name Description System.Nullable < System.Object > alternativeEventSender Fields | Improve this Doc View Source CalleePropertyNameByCallerPropertyNameDictionary Declaration protected Dictionary<string, string> CalleePropertyNameByCallerPropertyNameDictionary Field Value Type Description Dictionary < System.String , System.String > Methods | Improve this Doc View Source AddPropertyChangeForwarding(String) Declaration public void AddPropertyChangeForwarding(string callerAndCalleePropertyName) Parameters Type Name Description System.String callerAndCalleePropertyName | Improve this Doc View Source AddPropertyChangeForwarding(String, String) Declaration public void AddPropertyChangeForwarding(string callerPropertyName, string calleePropertyName) Parameters Type Name Description System.String callerPropertyName System.String calleePropertyName | Improve this Doc View Source RemovePropertyChangeForwarding(String) Declaration public void RemovePropertyChangeForwarding(string callerPropertyName) Parameters Type Name Description System.String callerPropertyName Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.PropertyChangingForwarder.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.PropertyChangingForwarder.html",
    "title": "Class PropertyChangingForwarder | Documentations",
    "keywords": "Class PropertyChangingForwarder Inheritance System.Object EventInvocationForwarder < System.Nullable < System.Object >, PropertyChangingEventArgs > PropertyChangeForwarder < PropertyChangingEventArgs > PropertyChangingForwarder Implements INotifyPropertyChanging Inherited Members PropertyChangeForwarder<PropertyChangingEventArgs>.CalleePropertyNameByCallerPropertyNameDictionary PropertyChangeForwarder<PropertyChangingEventArgs>.AddPropertyChangeForwarding(String, String) PropertyChangeForwarder<PropertyChangingEventArgs>.AddPropertyChangeForwarding(String) PropertyChangeForwarder<PropertyChangingEventArgs>.RemovePropertyChangeForwarding(String) EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.EventInvocationForward EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.ForwardEventInvocation EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.HasAlternativeEventSender EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.AlternativeEventSender EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.CanForwardEventInvocation(PropertyChangingEventArgs) EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.CreateEventArgument(PropertyChangingEventArgs) EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.GetAlternativeEventSender(Nullable<Object>) EventInvocationForwarder<Nullable<Object>, PropertyChangingEventArgs>.OnEventInvocationForward(Nullable<Object>, PropertyChangingEventArgs) Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyChangingForwarder : PropertyChangeForwarder<PropertyChangingEventArgs>, INotifyPropertyChanging Constructors | Improve this Doc View Source PropertyChangingForwarder() Declaration public PropertyChangingForwarder() | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<PropertyChangingEventArgs>>) Declaration public PropertyChangingForwarder(Action<PropertyChangingEventArgs>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < PropertyChangingEventArgs >> notifyPropertyChange | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<PropertyChangingEventArgs>>, Nullable<Object>) Declaration public PropertyChangingForwarder(Action<PropertyChangingEventArgs>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < PropertyChangingEventArgs >> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<Nullable<Object>, PropertyChangingEventArgs>>) Declaration public PropertyChangingForwarder(Action<object?, PropertyChangingEventArgs>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangingEventArgs >> notifyPropertyChange | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<Nullable<Object>, PropertyChangingEventArgs>>, Nullable<Object>) Declaration public PropertyChangingForwarder(Action<object?, PropertyChangingEventArgs>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangingEventArgs >> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<Nullable<String>>>) Declaration public PropertyChangingForwarder(Action<string?>? notifyPropertyChange) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.String >>> notifyPropertyChange | Improve this Doc View Source PropertyChangingForwarder(Nullable<Action<Nullable<String>>>, Nullable<Object>) Declaration public PropertyChangingForwarder(Action<string?>? notifyPropertyChange, object? alternativeEventSender) Parameters Type Name Description System.Nullable < Action < System.Nullable < System.String >>> notifyPropertyChange System.Nullable < System.Object > alternativeEventSender | Improve this Doc View Source PropertyChangingForwarder(Nullable<Object>) Declaration public PropertyChangingForwarder(object? alternativeEventSender) Parameters Type Name Description System.Nullable < System.Object > alternativeEventSender Properties | Improve this Doc View Source ForwardEventInvocation Declaration protected override Action<object?, PropertyChangingEventArgs>? ForwardEventInvocation { get; } Property Value Type Description System.Nullable < Action < System.Nullable < System.Object >, PropertyChangingEventArgs >> Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangingEventArgs>.ForwardEventInvocation Methods | Improve this Doc View Source CanForwardEventInvocation(PropertyChangingEventArgs) Declaration protected override bool CanForwardEventInvocation(PropertyChangingEventArgs eventArgs) Parameters Type Name Description PropertyChangingEventArgs eventArgs Returns Type Description System.Boolean Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangingEventArgs>.CanForwardEventInvocation(PropertyChangingEventArgs) | Improve this Doc View Source CreateEventArgument(PropertyChangingEventArgs) Declaration protected override PropertyChangingEventArgs CreateEventArgument(PropertyChangingEventArgs eventArgs) Parameters Type Name Description PropertyChangingEventArgs eventArgs Returns Type Description PropertyChangingEventArgs Overrides Teronis.ObjectModel.EventInvocationForwarder<System.Nullable<System.Object>, PropertyChangingEventArgs>.CreateEventArgument(PropertyChangingEventArgs) Events | Improve this Doc View Source PropertyChangingForward Notifies about forwarded property changes from . Declaration public event PropertyChangingEventHandler? PropertyChangingForward Event Type Type Description System.Nullable < PropertyChangingEventHandler > Implements INotifyPropertyChanging Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.PropertyNotificationComponent.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.PropertyNotificationComponent.html",
    "title": "Class PropertyNotificationComponent | Documentations",
    "keywords": "Class PropertyNotificationComponent Inheritance System.Object PropertyNotificationComponent Implements INotifyPropertyChanged IMemberCallablePropertyNotificationComponent IEventInvocablePropertyNotificationComponent Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyNotificationComponent : INotifyPropertyChanging, INotifyPropertyChanged, IMemberCallablePropertyNotificationComponent, IEventInvocablePropertyNotificationComponent Constructors | Improve this Doc View Source PropertyNotificationComponent() Declaration public PropertyNotificationComponent() | Improve this Doc View Source PropertyNotificationComponent(Nullable<Object>) Declaration public PropertyNotificationComponent(object? alternativeSender) Parameters Type Name Description System.Nullable < System.Object > alternativeSender Properties | Improve this Doc View Source AlternativeEventSender Declaration public object? AlternativeEventSender { get; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source HasAlternativeEventSender Declaration public bool HasAlternativeEventSender { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AsEventInvocable() Declaration public IEventInvocablePropertyNotificationComponent AsEventInvocable() Returns Type Description IEventInvocablePropertyNotificationComponent | Improve this Doc View Source AsMemberCallable() Declaration public IMemberCallablePropertyNotificationComponent AsMemberCallable() Returns Type Description IMemberCallablePropertyNotificationComponent | Improve this Doc View Source ChangeProperty(Action, Expression<Func<Nullable<Object>>>) Declaration public void ChangeProperty(Action prePropertyChangedDelegate, Expression<Func<object?>> anonymousProperties) Parameters Type Name Description Action prePropertyChangedDelegate Expression < Func < System.Nullable < System.Object >>> anonymousProperties | Improve this Doc View Source ChangeProperty(Action, String[]) Declaration public void ChangeProperty(Action prePropertyChangedDelegate, params string[] properties) Parameters Type Name Description Action prePropertyChangedDelegate System.String [] properties | Improve this Doc View Source GetAlternativeEventSender(Nullable<Object>) Declaration protected virtual object? GetAlternativeEventSender(object? originalSender) Parameters Type Name Description System.Nullable < System.Object > originalSender Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source OnPropertyChanged(Nullable<Object>, PropertyChangedEventArgs) Initiates a property changed event invocation. Declaration public virtual void OnPropertyChanged(object? sender, PropertyChangedEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender The sender to be sent. PropertyChangedEventArgs args The argument to be sent. | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration public void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName | Improve this Doc View Source OnPropertyChanging(Nullable<Object>, PropertyChangingEventArgs) Initiates a property changing event invocation. Declaration public virtual void OnPropertyChanging(object? sender, PropertyChangingEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender The sender to be sent. PropertyChangingEventArgs args The argument to be sent. | Improve this Doc View Source OnPropertyChanging(Nullable<String>) Declaration public void OnPropertyChanging(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > | Improve this Doc View Source PropertyChanging Declaration public event PropertyChangingEventHandler? PropertyChanging Event Type Type Description System.Nullable < PropertyChangingEventHandler > Implements INotifyPropertyChanged IMemberCallablePropertyNotificationComponent IEventInvocablePropertyNotificationComponent Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.html",
    "title": "Namespace Teronis.ObjectModel.TreeColumn.Core | Documentations",
    "keywords": "Namespace Teronis.ObjectModel.TreeColumn.Core Classes TreeColumnKey TreeColumnKeyEqualityComparer TreeColumnSeekerBase<TreeColumnKeyType, TreeColumnValueType> TreeColumnValue<TreeColumnDefinitionKeyType> Interfaces ITreeColumnDefinitions<TreeColumnDefinitionKeyType, TreeColumnDefinitionType> ITreeColumnKey ITreeColumnValue<TreeColumnDefinitionKeyType>"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnDefinitions-2.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnDefinitions-2.html",
    "title": "Interface ITreeColumnDefinitions<TreeColumnDefinitionKeyType, TreeColumnDefinitionType> | Documentations",
    "keywords": "Interface ITreeColumnDefinitions<TreeColumnDefinitionKeyType, TreeColumnDefinitionType> Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public interface ITreeColumnDefinitions<TreeColumnDefinitionKeyType, TreeColumnDefinitionType> where TreeColumnDefinitionKeyType : ITreeColumnKey where TreeColumnDefinitionType : ITreeColumnValue<TreeColumnDefinitionKeyType> Type Parameters Name Description TreeColumnDefinitionKeyType TreeColumnDefinitionType Properties | Improve this Doc View Source TreeColumnDefinitionByKey Declaration IDictionary<TreeColumnDefinitionKeyType, TreeColumnDefinitionType> TreeColumnDefinitionByKey { get; } Property Value Type Description IDictionary <TreeColumnDefinitionKeyType, TreeColumnDefinitionType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnKey.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnKey.html",
    "title": "Interface ITreeColumnKey | Documentations",
    "keywords": "Interface ITreeColumnKey Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public interface ITreeColumnKey Properties | Improve this Doc View Source DeclaringType Declaration Type DeclaringType { get; } Property Value Type Description Type | Improve this Doc View Source VariableName Declaration string VariableName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnValue-1.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.ITreeColumnValue-1.html",
    "title": "Interface ITreeColumnValue<TreeColumnDefinitionKeyType> | Documentations",
    "keywords": "Interface ITreeColumnValue<TreeColumnDefinitionKeyType> Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public interface ITreeColumnValue<out TreeColumnDefinitionKeyType> where TreeColumnDefinitionKeyType : ITreeColumnKey Type Parameters Name Description TreeColumnDefinitionKeyType Properties | Improve this Doc View Source Index Declaration int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Key Declaration TreeColumnDefinitionKeyType Key { get; } Property Value Type Description TreeColumnDefinitionKeyType | Improve this Doc View Source Path Declaration string Path { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnKey.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnKey.html",
    "title": "Class TreeColumnKey | Documentations",
    "keywords": "Class TreeColumnKey Inheritance System.Object TreeColumnKey HeaderTreeColumnKey Implements ITreeColumnKey Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class TreeColumnKey : object, ITreeColumnKey Constructors | Improve this Doc View Source TreeColumnKey(Type, String) Declaration public TreeColumnKey(Type declarationType, string variableName) Parameters Type Name Description Type declarationType System.String variableName Properties | Improve this Doc View Source DeclaringType Declaration public Type DeclaringType { get; } Property Value Type Description Type | Improve this Doc View Source PropertyInfo Declaration public PropertyInfo PropertyInfo { get; } Property Value Type Description PropertyInfo | Improve this Doc View Source VariableName Declaration public string VariableName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source Equals(TreeColumnKey) Declaration public bool Equals(TreeColumnKey other) Parameters Type Name Description TreeColumnKey other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Implements ITreeColumnKey Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnKeyEqualityComparer.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnKeyEqualityComparer.html",
    "title": "Class TreeColumnKeyEqualityComparer | Documentations",
    "keywords": "Class TreeColumnKeyEqualityComparer Inheritance System.Object TreeColumnKeyEqualityComparer Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class TreeColumnKeyEqualityComparer : EqualityComparer<TreeColumnKey> Fields | Improve this Doc View Source Default Declaration public static readonly TreeColumnKeyEqualityComparer Default Field Value Type Description TreeColumnKeyEqualityComparer Methods | Improve this Doc View Source Equals(TreeColumnKey, TreeColumnKey) Declaration public override bool Equals(TreeColumnKey x, TreeColumnKey y) Parameters Type Name Description TreeColumnKey x TreeColumnKey y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(TreeColumnKey) Declaration public override int GetHashCode(TreeColumnKey obj) Parameters Type Name Description TreeColumnKey obj Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnSeekerBase-2.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnSeekerBase-2.html",
    "title": "Class TreeColumnSeekerBase<TreeColumnKeyType, TreeColumnValueType> | Documentations",
    "keywords": "Class TreeColumnSeekerBase<TreeColumnKeyType, TreeColumnValueType> Inheritance System.Object TreeColumnSeekerBase<TreeColumnKeyType, TreeColumnValueType> HeaderTreeColumnSeeker Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public abstract class TreeColumnSeekerBase<TreeColumnKeyType, TreeColumnValueType> : object where TreeColumnKeyType : ITreeColumnKey where TreeColumnValueType : ITreeColumnValue<TreeColumnKeyType> Type Parameters Name Description TreeColumnKeyType TreeColumnValueType Constructors | Improve this Doc View Source TreeColumnSeekerBase(Type) Declaration public TreeColumnSeekerBase(Type treeColumnsHolderType) Parameters Type Name Description Type treeColumnsHolderType Properties | Improve this Doc View Source TreeColumnDefinitionByKey Declaration public IDictionary<TreeColumnKey, ITreeColumnValue<TreeColumnKeyType>> TreeColumnDefinitionByKey { get; } Property Value Type Description IDictionary < TreeColumnKey , ITreeColumnValue <TreeColumnKeyType>> | Improve this Doc View Source TreeColumnsHolderType Declaration public Type TreeColumnsHolderType { get; } Property Value Type Description Type Methods | Improve this Doc View Source instantiateTreeColumnValue(TreeColumnKeyType, String, Int32) Declaration protected abstract TreeColumnValueType instantiateTreeColumnValue(TreeColumnKeyType key, string path, int index) Parameters Type Name Description TreeColumnKeyType key System.String path System.Int32 index Returns Type Description TreeColumnValueType | Improve this Doc View Source SearchTreeColumnDefinitions(IList<TreeColumnKeyType>) Declaration public IDictionary<TreeColumnKeyType, TreeColumnValueType> SearchTreeColumnDefinitions(IList<TreeColumnKeyType> treeColumnOrdering) Parameters Type Name Description IList <TreeColumnKeyType> treeColumnOrdering Returns Type Description IDictionary <TreeColumnKeyType, TreeColumnValueType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnValue-1.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.Core.TreeColumnValue-1.html",
    "title": "Class TreeColumnValue<TreeColumnDefinitionKeyType> | Documentations",
    "keywords": "Class TreeColumnValue<TreeColumnDefinitionKeyType> Inheritance System.Object TreeColumnValue<TreeColumnDefinitionKeyType> HeaderTreeColumnValue Implements ITreeColumnValue <TreeColumnDefinitionKeyType> Namespace : Teronis.ObjectModel.TreeColumn.Core Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class TreeColumnValue<TreeColumnDefinitionKeyType> : object, ITreeColumnValue<TreeColumnDefinitionKeyType> where TreeColumnDefinitionKeyType : ITreeColumnKey Type Parameters Name Description TreeColumnDefinitionKeyType Constructors | Improve this Doc View Source TreeColumnValue(TreeColumnDefinitionKeyType, String, Int32) Declaration public TreeColumnValue(TreeColumnDefinitionKeyType key, string path, int index) Parameters Type Name Description TreeColumnDefinitionKeyType key System.String path System.Int32 index Properties | Improve this Doc View Source Index Declaration public virtual int Index { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source Key Declaration public TreeColumnDefinitionKeyType Key { get; protected set; } Property Value Type Description TreeColumnDefinitionKeyType | Improve this Doc View Source Path Declaration public virtual string Path { get; protected set; } Property Value Type Description System.String Implements ITreeColumnValue<TreeColumnDefinitionKeyType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HasTreeColumnsAttribute.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HasTreeColumnsAttribute.html",
    "title": "Class HasTreeColumnsAttribute | Documentations",
    "keywords": "Class HasTreeColumnsAttribute Inheritance System.Object HasTreeColumnsAttribute Namespace : Teronis.ObjectModel.TreeColumn Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class HasTreeColumnsAttribute : Attribute Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnKey.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnKey.html",
    "title": "Class HeaderTreeColumnKey | Documentations",
    "keywords": "Class HeaderTreeColumnKey Inheritance System.Object TreeColumnKey HeaderTreeColumnKey Implements ITreeColumnKey Inherited Members TreeColumnKey.PropertyInfo TreeColumnKey.DeclaringType TreeColumnKey.VariableName TreeColumnKey.Equals(TreeColumnKey) TreeColumnKey.Equals(Nullable<Object>) TreeColumnKey.GetHashCode() Namespace : Teronis.ObjectModel.TreeColumn Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class HeaderTreeColumnKey : TreeColumnKey, ITreeColumnKey Constructors | Improve this Doc View Source HeaderTreeColumnKey(Type, String) Declaration public HeaderTreeColumnKey(Type declarationType, string variableName) Parameters Type Name Description Type declarationType System.String variableName | Improve this Doc View Source HeaderTreeColumnKey(Type, String, Nullable<String>) Declaration public HeaderTreeColumnKey(Type declarationType, string variableName, string? header) Parameters Type Name Description Type declarationType System.String variableName System.Nullable < System.String > header Properties | Improve this Doc View Source Header Declaration public string? Header { get; } Property Value Type Description System.Nullable < System.String > Implements ITreeColumnKey Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnSeeker.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnSeeker.html",
    "title": "Class HeaderTreeColumnSeeker | Documentations",
    "keywords": "Class HeaderTreeColumnSeeker Inheritance System.Object TreeColumnSeekerBase < HeaderTreeColumnKey , HeaderTreeColumnValue > HeaderTreeColumnSeeker Inherited Members TreeColumnSeekerBase<HeaderTreeColumnKey, HeaderTreeColumnValue>.TreeColumnDefinitionByKey TreeColumnSeekerBase<HeaderTreeColumnKey, HeaderTreeColumnValue>.TreeColumnsHolderType TreeColumnSeekerBase<HeaderTreeColumnKey, HeaderTreeColumnValue>.instantiateTreeColumnValue(HeaderTreeColumnKey, String, Int32) TreeColumnSeekerBase<HeaderTreeColumnKey, HeaderTreeColumnValue>.SearchTreeColumnDefinitions(IList<HeaderTreeColumnKey>) Namespace : Teronis.ObjectModel.TreeColumn Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class HeaderTreeColumnSeeker : TreeColumnSeekerBase<HeaderTreeColumnKey, HeaderTreeColumnValue> Constructors | Improve this Doc View Source HeaderTreeColumnSeeker(Type) Declaration public HeaderTreeColumnSeeker(Type treeColumnsHolderType) Parameters Type Name Description Type treeColumnsHolderType Methods | Improve this Doc View Source instantiateTreeColumnValue(HeaderTreeColumnKey, String, Int32) Declaration protected override HeaderTreeColumnValue instantiateTreeColumnValue(HeaderTreeColumnKey key, string path, int index) Parameters Type Name Description HeaderTreeColumnKey key System.String path System.Int32 index Returns Type Description HeaderTreeColumnValue Overrides Teronis.ObjectModel.TreeColumn.Core.TreeColumnSeekerBase<Teronis.ObjectModel.TreeColumn.HeaderTreeColumnKey, Teronis.ObjectModel.TreeColumn.HeaderTreeColumnValue>.instantiateTreeColumnValue(Teronis.ObjectModel.TreeColumn.HeaderTreeColumnKey, System.String, System.Int32) Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnValue.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.HeaderTreeColumnValue.html",
    "title": "Class HeaderTreeColumnValue | Documentations",
    "keywords": "Class HeaderTreeColumnValue Inheritance System.Object TreeColumnValue < HeaderTreeColumnKey > HeaderTreeColumnValue Implements ITreeColumnValue < HeaderTreeColumnKey > Inherited Members TreeColumnValue<HeaderTreeColumnKey>.Key TreeColumnValue<HeaderTreeColumnKey>.Path TreeColumnValue<HeaderTreeColumnKey>.Index Namespace : Teronis.ObjectModel.TreeColumn Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public class HeaderTreeColumnValue : TreeColumnValue<HeaderTreeColumnKey>, ITreeColumnValue<HeaderTreeColumnKey> Constructors | Improve this Doc View Source HeaderTreeColumnValue(HeaderTreeColumnKey, String, Int32) Declaration public HeaderTreeColumnValue(HeaderTreeColumnKey key, string path, int index) Parameters Type Name Description HeaderTreeColumnKey key System.String path System.Int32 index Implements ITreeColumnValue<TreeColumnDefinitionKeyType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.TreeColumn.html",
    "title": "Namespace Teronis.ObjectModel.TreeColumn | Documentations",
    "keywords": "Namespace Teronis.ObjectModel.TreeColumn Classes HasTreeColumnsAttribute HeaderTreeColumnKey HeaderTreeColumnSeeker HeaderTreeColumnValue"
  },
  "Teronis.DotNet/Teronis.ObjectModel.Work.html": {
    "href": "Teronis.DotNet/Teronis.ObjectModel.Work.html",
    "title": "Class Work | Documentations",
    "keywords": "Class Work Inheritance System.Object Work Implements IWorking Namespace : Teronis.ObjectModel Assembly : Teronis.NetStandard.Core.dll Syntax public class Work : INotifyPropertyChanged, IWorking Constructors | Improve this Doc View Source Work() Declaration public Work() Properties | Improve this Doc View Source IsWorking Declaration public bool IsWorking { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source BeginWork() Declaration public IDisposable BeginWork() Returns Type Description IDisposable | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName Events | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > Implements IWorking Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfo.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfo.html",
    "title": "Class AttributeMemberInfo | Documentations",
    "keywords": "Class AttributeMemberInfo Inheritance System.Object AttributeMemberInfo < Attribute > AttributeMemberInfo Inherited Members AttributeMemberInfo<Attribute>.AttributeType AttributeMemberInfo<Attribute>.MemberInfo AttributeMemberInfo<Attribute>.Attributes Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public class AttributeMemberInfo : AttributeMemberInfo<Attribute> Constructors | Improve this Doc View Source AttributeMemberInfo(MemberInfo, Type, Nullable<Boolean>) Declaration public AttributeMemberInfo(MemberInfo memberInfo, Type attributeType, bool? getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo Type attributeType System.Nullable < System.Boolean > getCustomAttributesInherit Methods | Improve this Doc View Source getAttributes(Boolean) Declaration protected override IEnumerable<Attribute> getAttributes(bool getCustomAttributesInherit) Parameters Type Name Description System.Boolean getCustomAttributesInherit Returns Type Description IEnumerable < Attribute > Overrides Teronis.Reflection.AttributeMemberInfo<Attribute>.getAttributes(System.Boolean) Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) AttributeMemberInfoReceiverExtensions.LetAttributesReceiveAttributeMemberInfo<T>(AttributeMemberInfo<T>) AttributeMemberInfoExtensions.FirstAttribute<T>(AttributeMemberInfo<T>)"
  },
  "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfo-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfo-1.html",
    "title": "Class AttributeMemberInfo<TAttribute> | Documentations",
    "keywords": "Class AttributeMemberInfo<TAttribute> Inheritance System.Object AttributeMemberInfo<TAttribute> AttributeMemberInfo Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public class AttributeMemberInfo<TAttribute> : object where TAttribute : Attribute Type Parameters Name Description TAttribute Constructors | Improve this Doc View Source AttributeMemberInfo(MemberInfo, Nullable<Boolean>) Declaration public AttributeMemberInfo(MemberInfo memberInfo, bool? getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo System.Nullable < System.Boolean > getCustomAttributesInherit | Improve this Doc View Source AttributeMemberInfo(MemberInfo, Type, Nullable<Boolean>) Declaration protected AttributeMemberInfo(MemberInfo memberInfo, Type attributeType, bool? getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo Type attributeType System.Nullable < System.Boolean > getCustomAttributesInherit Properties | Improve this Doc View Source Attributes Declaration public List<TAttribute> Attributes { get; } Property Value Type Description List <TAttribute> | Improve this Doc View Source AttributeType Declaration public Type AttributeType { get; } Property Value Type Description Type | Improve this Doc View Source MemberInfo Declaration public MemberInfo MemberInfo { get; } Property Value Type Description MemberInfo Methods | Improve this Doc View Source getAttributes(Boolean) Declaration protected virtual IEnumerable<TAttribute> getAttributes(bool getCustomAttributesInherit) Parameters Type Name Description System.Boolean getCustomAttributesInherit Returns Type Description IEnumerable <TAttribute> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfoExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.AttributeMemberInfoExtensions.html",
    "title": "Class AttributeMemberInfoExtensions | Documentations",
    "keywords": "Class AttributeMemberInfoExtensions Inheritance System.Object AttributeMemberInfoExtensions Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public static class AttributeMemberInfoExtensions : object Methods | Improve this Doc View Source FirstAttribute<T>(AttributeMemberInfo<T>) Declaration public static T FirstAttribute<T>(this AttributeMemberInfo<T> attrVarInfo) where T : Attribute Parameters Type Name Description AttributeMemberInfo <T> attrVarInfo Returns Type Description T Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.html",
    "title": "Namespace Teronis.Reflection.Caching | Documentations",
    "keywords": "Namespace Teronis.Reflection.Caching Classes PropertyCachedEventArgs<TProperty> PropertyCacheEventArgs<T> PropertyCacheRemovedEventArgs<TProperty> PropertyCachingEventArgs<TProperty> SingleTypePropertyCache<PropertyType> This class does provide a cache of values of type which are owned by SingleTypedPropertiesOwner . Delegates PropertyCachedEvent<TProperty> PropertyCacheRemovedEvent<TProperty> PropertyCachingEvent<TProperty>"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachedEvent-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachedEvent-1.html",
    "title": "Delegate PropertyCachedEvent<TProperty> | Documentations",
    "keywords": "Delegate PropertyCachedEvent<TProperty> Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public delegate void PropertyCachedEvent<TProperty>(object sender, PropertyCachedEventArgs<TProperty> args); Parameters Type Name Description System.Object sender PropertyCachedEventArgs <TProperty> args Type Parameters Name Description TProperty Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachedEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachedEventArgs-1.html",
    "title": "Class PropertyCachedEventArgs<TProperty> | Documentations",
    "keywords": "Class PropertyCachedEventArgs<TProperty> Inheritance System.Object PropertyCacheEventArgs <TProperty> PropertyCachedEventArgs<TProperty> Inherited Members PropertyCacheEventArgs<TProperty>.PropertyName PropertyCacheEventArgs<TProperty>.PropertyValue Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyCachedEventArgs<TProperty> : PropertyCacheEventArgs<TProperty> Type Parameters Name Description TProperty Constructors | Improve this Doc View Source PropertyCachedEventArgs(String, TProperty) Declaration public PropertyCachedEventArgs(string propertyName, TProperty addedPropertyValue) Parameters Type Name Description System.String propertyName TProperty addedPropertyValue | Improve this Doc View Source PropertyCachedEventArgs(String, TProperty, TProperty) Declaration public PropertyCachedEventArgs(string propertyName, TProperty addedPropertyValue, TProperty removedPropertyValue) Parameters Type Name Description System.String propertyName TProperty addedPropertyValue TProperty removedPropertyValue Properties | Improve this Doc View Source IsRecache Declaration public bool IsRecache { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RemovedPropertyValue Declaration public TProperty RemovedPropertyValue { get; } Property Value Type Description TProperty Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheEventArgs-1.html",
    "title": "Class PropertyCacheEventArgs<T> | Documentations",
    "keywords": "Class PropertyCacheEventArgs<T> Inheritance System.Object PropertyCacheEventArgs<T> PropertyCachedEventArgs<TProperty> PropertyCacheRemovedEventArgs<TProperty> PropertyCachingEventArgs<TProperty> Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyCacheEventArgs<T> : object Type Parameters Name Description T Constructors | Improve this Doc View Source PropertyCacheEventArgs(String, T) Declaration public PropertyCacheEventArgs(string propertyName, T propertyValue) Parameters Type Name Description System.String propertyName T propertyValue Properties | Improve this Doc View Source PropertyName Declaration public string PropertyName { get; } Property Value Type Description System.String | Improve this Doc View Source PropertyValue Declaration public T PropertyValue { get; } Property Value Type Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheRemovedEvent-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheRemovedEvent-1.html",
    "title": "Delegate PropertyCacheRemovedEvent<TProperty> | Documentations",
    "keywords": "Delegate PropertyCacheRemovedEvent<TProperty> Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public delegate void PropertyCacheRemovedEvent<TProperty>(object sender, PropertyCacheRemovedEventArgs<TProperty> args); Parameters Type Name Description System.Object sender PropertyCacheRemovedEventArgs <TProperty> args Type Parameters Name Description TProperty Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheRemovedEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCacheRemovedEventArgs-1.html",
    "title": "Class PropertyCacheRemovedEventArgs<TProperty> | Documentations",
    "keywords": "Class PropertyCacheRemovedEventArgs<TProperty> Inheritance System.Object PropertyCacheEventArgs <TProperty> PropertyCacheRemovedEventArgs<TProperty> Inherited Members PropertyCacheEventArgs<TProperty>.PropertyName PropertyCacheEventArgs<TProperty>.PropertyValue Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyCacheRemovedEventArgs<TProperty> : PropertyCacheEventArgs<TProperty> Type Parameters Name Description TProperty Constructors | Improve this Doc View Source PropertyCacheRemovedEventArgs(String, TProperty) Declaration public PropertyCacheRemovedEventArgs(string propertyName, TProperty property) Parameters Type Name Description System.String propertyName TProperty property Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachingEvent-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachingEvent-1.html",
    "title": "Delegate PropertyCachingEvent<TProperty> | Documentations",
    "keywords": "Delegate PropertyCachingEvent<TProperty> Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public delegate void PropertyCachingEvent<TProperty>(object sender, PropertyCachingEventArgs<TProperty> args); Parameters Type Name Description System.Object sender PropertyCachingEventArgs <TProperty> args Type Parameters Name Description TProperty Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachingEventArgs-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.PropertyCachingEventArgs-1.html",
    "title": "Class PropertyCachingEventArgs<TProperty> | Documentations",
    "keywords": "Class PropertyCachingEventArgs<TProperty> Inheritance System.Object PropertyCacheEventArgs <TProperty> PropertyCachingEventArgs<TProperty> Inherited Members PropertyCacheEventArgs<TProperty>.PropertyName PropertyCacheEventArgs<TProperty>.PropertyValue Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public class PropertyCachingEventArgs<TProperty> : PropertyCacheEventArgs<TProperty> Type Parameters Name Description TProperty Constructors | Improve this Doc View Source PropertyCachingEventArgs(String, TProperty) Declaration public PropertyCachingEventArgs(string propertyName, TProperty property) Parameters Type Name Description System.String propertyName TProperty property Properties | Improve this Doc View Source CanTrackProperty Declaration public bool CanTrackProperty { get; set; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.Caching.SingleTypePropertyCache-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Caching.SingleTypePropertyCache-1.html",
    "title": "Class SingleTypePropertyCache<PropertyType> | Documentations",
    "keywords": "Class SingleTypePropertyCache<PropertyType> This class does provide a cache of values of type which are owned by SingleTypedPropertiesOwner . Inheritance System.Object SingleTypePropertyCache<PropertyType> Namespace : Teronis.Reflection.Caching Assembly : Teronis.NetStandard.Core.dll Syntax public class SingleTypePropertyCache<PropertyType> : object Type Parameters Name Description PropertyType Constructors | Improve this Doc View Source SingleTypePropertyCache(INotifyPropertyChanged) Declaration public SingleTypePropertyCache(INotifyPropertyChanged singleTypedPropertyNotifierAndOwner) Parameters Type Name Description INotifyPropertyChanged singleTypedPropertyNotifierAndOwner | Improve this Doc View Source SingleTypePropertyCache(INotifyPropertyChanged, Nullable<IEqualityComparer<PropertyType>>) Declaration public SingleTypePropertyCache(INotifyPropertyChanged singleTypedPropertyNotifierAndOwner, IEqualityComparer<PropertyType>? propertyValueEqualityComparer) Parameters Type Name Description INotifyPropertyChanged singleTypedPropertyNotifierAndOwner System.Nullable < IEqualityComparer <PropertyType>> propertyValueEqualityComparer | Improve this Doc View Source SingleTypePropertyCache(INotifyPropertyChanged, Object) Declaration public SingleTypePropertyCache(INotifyPropertyChanged singleTypedPropertyNotifier, object singleTypedPropertiesOwner) Parameters Type Name Description INotifyPropertyChanged singleTypedPropertyNotifier System.Object singleTypedPropertiesOwner | Improve this Doc View Source SingleTypePropertyCache(INotifyPropertyChanged, Object, Nullable<IEqualityComparer<PropertyType>>) Declaration public SingleTypePropertyCache(INotifyPropertyChanged singleTypedPropertyNotifier, object singleTypedPropertiesOwner, IEqualityComparer<PropertyType>? propertyValueEqualityComparer) Parameters Type Name Description INotifyPropertyChanged singleTypedPropertyNotifier System.Object singleTypedPropertiesOwner System.Nullable < IEqualityComparer <PropertyType>> propertyValueEqualityComparer Properties | Improve this Doc View Source CachedPropertyValues Declaration public ReadOnlyDictionary<string, PropertyType> CachedPropertyValues { get; } Property Value Type Description ReadOnlyDictionary < System.String , PropertyType> | Improve this Doc View Source CanHandleDefaultValue If true, then only properties are added to the cache whose property values are not equals TrackingPropertyDefaultValue and cached properties are removed and not recached whose property values are equals TrackingPropertyDefaultValue . Declaration public bool CanHandleDefaultValue { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanSkipPropertyRemovedEventInvocationWhenRetracking It does skip the invocation of the property removed event. It may help if you can handle the retrack in the property added event. Declaration public bool CanSkipPropertyRemovedEventInvocationWhenRetracking { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PropertyValueEqualityComparer Declaration public IEqualityComparer<PropertyType> PropertyValueEqualityComparer { get; } Property Value Type Description IEqualityComparer <PropertyType> | Improve this Doc View Source SingleTypedPropertiesOwner Declaration public object SingleTypedPropertiesOwner { get; } Property Value Type Description System.Object | Improve this Doc View Source SingleTypedPropertiesOwnerType Declaration public Type SingleTypedPropertiesOwnerType { get; } Property Value Type Description Type | Improve this Doc View Source SingleTypedPropertyNotifier Declaration public INotifyPropertyChanged SingleTypedPropertyNotifier { get; } Property Value Type Description INotifyPropertyChanged | Improve this Doc View Source TrackingPropertyDefaultValue Declaration public PropertyType TrackingPropertyDefaultValue { get; set; } Property Value Type Description PropertyType | Improve this Doc View Source TrackingPropertyType Declaration public Type TrackingPropertyType { get; set; } Property Value Type Description Type | Improve this Doc View Source VariableInfoDescriptor Used when it is tried to get a variable member of SingleTypedPropertiesOwnerType by its name. Declaration public VariableInfoDescriptor VariableInfoDescriptor { get; } Property Value Type Description VariableInfoDescriptor Methods | Improve this Doc View Source OnPropertyCacheAdded(PropertyCachedEventArgs<PropertyType>) Declaration protected void OnPropertyCacheAdded(PropertyCachedEventArgs<PropertyType> args) Parameters Type Name Description PropertyCachedEventArgs <PropertyType> args | Improve this Doc View Source OnPropertyCacheAdding(PropertyCachingEventArgs<PropertyType>) Declaration protected void OnPropertyCacheAdding(PropertyCachingEventArgs<PropertyType> args) Parameters Type Name Description PropertyCachingEventArgs <PropertyType> args | Improve this Doc View Source OnPropertyCacheRemoved(PropertyCacheRemovedEventArgs<PropertyType>) Declaration protected void OnPropertyCacheRemoved(PropertyCacheRemovedEventArgs<PropertyType> args) Parameters Type Name Description PropertyCacheRemovedEventArgs <PropertyType> args | Improve this Doc View Source SingleTypePropertyNotifierPropertyChanged(Nullable<String>) When calling it, you are about to trigger a change of a property. Declaration public void SingleTypePropertyNotifierPropertyChanged(string? propertyName) Parameters Type Name Description System.Nullable < System.String > propertyName Events | Improve this Doc View Source PropertyAdded Declaration public event PropertyCachedEvent<PropertyType> PropertyAdded Event Type Type Description PropertyCachedEvent <PropertyType> | Improve this Doc View Source PropertyAdding Declaration public event PropertyCachingEvent<PropertyType> PropertyAdding Event Type Type Description PropertyCachingEvent <PropertyType> | Improve this Doc View Source PropertyRemoved Declaration public event PropertyCacheRemovedEvent<PropertyType> PropertyRemoved Event Type Type Description PropertyCacheRemovedEvent <PropertyType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.html",
    "title": "Namespace Teronis.Reflection | Documentations",
    "keywords": "Namespace Teronis.Reflection Classes AttributeMemberInfo AttributeMemberInfo<TAttribute> AttributeMemberInfoExtensions Instantiator Instantiator<T> ITypeInfoFilterExtensions NestedProperty NestedPropertyUtils PropertyEventArgsBase<PropertyType> TeronisReflectionUtils TypeInfoFilter VariableInfoDescriptor Interfaces ITypeInfoFilter Enums VariableMemberTypes"
  },
  "Teronis.DotNet/Teronis.Reflection.Instantiator.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Instantiator.html",
    "title": "Class Instantiator | Documentations",
    "keywords": "Class Instantiator Inheritance System.Object Instantiator Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public static class Instantiator : object Methods | Improve this Doc View Source Instantiate(Type) Instantiates an object of type type . If it has no default constructor the object will be created uninitialized/without constructor. Declaration public static object Instantiate(Type type) Parameters Type Name Description Type type The type you want to instantiate. Returns Type Description System.Object The object that has been instantiated. | Improve this Doc View Source Instantiate<T>() Instantiates an object of type T . If it has no default constructor the object will be created uninitialized/without constructor. Declaration public static T Instantiate<T>() Returns Type Description T The object that has been instantiated. Type Parameters Name Description T | Improve this Doc View Source Instantiate<T>(Type) Declaration public static T Instantiate<T>(Type type) Parameters Type Name Description Type type Returns Type Description T Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Reflection.Instantiator-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.Instantiator-1.html",
    "title": "Class Instantiator<T> | Documentations",
    "keywords": "Class Instantiator<T> Inheritance System.Object Instantiator<T> Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public class Instantiator<T> : object Type Parameters Name Description T Methods | Improve this Doc View Source Instantiate() Instantiates an object of type T . If it has no default constructor the object will be created uninitialized/without constructor. Declaration public static T Instantiate() Returns Type Description T The object that has been instantiated. Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.ITypeInfoFilter.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.ITypeInfoFilter.html",
    "title": "Interface ITypeInfoFilter | Documentations",
    "keywords": "Interface ITypeInfoFilter Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public interface ITypeInfoFilter Methods | Improve this Doc View Source IsAllowed(Nullable<TypeInfo>) Declaration bool IsAllowed(TypeInfo? typeInfo) Parameters Type Name Description System.Nullable < TypeInfo > typeInfo Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) ITypeInfoFilterExtensions.IsBlocked(ITypeInfoFilter, TypeInfo)"
  },
  "Teronis.DotNet/Teronis.Reflection.ITypeInfoFilterExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.ITypeInfoFilterExtensions.html",
    "title": "Class ITypeInfoFilterExtensions | Documentations",
    "keywords": "Class ITypeInfoFilterExtensions Inheritance System.Object ITypeInfoFilterExtensions Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public static class ITypeInfoFilterExtensions : object Methods | Improve this Doc View Source IsBlocked(ITypeInfoFilter, TypeInfo) Declaration public static bool IsBlocked(this ITypeInfoFilter typeInfoFilter, TypeInfo typeInfo) Parameters Type Name Description ITypeInfoFilter typeInfoFilter TypeInfo typeInfo Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Reflection.NestedProperty.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.NestedProperty.html",
    "title": "Class NestedProperty | Documentations",
    "keywords": "Class NestedProperty Inheritance System.Object NestedProperty Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public class NestedProperty : object Properties | Improve this Doc View Source PropertyHolderObject Declaration public object? PropertyHolderObject { get; set; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source PropertyInfo Declaration public PropertyInfo? PropertyInfo { get; set; } Property Value Type Description System.Nullable < PropertyInfo > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.NestedPropertyUtils.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.NestedPropertyUtils.html",
    "title": "Class NestedPropertyUtils | Documentations",
    "keywords": "Class NestedPropertyUtils Inheritance System.Object NestedPropertyUtils Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public static class NestedPropertyUtils : object Methods | Improve this Doc View Source GetNestedProperty(Object, String, Int32) Declaration public static NestedProperty GetNestedProperty(object deepObject, string dotSeparatedPathParts, int startAtPathPart = 0) Parameters Type Name Description System.Object deepObject System.String dotSeparatedPathParts System.Int32 startAtPathPart Returns Type Description NestedProperty | Improve this Doc View Source GetNestedValue(Object, String, Int32) Declaration public static object? GetNestedValue(object obj, string path, int startIndex = 0) Parameters Type Name Description System.Object obj System.String path System.Int32 startIndex Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source GetNestedValue(NestedProperty) Declaration public static object? GetNestedValue(NestedProperty nestedProperty) Parameters Type Name Description NestedProperty nestedProperty Returns Type Description System.Nullable < System.Object >"
  },
  "Teronis.DotNet/Teronis.Reflection.PropertyEventArgsBase-1.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.PropertyEventArgsBase-1.html",
    "title": "Class PropertyEventArgsBase<PropertyType> | Documentations",
    "keywords": "Class PropertyEventArgsBase<PropertyType> Inheritance System.Object PropertyEventArgsBase<PropertyType> Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public abstract class PropertyEventArgsBase<PropertyType> : object Type Parameters Name Description PropertyType Constructors | Improve this Doc View Source PropertyEventArgsBase(String) Declaration public PropertyEventArgsBase(string propertyName) Parameters Type Name Description System.String propertyName Properties | Improve this Doc View Source CurrentPropertyValue Declaration public abstract PropertyType CurrentPropertyValue { get; } Property Value Type Description PropertyType | Improve this Doc View Source PropertyName Declaration public string PropertyName { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.TeronisReflectionUtils.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.TeronisReflectionUtils.html",
    "title": "Class TeronisReflectionUtils | Documentations",
    "keywords": "Class TeronisReflectionUtils Inheritance System.Object TeronisReflectionUtils Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public static class TeronisReflectionUtils : object Methods | Improve this Doc View Source GetAttributeMembers(Type, Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>>, Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo> GetAttributeMembers(Type attributeType, Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>> getMembers, Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor variableInfoDescriptor = null, bool? getCustomAttributesInherit = null) Parameters Type Name Description Type attributeType Func < Type , VariableInfoDescriptor , IEnumerable < MemberInfo >> getMembers Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor variableInfoDescriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo > | Improve this Doc View Source GetAttributeMembers<TAttribute>(Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>>, Type, Nullable<Type>, VariableInfoDescriptor, Nullable<Boolean>) Declaration public static IEnumerable<AttributeMemberInfo<TAttribute>> GetAttributeMembers<TAttribute>(Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>> getMembers, Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor variableInfoDescriptor = null, bool? getCustomAttributesInherit = null) where TAttribute : Attribute Parameters Type Name Description Func < Type , VariableInfoDescriptor , IEnumerable < MemberInfo >> getMembers Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor variableInfoDescriptor System.Nullable < System.Boolean > getCustomAttributesInherit Returns Type Description IEnumerable < AttributeMemberInfo <TAttribute>> Type Parameters Name Description TAttribute | Improve this Doc View Source GetMembers(Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>>, Type, Nullable<Type>, VariableInfoDescriptor) Declaration public static IEnumerable<MemberInfo> GetMembers(Func<Type, VariableInfoDescriptor, IEnumerable<MemberInfo>> getMembers, Type beginningType, Type? interruptingBaseType = null, VariableInfoDescriptor variableInfoDescriptor = null) Parameters Type Name Description Func < Type , VariableInfoDescriptor , IEnumerable < MemberInfo >> getMembers Type beginningType System.Nullable < Type > interruptingBaseType VariableInfoDescriptor variableInfoDescriptor Returns Type Description IEnumerable < MemberInfo > | Improve this Doc View Source ShallowCopy<T>(T) Declaration public static T ShallowCopy<T>(T entity) Parameters Type Name Description T entity Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ShallowCopy<SourceType, TargetType>(SourceType) Declaration public static TargetType ShallowCopy<SourceType, TargetType>(SourceType source) Parameters Type Name Description SourceType source Returns Type Description TargetType Type Parameters Name Description SourceType TargetType | Improve this Doc View Source UpdateEntityVariables<T>(T, T, IEnumerable<MemberInfo>) Declaration public static void UpdateEntityVariables<T>(T leftEntity, T rightEntity, IEnumerable<MemberInfo> variableInfos) Parameters Type Name Description T leftEntity T rightEntity IEnumerable < MemberInfo > variableInfos Type Parameters Name Description T | Improve this Doc View Source UpdateEntityVariables<T>(T, T, VariableInfoDescriptor, VariableInfoDescriptor) Declaration public static void UpdateEntityVariables<T>(T leftEntity, T rightEntity, VariableInfoDescriptor leftVariablesDescriptor = null, VariableInfoDescriptor rightVariablesDescriptor = null) Parameters Type Name Description T leftEntity T rightEntity VariableInfoDescriptor leftVariablesDescriptor VariableInfoDescriptor rightVariablesDescriptor Type Parameters Name Description T | Improve this Doc View Source UpdateEntityVariablesByAttribute<T>(T, T, Type, VariableInfoDescriptor) Declaration public static void UpdateEntityVariablesByAttribute<T>(T leftEntity, T rightEntity, Type attributeType, VariableInfoDescriptor variableInfoSettings = null) Parameters Type Name Description T leftEntity T rightEntity Type attributeType VariableInfoDescriptor variableInfoSettings Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Reflection.TypeInfoFilter.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.TypeInfoFilter.html",
    "title": "Class TypeInfoFilter | Documentations",
    "keywords": "Class TypeInfoFilter Inheritance System.Object TypeInfoFilter Implements ITypeInfoFilter Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public class TypeInfoFilter : object, ITypeInfoFilter Constructors | Improve this Doc View Source TypeInfoFilter(TypeInfo[]) Declaration public TypeInfoFilter(params TypeInfo[] typeInfoAllowList) Parameters Type Name Description TypeInfo [] typeInfoAllowList | Improve this Doc View Source TypeInfoFilter(TypeInfo[], TypeInfo[]) Declaration public TypeInfoFilter(TypeInfo[] typeInfoAllowList, params TypeInfo[] typeInfoBlockList) Parameters Type Name Description TypeInfo [] typeInfoAllowList TypeInfo [] typeInfoBlockList Methods | Improve this Doc View Source IsAllowed(Nullable<TypeInfo>) Declaration public virtual bool IsAllowed(TypeInfo? typeInfo) Parameters Type Name Description System.Nullable < TypeInfo > typeInfo Returns Type Description System.Boolean Implements ITypeInfoFilter Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.VariableInfoDescriptor.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.VariableInfoDescriptor.html",
    "title": "Class VariableInfoDescriptor | Documentations",
    "keywords": "Class VariableInfoDescriptor Inheritance System.Object VariableInfoDescriptor Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public sealed class VariableInfoDescriptor : object Constructors | Improve this Doc View Source VariableInfoDescriptor() Declaration public VariableInfoDescriptor() Fields | Improve this Doc View Source DefaultFlags A combination of and . Declaration public static readonly BindingFlags DefaultFlags Field Value Type Description BindingFlags Properties | Improve this Doc View Source ExcludeByAttributeTypes Declaration public IEnumerable<Type>? ExcludeByAttributeTypes { get; set; } Property Value Type Description System.Nullable < IEnumerable < Type >> | Improve this Doc View Source ExcludeByAttributeTypesInherit Declaration public bool ExcludeByAttributeTypesInherit { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ExcludeIfReadable Declaration public bool ExcludeIfReadable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ExcludeIfWritable Declaration public bool ExcludeIfWritable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Flags Has the value of DefaultFlags by default. Declaration public BindingFlags Flags { get; set; } Property Value Type Description BindingFlags | Improve this Doc View Source IncludeByAttributeTypes Declaration public IEnumerable<Type>? IncludeByAttributeTypes { get; set; } Property Value Type Description System.Nullable < IEnumerable < Type >> | Improve this Doc View Source IncludeByAttributeTypesInherit Declaration public bool IncludeByAttributeTypesInherit { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IncludeIfReadable Declaration public bool IncludeIfReadable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IncludeIfWritable Declaration public bool IncludeIfWritable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSealed Declaration public bool IsSealed { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Seal() Declaration public void Seal() | Improve this Doc View Source ShallowCopy() A shallow copy of Declaration public VariableInfoDescriptor ShallowCopy() Returns Type Description VariableInfoDescriptor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Reflection.VariableMemberTypes.html": {
    "href": "Teronis.DotNet/Teronis.Reflection.VariableMemberTypes.html",
    "title": "Enum VariableMemberTypes | Documentations",
    "keywords": "Enum VariableMemberTypes Namespace : Teronis.Reflection Assembly : Teronis.NetStandard.Core.dll Syntax public enum VariableMemberTypes : int Fields Name Description Field Property"
  },
  "Teronis.DotNet/Teronis.Runtime.InteropServices.html": {
    "href": "Teronis.DotNet/Teronis.Runtime.InteropServices.html",
    "title": "Namespace Teronis.Runtime.InteropServices | Documentations",
    "keywords": "Namespace Teronis.Runtime.InteropServices Classes UnsafeMemoryAllocator"
  },
  "Teronis.DotNet/Teronis.Runtime.InteropServices.UnsafeMemoryAllocator.html": {
    "href": "Teronis.DotNet/Teronis.Runtime.InteropServices.UnsafeMemoryAllocator.html",
    "title": "Class UnsafeMemoryAllocator | Documentations",
    "keywords": "Class UnsafeMemoryAllocator Inheritance System.Object UnsafeMemoryAllocator Namespace : Teronis.Runtime.InteropServices Assembly : Teronis.NetStandard.Core.dll Syntax public static class UnsafeMemoryAllocator : object Methods | Improve this Doc View Source Free(Void*) Declaration public static void Free(void *unmanagedPointer) Parameters Type Name Description System.Void * unmanagedPointer MemSet(IntPtr, Int32, Int32) Declaration public static IntPtr MemSet(IntPtr dest, int c, int count) Parameters Type Name Description IntPtr dest System.Int32 c System.Int32 count Returns Type Description IntPtr | Improve this Doc View Source New<T>(Int32) Declaration public static void *New<T>(int elementCount) where T : struct Parameters Type Name Description System.Int32 elementCount Returns Type Description System.Void * Type Parameters Name Description T | Improve this Doc View Source NewAndInit<T>(Int32) Declaration public static void *NewAndInit<T>(int elementCount) where T : struct Parameters Type Name Description System.Int32 elementCount Returns Type Description System.Void * Type Parameters Name Description T | Improve this Doc View Source Resize<T>(Void*, Int32) Declaration public static void *Resize<T>(void *oldPointer, int newElementCount) where T : struct Parameters Type Name Description System.Void * oldPointer System.Int32 newElementCount Returns Type Description System.Void * Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Services.html": {
    "href": "Teronis.DotNet/Teronis.Services.html",
    "title": "Namespace Teronis.Services | Documentations",
    "keywords": "Namespace Teronis.Services Interfaces IAsyncDialogService"
  },
  "Teronis.DotNet/Teronis.Services.IAsyncDialogService.html": {
    "href": "Teronis.DotNet/Teronis.Services.IAsyncDialogService.html",
    "title": "Interface IAsyncDialogService | Documentations",
    "keywords": "Interface IAsyncDialogService Namespace : Teronis.Services Assembly : Teronis.NetStandard.Core.dll Syntax public interface IAsyncDialogService Methods | Improve this Doc View Source ShowDialogAsync(IDialogModel) Declaration Task<bool?> ShowDialogAsync(IDialogModel dialogModel) Parameters Type Name Description IDialogModel dialogModel Returns Type Description Task < System.Nullable < System.Boolean >> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IAsyncDialogServiceExtensions.ShowErrorDialogAsync(IAsyncDialogService, Exception)"
  },
  "Teronis.DotNet/Teronis.Singleton.html": {
    "href": "Teronis.DotNet/Teronis.Singleton.html",
    "title": "Class Singleton | Documentations",
    "keywords": "Class Singleton Inheritance System.Object Singleton Implements ISingleton Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public sealed class Singleton : object, ISingleton Fields | Improve this Doc View Source Default Declaration public static readonly Singleton Default Field Value Type Description Singleton Implements ISingleton Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.SlimLazy-1.html": {
    "href": "Teronis.DotNet/Teronis.SlimLazy-1.html",
    "title": "Class SlimLazy<T> | Documentations",
    "keywords": "Class SlimLazy<T> Inheritance System.Object SlimLazy<T> LazyTask Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public class SlimLazy<T> : object Type Parameters Name Description T Constructors | Improve this Doc View Source SlimLazy(T) Declaration public SlimLazy(T value) Parameters Type Name Description T value | Improve this Doc View Source SlimLazy(Func<T>) Constructs a instance of SlimLazy<T> . Declaration public SlimLazy(Func<T> valueProvider) Parameters Type Name Description Func <T> valueProvider The value provider. Properties | Improve this Doc View Source IsValueCreated True if the value has been created once. Declaration public bool IsValueCreated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Gets the value. If null it gets created. Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source SetValueIfNotCreated(T) Sets the value if it has been not created so far. Declaration protected void SetValueIfNotCreated(T value) Parameters Type Name Description T value Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Text.html": {
    "href": "Teronis.DotNet/Teronis.Text.html",
    "title": "Namespace Teronis.Text | Documentations",
    "keywords": "Namespace Teronis.Text Structs StringSeparator"
  },
  "Teronis.DotNet/Teronis.Text.Json.Converters.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Converters.html",
    "title": "Namespace Teronis.Text.Json.Converters | Documentations",
    "keywords": "Namespace Teronis.Text.Json.Converters Classes NumberStringificationJsonConverter"
  },
  "Teronis.DotNet/Teronis.Text.Json.Converters.NumberStringificationJsonConverter.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Converters.NumberStringificationJsonConverter.html",
    "title": "Class NumberStringificationJsonConverter | Documentations",
    "keywords": "Class NumberStringificationJsonConverter Inheritance System.Object NumberStringificationJsonConverter Namespace : Teronis.Text.Json.Converters Assembly : Teronis.NetStandard.Core.dll Syntax public class NumberStringificationJsonConverter : JsonConverter<object> Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type typeToConvert) Parameters Type Name Description Type typeToConvert Returns Type Description System.Boolean | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override object? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source Write(Utf8JsonWriter, Object, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer System.Object value JsonSerializerOptions options Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Text.Json.Serialization.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Serialization.html",
    "title": "Namespace Teronis.Text.Json.Serialization | Documentations",
    "keywords": "Namespace Teronis.Text.Json.Serialization Classes IncludedVariablesJsonConverter IncludedVariablesJsonConverter<T> VariablesClusionHelper Interfaces IVariablesClusionHelper"
  },
  "Teronis.DotNet/Teronis.Text.Json.Serialization.IncludedVariablesJsonConverter.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Serialization.IncludedVariablesJsonConverter.html",
    "title": "Class IncludedVariablesJsonConverter | Documentations",
    "keywords": "Class IncludedVariablesJsonConverter Inheritance System.Object IncludedVariablesJsonConverter Namespace : Teronis.Text.Json.Serialization Assembly : Teronis.NetStandard.Core.dll Syntax public static class IncludedVariablesJsonConverter : object Methods | Improve this Doc View Source CreateNonGeneric(Type, IEnumerable<KeyValuePair<Type, String>>, out IVariablesClusionHelper) Declaration public static JsonConverter CreateNonGeneric(Type type, IEnumerable<KeyValuePair<Type, string>> includedVariables, out IVariablesClusionHelper variablesInclusionHelper) Parameters Type Name Description Type type IEnumerable < KeyValuePair < Type , System.String >> includedVariables IVariablesClusionHelper variablesInclusionHelper Returns Type Description JsonConverter | Improve this Doc View Source CreateNonGeneric(Type, out IVariablesClusionHelper) Declaration public static JsonConverter CreateNonGeneric(Type type, out IVariablesClusionHelper variablesInclusionHelper) Parameters Type Name Description Type type IVariablesClusionHelper variablesInclusionHelper Returns Type Description JsonConverter"
  },
  "Teronis.DotNet/Teronis.Text.Json.Serialization.IncludedVariablesJsonConverter-1.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Serialization.IncludedVariablesJsonConverter-1.html",
    "title": "Class IncludedVariablesJsonConverter<T> | Documentations",
    "keywords": "Class IncludedVariablesJsonConverter<T> Inheritance System.Object IncludedVariablesJsonConverter<T> Implements IVariablesClusionHelper Namespace : Teronis.Text.Json.Serialization Assembly : Teronis.NetStandard.Core.dll Syntax public class IncludedVariablesJsonConverter<T> : JsonConverter<T>, IVariablesClusionHelper Type Parameters Name Description T Constructors | Improve this Doc View Source IncludedVariablesJsonConverter() Declaration public IncludedVariablesJsonConverter() | Improve this Doc View Source IncludedVariablesJsonConverter(IEnumerable<KeyValuePair<Type, String>>) Declaration public IncludedVariablesJsonConverter(IEnumerable<KeyValuePair<Type, string>> includedVariables) Parameters Type Name Description IEnumerable < KeyValuePair < Type , System.String >> includedVariables Properties | Improve this Doc View Source IncludedVariablesByTypeList Declaration protected Dictionary<Type, HashSet<string>> IncludedVariablesByTypeList { get; } Property Value Type Description Dictionary < Type , HashSet < System.String >> Methods | Improve this Doc View Source IncludeVariable(Type, String[]) Explicitly include the given property(s) for the given type Declaration public void IncludeVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType The type that declares the property System.String [] propertyName One or more property to include. Leave it empty to include the entire type. | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override T Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description T | Improve this Doc View Source Write(Utf8JsonWriter, T, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer T value JsonSerializerOptions options Explicit Interface Implementations | Improve this Doc View Source IVariablesClusionHelper.ConsiderVariable(Type, String[]) Declaration void IVariablesClusionHelper.ConsiderVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType System.String [] propertyName Implements IVariablesClusionHelper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Text.Json.Serialization.IVariablesClusionHelper.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Serialization.IVariablesClusionHelper.html",
    "title": "Interface IVariablesClusionHelper | Documentations",
    "keywords": "Interface IVariablesClusionHelper Namespace : Teronis.Text.Json.Serialization Assembly : Teronis.NetStandard.Core.dll Syntax public interface IVariablesClusionHelper Methods | Improve this Doc View Source ConsiderVariable(Type, String[]) Declaration void ConsiderVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType System.String [] propertyName Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Text.Json.Serialization.VariablesClusionHelper.html": {
    "href": "Teronis.DotNet/Teronis.Text.Json.Serialization.VariablesClusionHelper.html",
    "title": "Class VariablesClusionHelper | Documentations",
    "keywords": "Class VariablesClusionHelper Inheritance System.Object VariablesClusionHelper Implements IVariablesClusionHelper Namespace : Teronis.Text.Json.Serialization Assembly : Teronis.NetStandard.Core.dll Syntax public class VariablesClusionHelper : object, IVariablesClusionHelper Constructors | Improve this Doc View Source VariablesClusionHelper() Declaration public VariablesClusionHelper() | Improve this Doc View Source VariablesClusionHelper(IEnumerable<KeyValuePair<Type, String>>) Declaration public VariablesClusionHelper(IEnumerable<KeyValuePair<Type, string>> includedVariables) Parameters Type Name Description IEnumerable < KeyValuePair < Type , System.String >> includedVariables Fields | Improve this Doc View Source VariablesByTypeList Declaration public readonly Dictionary<Type, HashSet<string>> VariablesByTypeList Field Value Type Description Dictionary < Type , HashSet < System.String >> Methods | Improve this Doc View Source ConsiderVariable(Type, String[]) Declaration public void ConsiderVariable(Type declaringType, params string[] propertyName) Parameters Type Name Description Type declaringType System.String [] propertyName | Improve this Doc View Source IsVariableConsidered(Type, String) Is the given property for the given type included/excluded? Declaration public bool IsVariableConsidered(Type declaringType, string propertyName) Parameters Type Name Description Type declaringType System.String propertyName Returns Type Description System.Boolean Implements IVariablesClusionHelper Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Text.StringSeparator.html": {
    "href": "Teronis.DotNet/Teronis.Text.StringSeparator.html",
    "title": "Struct StringSeparator | Documentations",
    "keywords": "Struct StringSeparator Namespace : Teronis.Text Assembly : Teronis.NetStandard.Core.dll Syntax public struct StringSeparator Constructors | Improve this Doc View Source StringSeparator(String) Declaration public StringSeparator(string separator) Parameters Type Name Description System.String separator | Improve this Doc View Source StringSeparator(String, Int32) Declaration public StringSeparator(string stringSeparator, int initialLastSeparationIndex) Parameters Type Name Description System.String stringSeparator System.Int32 initialLastSeparationIndex Properties | Improve this Doc View Source LastSeparationIndex Declaration public int LastSeparationIndex { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Separator Declaration public string Separator { get; } Property Value Type Description System.String Methods | Improve this Doc View Source SetSeparator(StringBuilder, Nullable<Int32>) Declaration public void SetSeparator(StringBuilder builder, int? lastSeperationIndex = null) Parameters Type Name Description StringBuilder builder System.Nullable < System.Int32 > lastSeperationIndex | Improve this Doc View Source SetSeparator(ref String, Nullable<Int32>) Declaration public void SetSeparator(ref string inputText, int? lastSeperationIndex = null) Parameters Type Name Description System.String inputText System.Nullable < System.Int32 > lastSeperationIndex"
  },
  "Teronis.DotNet/Teronis.Threading.Debouncer.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Debouncer.html",
    "title": "Class Debouncer | Documentations",
    "keywords": "Class Debouncer Inheritance System.Object Debouncer Namespace : Teronis.Threading Assembly : Teronis.NetStandard.Core.dll Syntax public class Debouncer : object Methods | Improve this Doc View Source Debounce(Int32, Func<Task>) Declaration public Task Debounce(int interval, Func<Task> debouncedAction) Parameters Type Name Description System.Int32 interval Func < Task > debouncedAction Returns Type Description Task | Improve this Doc View Source Debounce<T>(Int32, Func<Task<T>>) Declaration public Task<T> Debounce<T>(int interval, Func<Task<T>> debouncedAction) Parameters Type Name Description System.Int32 interval Func < Task <T>> debouncedAction Returns Type Description Task <T> Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Threading.html": {
    "href": "Teronis.DotNet/Teronis.Threading.html",
    "title": "Namespace Teronis.Threading | Documentations",
    "keywords": "Namespace Teronis.Threading Classes Debouncer RNGCryptoThreadSafeRandom ThreadSafeRandom"
  },
  "Teronis.DotNet/Teronis.Threading.RNGCryptoThreadSafeRandom.html": {
    "href": "Teronis.DotNet/Teronis.Threading.RNGCryptoThreadSafeRandom.html",
    "title": "Class RNGCryptoThreadSafeRandom | Documentations",
    "keywords": "Class RNGCryptoThreadSafeRandom Inheritance System.Object RNGCryptoThreadSafeRandom Namespace : Teronis.Threading Assembly : Teronis.NetStandard.Core.dll Syntax public static class RNGCryptoThreadSafeRandom : object Methods | Improve this Doc View Source Next() Declaration public static int Next() Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32) Declaration public static int Next(int maxValue) Parameters Type Name Description System.Int32 maxValue Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) Declaration public static int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue System.Int32 maxValue Returns Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequence.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequence.html",
    "title": "Class AsyncEventSequence | Documentations",
    "keywords": "Class AsyncEventSequence This class can coordinate the invocation order of async events. In begin of the event method you may use one of the following methods: [ or ], and [ ]. After the event handler invocation: [ ]. Inheritance System.Object AsyncEventSequence < Singleton > AsyncEventSequence Inherited Members AsyncEventSequence<Singleton>.Status AsyncEventSequence<Singleton>.EqualityComparer AsyncEventSequence<Singleton>.IsDisposed AsyncEventSequence<Singleton>.RegisterDependency(Singleton) AsyncEventSequence<Singleton>.RegisterDependency(Singleton, TaskCompletionSource) AsyncEventSequence<Singleton>.TryAwaitDependency(Singleton[]) AsyncEventSequence<Singleton>.FinishDependenciesAsync() Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public class AsyncEventSequence : AsyncEventSequence<Singleton> Methods | Improve this Doc View Source RegisterDependency() Declaration public TaskCompletionSource RegisterDependency() Returns Type Description TaskCompletionSource Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequence-1.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequence-1.html",
    "title": "Class AsyncEventSequence<KeyType> | Documentations",
    "keywords": "Class AsyncEventSequence<KeyType> This class can coordinate the invocation order of async events. In begin of the event method you may use one of the following methods: [ RegisterDependency(KeyType) or RegisterDependency(KeyType, out TaskCompletionSource) ], and [ TryAwaitDependency(KeyType[]) ]. After the event handler invocation: [ FinishDependenciesAsync() ]. Inheritance System.Object AsyncEventSequence<KeyType> AsyncEventSequence Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public class AsyncEventSequence<KeyType> : object Type Parameters Name Description KeyType Constructors | Improve this Doc View Source AsyncEventSequence() Declaration public AsyncEventSequence() | Improve this Doc View Source AsyncEventSequence(IEqualityComparer<KeyType>) Declaration public AsyncEventSequence(IEqualityComparer<KeyType> equalityComparer) Parameters Type Name Description IEqualityComparer <KeyType> equalityComparer Properties | Improve this Doc View Source EqualityComparer Declaration public IEqualityComparer<KeyType> EqualityComparer { get; protected set; } Property Value Type Description IEqualityComparer <KeyType> | Improve this Doc View Source IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Status Declaration public AsyncEventSequenceStatus Status { get; } Property Value Type Description AsyncEventSequenceStatus Methods | Improve this Doc View Source FinishDependenciesAsync() This method awaits all registered dependencies and throws the first occuring exception. You may call this after the event handler invocation. Declaration public Task FinishDependenciesAsync() Returns Type Description Task | Improve this Doc View Source RegisterDependency(KeyType) Declaration public TaskCompletionSource RegisterDependency(KeyType key) Parameters Type Name Description KeyType key Returns Type Description TaskCompletionSource | Improve this Doc View Source RegisterDependency(KeyType, out TaskCompletionSource) Declaration public void RegisterDependency(KeyType key, out TaskCompletionSource rcs) Parameters Type Name Description KeyType key TaskCompletionSource rcs | Improve this Doc View Source TryAwaitDependency(KeyType[]) This method awaits all dependencies selected by keys . If one of the awaiting dependencies are failing false gets returned. Even when none keys are provided, this function awaits the task, that gets finished when dependency registration has been ended. Declaration public Task<bool> TryAwaitDependency(params KeyType[] keys) Parameters Type Name Description KeyType[] keys Returns Type Description Task < System.Boolean > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequenceStatus.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.AsyncEventSequenceStatus.html",
    "title": "Enum AsyncEventSequenceStatus | Documentations",
    "keywords": "Enum AsyncEventSequenceStatus Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public enum AsyncEventSequenceStatus : int Fields Name Description Canceled Created Finished Running"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.AsyncHelper.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.AsyncHelper.html",
    "title": "Class AsyncHelper | Documentations",
    "keywords": "Class AsyncHelper Inheritance System.Object AsyncHelper Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public static class AsyncHelper : object Methods | Improve this Doc View Source RunSynchronous(Func<Task>) Declaration public static void RunSynchronous(Func<Task> func) Parameters Type Name Description Func < Task > func | Improve this Doc View Source RunSynchronous<TResult>(Func<Task<TResult>>) Declaration public static TResult RunSynchronous<TResult>(Func<Task<TResult>> func) Parameters Type Name Description Func < Task <TResult>> func Returns Type Description TResult Type Parameters Name Description TResult"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.html",
    "title": "Namespace Teronis.Threading.Tasks | Documentations",
    "keywords": "Namespace Teronis.Threading.Tasks Classes AsyncEventSequence This class can coordinate the invocation order of async events. In begin of the event method you may use one of the following methods: [ or ], and [ ]. After the event handler invocation: [ ]. AsyncEventSequence<KeyType> This class can coordinate the invocation order of async events. In begin of the event method you may use one of the following methods: [ RegisterDependency(KeyType) or RegisterDependency(KeyType, out TaskCompletionSource) ], and [ TryAwaitDependency(KeyType[]) ]. After the event handler invocation: [ FinishDependenciesAsync() ]. AsyncHelper TaskCompletionSource Interfaces IHasAsyncableEventSequence<KeyType> IHasAsyncEventSequence Enums AsyncEventSequenceStatus"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.IHasAsyncableEventSequence-1.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.IHasAsyncableEventSequence-1.html",
    "title": "Interface IHasAsyncableEventSequence<KeyType> | Documentations",
    "keywords": "Interface IHasAsyncableEventSequence<KeyType> Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public interface IHasAsyncableEventSequence<KeyType> Type Parameters Name Description KeyType Properties | Improve this Doc View Source AsyncEventSequence Declaration AsyncEventSequence<KeyType> AsyncEventSequence { get; } Property Value Type Description AsyncEventSequence <KeyType> Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IHasAsyncableEventSequenceExtensions.IsAsyncEvent<KeyType>(IHasAsyncableEventSequence<KeyType>)"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.IHasAsyncEventSequence.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.IHasAsyncEventSequence.html",
    "title": "Interface IHasAsyncEventSequence | Documentations",
    "keywords": "Interface IHasAsyncEventSequence Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public interface IHasAsyncEventSequence : IHasAsyncableEventSequence<Singleton> Properties | Improve this Doc View Source AsyncEventSequence Declaration AsyncEventSequence AsyncEventSequence { get; } Property Value Type Description AsyncEventSequence Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings) IHasAsyncableEventSequenceExtensions.IsAsyncEvent<KeyType>(IHasAsyncableEventSequence<KeyType>)"
  },
  "Teronis.DotNet/Teronis.Threading.Tasks.TaskCompletionSource.html": {
    "href": "Teronis.DotNet/Teronis.Threading.Tasks.TaskCompletionSource.html",
    "title": "Class TaskCompletionSource | Documentations",
    "keywords": "Class TaskCompletionSource Inheritance System.Object TaskCompletionSource Namespace : Teronis.Threading.Tasks Assembly : Teronis.NetStandard.Core.dll Syntax public class TaskCompletionSource : object Constructors | Improve this Doc View Source TaskCompletionSource() Declaration public TaskCompletionSource() | Improve this Doc View Source TaskCompletionSource(Nullable<Object>) Declaration public TaskCompletionSource(object? state) Parameters Type Name Description System.Nullable < System.Object > state | Improve this Doc View Source TaskCompletionSource(Nullable<Object>, TaskCreationOptions) Declaration public TaskCompletionSource(object? state, TaskCreationOptions creationOptions) Parameters Type Name Description System.Nullable < System.Object > state TaskCreationOptions creationOptions | Improve this Doc View Source TaskCompletionSource(TaskCreationOptions) Declaration public TaskCompletionSource(TaskCreationOptions creationOptions) Parameters Type Name Description TaskCreationOptions creationOptions Properties | Improve this Doc View Source Task Declaration public Task Task { get; } Property Value Type Description Task Methods | Improve this Doc View Source SetCanceled() Declaration public void SetCanceled() | Improve this Doc View Source SetException(Exception) Declaration public void SetException(Exception error) Parameters Type Name Description Exception error | Improve this Doc View Source SetException(IEnumerable<Exception>) Declaration public void SetException(IEnumerable<Exception> errors) Parameters Type Name Description IEnumerable < Exception > errors | Improve this Doc View Source SetResult() Declaration public void SetResult() | Improve this Doc View Source TrySetCanceled() Declaration public bool TrySetCanceled() Returns Type Description System.Boolean | Improve this Doc View Source TrySetCanceled(CancellationToken) Declaration public bool TrySetCanceled(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description System.Boolean | Improve this Doc View Source TrySetException(Exception) Declaration public bool TrySetException(Exception error) Parameters Type Name Description Exception error Returns Type Description System.Boolean | Improve this Doc View Source TrySetException(IEnumerable<Exception>) Declaration public void TrySetException(IEnumerable<Exception> errors) Parameters Type Name Description IEnumerable < Exception > errors | Improve this Doc View Source TrySetResult() Declaration public bool TrySetResult() Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Threading.ThreadSafeRandom.html": {
    "href": "Teronis.DotNet/Teronis.Threading.ThreadSafeRandom.html",
    "title": "Class ThreadSafeRandom | Documentations",
    "keywords": "Class ThreadSafeRandom Inheritance System.Object ThreadSafeRandom Namespace : Teronis.Threading Assembly : Teronis.NetStandard.Core.dll Syntax public static class ThreadSafeRandom : object Methods | Improve this Doc View Source Next() Declaration public static int Next() Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32) The maxValue for the upper-bound in the Next() method is exclusive - the range includes maxValue -1. Declaration public static int Next(int maxValue) Parameters Type Name Description System.Int32 maxValue Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) The maxValue for the upper-bound in the Next() method is exclusive - the range includes minValue , maxValue -1 and all number in between. Declaration public static int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue System.Int32 maxValue Returns Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Utils.AssemblyUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.AssemblyUtils.html",
    "title": "Class AssemblyUtils | Documentations",
    "keywords": "Class AssemblyUtils Inheritance System.Object AssemblyUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class AssemblyUtils : object Methods | Improve this Doc View Source GetEmbeddedResourceTextFile(Assembly, String) Get the text file of an embedded resource as string. Declaration public static string GetEmbeddedResourceTextFile(Assembly assembly, string fileName) Parameters Type Name Description Assembly assembly System.String fileName The full path including namespace and folder. Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Utils.CultureInfoUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.CultureInfoUtils.html",
    "title": "Class CultureInfoUtils | Documentations",
    "keywords": "Class CultureInfoUtils Inheritance System.Object CultureInfoUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class CultureInfoUtils : object Methods | Improve this Doc View Source DoesCultureNameExists(String) Declaration public static bool DoesCultureNameExists(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Utils.DateTimeUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.DateTimeUtils.html",
    "title": "Class DateTimeUtils | Documentations",
    "keywords": "Class DateTimeUtils Inheritance System.Object DateTimeUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class DateTimeUtils : object Methods | Improve this Doc View Source DateTimeToECMAScriptTimestamp(DateTime) Returns a time value from the ECMAScript specification. Declaration public static long DateTimeToECMAScriptTimestamp(DateTime dateTime) Parameters Type Name Description DateTime dateTime Returns Type Description System.Int64 | Improve this Doc View Source ECMAScriptTimestampToDateTime(Double) Returns a .Net representation of a time value from the ECMAScript specification. Declaration public static DateTime ECMAScriptTimestampToDateTime(double timeValue) Parameters Type Name Description System.Double timeValue Returns Type Description DateTime"
  },
  "Teronis.DotNet/Teronis.Utils.FileUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.FileUtils.html",
    "title": "Class FileUtils | Documentations",
    "keywords": "Class FileUtils Inheritance System.Object FileUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class FileUtils : object Methods | Improve this Doc View Source WriteAllBytes(String, Byte[]) Declaration public static Task WriteAllBytes(string fileName, byte[] bytes) Parameters Type Name Description System.String fileName System.Byte [] bytes Returns Type Description Task"
  },
  "Teronis.DotNet/Teronis.Utils.FuncGenericUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.FuncGenericUtils.html",
    "title": "Class FuncGenericUtils | Documentations",
    "keywords": "Class FuncGenericUtils Inheritance System.Object FuncGenericUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public class FuncGenericUtils : object Methods | Improve this Doc View Source IsInvocable<T>(Nullable<Func<T>>, out T) Declaration public static bool IsInvocable<T>(Func<T>? getInValue, out T outInValue) Parameters Type Name Description System.Nullable < Func <T>> getInValue T outInValue Returns Type Description System.Boolean Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Utils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.html",
    "title": "Namespace Teronis.Utils | Documentations",
    "keywords": "Namespace Teronis.Utils Classes AssemblyUtils CultureInfoUtils DateTimeUtils FileUtils FuncGenericUtils ICollectionGenericUtils IListGenericUtils ITreeColumnValueUtils LinkedListUtils ListUtils MathUtils MemberInfoUtils NotifyCollectionChangedEventArgsUtils ObjectUtils PointFUtils PointUtils RectangleUtils ResourceManagerUtils SystemParametersUtils TeronisUtils TypeUtils"
  },
  "Teronis.DotNet/Teronis.Utils.ICollectionGenericUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.ICollectionGenericUtils.html",
    "title": "Class ICollectionGenericUtils | Documentations",
    "keywords": "Class ICollectionGenericUtils Inheritance System.Object ICollectionGenericUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class ICollectionGenericUtils : object Methods | Improve this Doc View Source AddItemAndReturnList<CollectionType, T>(CollectionType, T) Declaration public static CollectionType AddItemAndReturnList<CollectionType, T>(CollectionType source, T item) where CollectionType : ICollection<T> Parameters Type Name Description CollectionType source T item Returns Type Description CollectionType Type Parameters Name Description CollectionType T | Improve this Doc View Source AddItemRangeAndReturnList<ListType, ItemType>(ListType, IEnumerable<ItemType>) Declaration public static ListType AddItemRangeAndReturnList<ListType, ItemType>(ListType target, IEnumerable<ItemType> source) where ListType : ICollection<ItemType> Parameters Type Name Description ListType target IEnumerable <ItemType> source Returns Type Description ListType Type Parameters Name Description ListType ItemType"
  },
  "Teronis.DotNet/Teronis.Utils.IListGenericUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.IListGenericUtils.html",
    "title": "Class IListGenericUtils | Documentations",
    "keywords": "Class IListGenericUtils Inheritance System.Object IListGenericUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public class IListGenericUtils : object Methods | Improve this Doc View Source BinarySearch<T>(IList<T>, T) Declaration public static int BinarySearch<T>(IList<T> list, T item) Parameters Type Name Description IList <T> list T item Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source BinarySearch<T>(IList<T>, T, IComparer<T>) Declaration public static int BinarySearch<T>(IList<T> items, T item, IComparer<T> comparer) Parameters Type Name Description IList <T> items T item IComparer <T> comparer Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source Bubblesort<T>(IList<T>) Declaration public static void Bubblesort<T>(IList<T> list) Parameters Type Name Description IList <T> list Type Parameters Name Description T | Improve this Doc View Source Bubblesort<T>(IList<T>, IComparer<T>) Declaration public static void Bubblesort<T>(IList<T> list, IComparer<T> comparer) Parameters Type Name Description IList <T> list IComparer <T> comparer Type Parameters Name Description T | Improve this Doc View Source Shuffle<T>(IList<T>) Declaration public static void Shuffle<T>(IList<T> list) Parameters Type Name Description IList <T> list Type Parameters Name Description T | Improve this Doc View Source YieldIndexedReverse<T>(IList<T>, Int32, Int32) Declaration public static IEnumerable<(int Index, T Item)> YieldIndexedReverse<T>(IList<T> list, int index, int count) Parameters Type Name Description IList <T> list System.Int32 index System.Int32 count Returns Type Description IEnumerable < System.ValueTuple < System.Int32 , T>> Type Parameters Name Description T | Improve this Doc View Source YieldReverse<T>(IList<T>, Int32, Int32) Declaration public static IEnumerable<T> YieldReverse<T>(IList<T> list, int index, int count) Parameters Type Name Description IList <T> list System.Int32 index System.Int32 count Returns Type Description IEnumerable <T> Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Utils.ITreeColumnValueUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.ITreeColumnValueUtils.html",
    "title": "Class ITreeColumnValueUtils | Documentations",
    "keywords": "Class ITreeColumnValueUtils Inheritance System.Object ITreeColumnValueUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.ObjectModel.TreeColumn.dll Syntax public static class ITreeColumnValueUtils : object Methods | Improve this Doc View Source DoesAnyColumnContainText(IEnumerable<ITreeColumnValue<ITreeColumnKey>>, Object, String) Declaration public static bool DoesAnyColumnContainText(IEnumerable<ITreeColumnValue<ITreeColumnKey>> treeColumns, object entity, string searchText) Parameters Type Name Description IEnumerable < ITreeColumnValue < ITreeColumnKey >> treeColumns System.Object entity System.String searchText Returns Type Description System.Boolean | Improve this Doc View Source GetCellContent(IEnumerable<ITreeColumnValue<ITreeColumnKey>>, Object) Declaration public static IEnumerable<object?> GetCellContent(IEnumerable<ITreeColumnValue<ITreeColumnKey>> treeColumnValues, object cellContentContainer) Parameters Type Name Description IEnumerable < ITreeColumnValue < ITreeColumnKey >> treeColumnValues System.Object cellContentContainer Returns Type Description IEnumerable < System.Nullable < System.Object >>"
  },
  "Teronis.DotNet/Teronis.Utils.LinkedListUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.LinkedListUtils.html",
    "title": "Class LinkedListUtils | Documentations",
    "keywords": "Class LinkedListUtils Inheritance System.Object LinkedListUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class LinkedListUtils : object Methods | Improve this Doc View Source YieldNodesReversed<T>(LinkedListNode<T>) Declaration public static IEnumerable<LinkedListNode<T>> YieldNodesReversed<T>(LinkedListNode<T> node) Parameters Type Name Description LinkedListNode <T> node Returns Type Description IEnumerable < LinkedListNode <T>> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.Utils.ListUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.ListUtils.html",
    "title": "Class ListUtils | Documentations",
    "keywords": "Class ListUtils Inheritance System.Object ListUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public class ListUtils : object Methods | Improve this Doc View Source MoveItem<T>(Int32, Int32, Func<Int32, T>, Action<Int32>, Action<Int32, T>) A generic move-item version for list, collection or dictionary. Declaration public static void MoveItem<T>(int fromIndex, int toIndex, Func<int, T> getItemAt, Action<int> removeItemAt, Action<int, T> insertItem) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex Func < System.Int32 , T> getItemAt Action < System.Int32 > removeItemAt Action < System.Int32 , T> insertItem Type Parameters Name Description T | Improve this Doc View Source MoveItems<T>(Int32, Int32, Int32, Func<Int32, T>, Action<Int32>, Action<Int32, T>) A generic move-item version for list, collection or dictionary. Declaration public static void MoveItems<T>(int fromIndex, int toIndex, int count, Func<int, T> getItemAt, Action<int> removeItemAt, Action<int, T> insertItem) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex System.Int32 count Func < System.Int32 , T> getItemAt Action < System.Int32 > removeItemAt Action < System.Int32 , T> insertItem Type Parameters Name Description T | Improve this Doc View Source SwapItem(Int32, Int32, Action<Int32, Nullable<Object>>, Func<Int32, Nullable<Object>>, Action<Int32>) A generic swap-item version for list, collection or dictionary. Declaration public static bool SwapItem(int fromIndex, int toIndex, Action<int, object?> insertAt, Func<int, object?> getAt, Action<int> removeAt) Parameters Type Name Description System.Int32 fromIndex System.Int32 toIndex Action < System.Int32 , System.Nullable < System.Object >> insertAt Func < System.Int32 , System.Nullable < System.Object >> getAt Action < System.Int32 > removeAt Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Utils.MathUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.MathUtils.html",
    "title": "Class MathUtils | Documentations",
    "keywords": "Class MathUtils Inheritance System.Object MathUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class MathUtils : object Methods | Improve this Doc View Source ModOneBasedNumber(Int32, Int32) Declaration public static int ModOneBasedNumber(int x, int m) Parameters Type Name Description System.Int32 x System.Int32 m Returns Type Description System.Int32 | Improve this Doc View Source ModZeroBasedNumber(Int32, Int32) Declaration public static int ModZeroBasedNumber(int x, int m) Parameters Type Name Description System.Int32 x System.Int32 m Returns Type Description System.Int32 | Improve this Doc View Source ShiftAndWrap(Int32, Int32) Declaration public static int ShiftAndWrap(int value, int positions) Parameters Type Name Description System.Int32 value System.Int32 positions Returns Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Utils.MemberInfoUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.MemberInfoUtils.html",
    "title": "Class MemberInfoUtils | Documentations",
    "keywords": "Class MemberInfoUtils Inheritance System.Object MemberInfoUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class MemberInfoUtils : object Methods | Improve this Doc View Source CheckedAttributeVariable(MemberInfo, Type) Checks that memberInfo is a valid variable and has an attribute of type attributeType defined, otherwise an exception is been thrown. Declaration public static void CheckedAttributeVariable(MemberInfo memberInfo, Type attributeType) Parameters Type Name Description MemberInfo memberInfo Type attributeType | Improve this Doc View Source CheckedVariable(MemberInfo) Checks that memberInfo is not null and is either field or property, otherwise an exception is been thrown. Declaration public static void CheckedVariable(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo | Improve this Doc View Source GetValue(MemberInfo, Object) Declaration public static object? GetValue(MemberInfo memberInfo, object owner) Parameters Type Name Description MemberInfo memberInfo System.Object owner Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source GetVariableType(MemberInfo) Declaration public static Type GetVariableType(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description Type | Improve this Doc View Source IsFieldOrProperty(MemberInfo) Declaration public static bool IsFieldOrProperty(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsVariable(MemberInfo) Declaration public static bool IsVariable(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsVariable(MemberInfo, Type, Boolean) Declaration public static bool IsVariable(MemberInfo memberInfo, Type attributeType, bool getCustomAttributesInherit) Parameters Type Name Description MemberInfo memberInfo Type attributeType System.Boolean getCustomAttributesInherit Returns Type Description System.Boolean | Improve this Doc View Source SetValue(MemberInfo, Object, Nullable<Object>) Declaration public static void SetValue(MemberInfo memberInfo, object owner, object? value) Parameters Type Name Description MemberInfo memberInfo System.Object owner System.Nullable < System.Object > value"
  },
  "Teronis.DotNet/Teronis.Utils.NotifyCollectionChangedEventArgsUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.NotifyCollectionChangedEventArgsUtils.html",
    "title": "Class NotifyCollectionChangedEventArgsUtils | Documentations",
    "keywords": "Class NotifyCollectionChangedEventArgsUtils Inheritance System.Object NotifyCollectionChangedEventArgsUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class NotifyCollectionChangedEventArgsUtils : object Methods | Improve this Doc View Source CreateNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Nullable<IList>, Int32, Nullable<IList>, Int32) Declaration public static NotifyCollectionChangedEventArgs CreateNotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList? oldItems, int oldStartingIndex, IList? newItems, int newStartingIndex) Parameters Type Name Description NotifyCollectionChangedAction action System.Nullable < IList > oldItems System.Int32 oldStartingIndex System.Nullable < IList > newItems System.Int32 newStartingIndex Returns Type Description NotifyCollectionChangedEventArgs | Improve this Doc View Source SetNotifyCollectionChangedEventArgsProperties(NotifyCollectionChangedEventArgs, NotifyCollectionChangedAction, Nullable<IList>, Int32, Nullable<IList>, Int32) Declaration public static void SetNotifyCollectionChangedEventArgsProperties(NotifyCollectionChangedEventArgs eventArgs, NotifyCollectionChangedAction action, IList? oldItems, int oldStartingIndex, IList? newItems, int newStartingIndex) Parameters Type Name Description NotifyCollectionChangedEventArgs eventArgs NotifyCollectionChangedAction action System.Nullable < IList > oldItems System.Int32 oldStartingIndex System.Nullable < IList > newItems System.Int32 newStartingIndex"
  },
  "Teronis.DotNet/Teronis.Utils.ObjectUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.ObjectUtils.html",
    "title": "Class ObjectUtils | Documentations",
    "keywords": "Class ObjectUtils Inheritance System.Object ObjectUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class ObjectUtils : object Methods | Improve this Doc View Source IsNullable(Object) Declaration public static bool IsNullable(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Utils.PointFUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.PointFUtils.html",
    "title": "Class PointFUtils | Documentations",
    "keywords": "Class PointFUtils Inheritance System.Object PointFUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class PointFUtils : object Methods | Improve this Doc View Source GetAngelBetweenTwoPoints(PointF, PointF) Declaration public static double GetAngelBetweenTwoPoints(PointF p1, PointF p2) Parameters Type Name Description PointF p1 PointF p2 Returns Type Description System.Double | Improve this Doc View Source GetAveragePoint(IEnumerable<PointF>) Declaration public static PointF GetAveragePoint(IEnumerable<PointF> points) Parameters Type Name Description IEnumerable < PointF > points Returns Type Description PointF | Improve this Doc View Source GetAveragePoint<T>(IEnumerable<T>, Func<T, PointF>) Declaration public static PointF GetAveragePoint<T>(IEnumerable<T> points, Func<T, PointF> getPoint) Parameters Type Name Description IEnumerable <T> points Func <T, PointF > getPoint Returns Type Description PointF Type Parameters Name Description T | Improve this Doc View Source GetCirclePoints(IEnumerable<PointF>, PointF, Int32) Declaration public static IEnumerable<PointF> GetCirclePoints(IEnumerable<PointF> points, PointF centerMiddlePoint, int radius) Parameters Type Name Description IEnumerable < PointF > points PointF centerMiddlePoint System.Int32 radius Returns Type Description IEnumerable < PointF > | Improve this Doc View Source GetCirclePoints<T>(IEnumerable<T>, Func<T, PointF>, PointF, Int32) Declaration public static IEnumerable<T> GetCirclePoints<T>(IEnumerable<T> points, Func<T, PointF> getPoint, PointF centerMiddlePoint, int radius) Parameters Type Name Description IEnumerable <T> points Func <T, PointF > getPoint PointF centerMiddlePoint System.Int32 radius Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetDistanceBetweenTwoPoints(PointF, PointF) Declaration public static double GetDistanceBetweenTwoPoints(PointF p1, PointF p2) Parameters Type Name Description PointF p1 PointF p2 Returns Type Description System.Double | Improve this Doc View Source GetNewPointInLine(PointF, Double, Double) Gets a new point in a given circle. Declaration public static PointF GetNewPointInLine(PointF location, double radius, double degrees) Parameters Type Name Description PointF location System.Double radius System.Double degrees Returns Type Description PointF | Improve this Doc View Source GetRectangle(PointF, PointF) Creates a rectangle based on two points. Declaration public static RectangleF GetRectangle(PointF p1, PointF p2) Parameters Type Name Description PointF p1 Point 1 PointF p2 Point 2 Returns Type Description RectangleF Rectangle | Improve this Doc View Source RotatePoint(PointF, PointF, Double) Rotates one point around another. Declaration public static PointF RotatePoint(PointF pointToRotate, PointF centerPoint, double angleInDegrees) Parameters Type Name Description PointF pointToRotate The point to rotate. PointF centerPoint The center point of rotation. System.Double angleInDegrees The rotation angle in degrees. Returns Type Description PointF Rotated point"
  },
  "Teronis.DotNet/Teronis.Utils.PointUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.PointUtils.html",
    "title": "Class PointUtils | Documentations",
    "keywords": "Class PointUtils Inheritance System.Object PointUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class PointUtils : object Methods | Improve this Doc View Source GetCirclePoints(Single, Single, Single, Single, Single, Boolean) Declaration public static IEnumerable<Point> GetCirclePoints(float width, float height, float middleCenterX, float middleCenterY, float radius, bool border = false) Parameters Type Name Description System.Single width System.Single height System.Single middleCenterX System.Single middleCenterY System.Single radius System.Boolean border Returns Type Description IEnumerable < Point > | Improve this Doc View Source IsPointInCircle(Single, Single, Single, Single, Single) Declaration public static bool IsPointInCircle(float middleCenterX, float middleCenterY, float radius, float x, float y) Parameters Type Name Description System.Single middleCenterX System.Single middleCenterY System.Single radius System.Single x System.Single y Returns Type Description System.Boolean | Improve this Doc View Source IsPointInEllipse(Single, Single, Single, Single, Int32, Int32) Declaration public static bool IsPointInEllipse(float middleCenterX, float middleCenterY, float radiusWidth, float radiusHeight, int x, int y) Parameters Type Name Description System.Single middleCenterX System.Single middleCenterY System.Single radiusWidth System.Single radiusHeight System.Int32 x System.Int32 y Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Utils.RectangleUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.RectangleUtils.html",
    "title": "Class RectangleUtils | Documentations",
    "keywords": "Class RectangleUtils Inheritance System.Object RectangleUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class RectangleUtils : object Methods | Improve this Doc View Source IsRectangleInEllipse(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static bool IsRectangleInEllipse(int rectangleX, int rectangleY, int rectangleWidth, int rectangleHeight, int x, int y) Parameters Type Name Description System.Int32 rectangleX System.Int32 rectangleY System.Int32 rectangleWidth System.Int32 rectangleHeight System.Int32 x System.Int32 y Returns Type Description System.Boolean | Improve this Doc View Source RectangleContains(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public static bool RectangleContains(int rectangleX, int rectangleY, int rectangleWidth, int rectangleHeight, int x, int y) Parameters Type Name Description System.Int32 rectangleX System.Int32 rectangleY System.Int32 rectangleWidth System.Int32 rectangleHeight System.Int32 x System.Int32 y Returns Type Description System.Boolean | Improve this Doc View Source RectangleContains(Int32, Int32, Int32, Int32, Int32, Int32, Boolean) Decision between Rcetangle.Contains() and \"Ellipse.Contains()\"; Declaration public static bool RectangleContains(int rectangleX, int rectangleY, int rectangleWidth, int rectangleHeight, int x, int y, bool inEllipse) Parameters Type Name Description System.Int32 rectangleX System.Int32 rectangleY System.Int32 rectangleWidth System.Int32 rectangleHeight System.Int32 x System.Int32 y System.Boolean inEllipse Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Utils.ResourceManagerUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.ResourceManagerUtils.html",
    "title": "Class ResourceManagerUtils | Documentations",
    "keywords": "Class ResourceManagerUtils Inheritance System.Object ResourceManagerUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public class ResourceManagerUtils : object Methods | Improve this Doc View Source GetSupportedCultures(ResourceManager) Declaration public static List<CultureInfo> GetSupportedCultures(ResourceManager resourceManager) Parameters Type Name Description ResourceManager resourceManager Returns Type Description List < CultureInfo > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Utils.SystemParametersUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.SystemParametersUtils.html",
    "title": "Class SystemParametersUtils | Documentations",
    "keywords": "Class SystemParametersUtils Inheritance System.Object SystemParametersUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class SystemParametersUtils : object Methods | Improve this Doc View Source CalculateKeyboardDelayInterval(Int32) Declaration public static int CalculateKeyboardDelayInterval(int keyboardDelay) Parameters Type Name Description System.Int32 keyboardDelay Returns Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Utils.TeronisUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.TeronisUtils.html",
    "title": "Class TeronisUtils | Documentations",
    "keywords": "Class TeronisUtils Inheritance System.Object TeronisUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class TeronisUtils : object Methods | Improve this Doc View Source CompareEquality<T>(T, T) Declaration public static bool CompareEquality<T>(T one, T two) Parameters Type Name Description T one T two Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source ReturnDefaultReplacement<T>(Func<WrappedValue<T>, T>) Useful for unsubscribing inline event handlers. Declaration public static WrappedValue<T> ReturnDefaultReplacement<T>(Func<WrappedValue<T>, T> getDefaultValueReplacement) Parameters Type Name Description Func < WrappedValue <T>, T> getDefaultValueReplacement Returns Type Description WrappedValue <T> Type Parameters Name Description T | Improve this Doc View Source ReturnDefaultValueReplacement<T>(Func<WrappedValue<T>, T>) Declaration public static T ReturnDefaultValueReplacement<T>(Func<WrappedValue<T>, T> getDefaultValueReplacement) Parameters Type Name Description Func < WrappedValue <T>, T> getDefaultValueReplacement Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ReturnInValue<I>(I) Declaration public static I ReturnInValue<I>(I inValue) Parameters Type Name Description I inValue Returns Type Description I Type Parameters Name Description I | Improve this Doc View Source ReturnInValue<I>(I, out I) Declaration public static I ReturnInValue<I>(I inValue, out I outInValue) Parameters Type Name Description I inValue I outInValue Returns Type Description I Type Parameters Name Description I | Improve this Doc View Source ReturnInValue<I>(I, Action) Declaration public static I ReturnInValue<I>(I inValue, Action doSomething) Parameters Type Name Description I inValue Action doSomething Returns Type Description I Type Parameters Name Description I | Improve this Doc View Source ReturnInValue<I>(I, Action<I>) Declaration public static I ReturnInValue<I>(I inValue, Action<I> mutateInValue) Parameters Type Name Description I inValue Action <I> mutateInValue Returns Type Description I Type Parameters Name Description I | Improve this Doc View Source ReturnInValue<I>(I, Func<I, I>) Declaration public static I ReturnInValue<I>(I inValue, Func<I, I> modifyInValue) Parameters Type Name Description I inValue Func <I, I> modifyInValue Returns Type Description I Type Parameters Name Description I | Improve this Doc View Source ReturnInValue<I>(I, Task) Declaration public static Task<I> ReturnInValue<I>(I inValue, Task task) Parameters Type Name Description I inValue Task task Returns Type Description Task <I> Type Parameters Name Description I | Improve this Doc View Source ReturnNonDefault<T>(T, out T, Nullable<Func<T>>) Declaration public static bool ReturnNonDefault<T>(T inValue, out T outValue, Func<T>? getNonDefaultWhenDefault = null) Parameters Type Name Description T inValue T outValue System.Nullable < Func <T>> getNonDefaultWhenDefault Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source ReturnValue<I, V>(I, out I, V) Declaration public static V ReturnValue<I, V>(I inValue, out I outInValue, V returnBoolean) Parameters Type Name Description I inValue I outInValue V returnBoolean Returns Type Description V Type Parameters Name Description I V | Improve this Doc View Source ReturnValue<I, V>(I, out I, Func<I, V>) Declaration public static V ReturnValue<I, V>(I inValue, out I outInValue, Func<I, V> getValue) Parameters Type Name Description I inValue I outInValue Func <I, V> getValue Returns Type Description V Type Parameters Name Description I V | Improve this Doc View Source ReturnValue<I, V>(I, out I, Func<V>) Declaration public static V ReturnValue<I, V>(I inValue, out I outInValue, Func<V> getValue) Parameters Type Name Description I inValue I outInValue Func <V> getValue Returns Type Description V Type Parameters Name Description I V | Improve this Doc View Source ReturnValue<I, V>(I, Func<I, V>) Declaration public static V ReturnValue<I, V>(I inValue, Func<I, V> getValue) Parameters Type Name Description I inValue Func <I, V> getValue Returns Type Description V Type Parameters Name Description I V | Improve this Doc View Source ReturnValue<I, V>(I, Func<V>) Declaration public static V ReturnValue<I, V>(I inValue, Func<V> getValue) Parameters Type Name Description I inValue Func <V> getValue Returns Type Description V Type Parameters Name Description I V"
  },
  "Teronis.DotNet/Teronis.Utils.TypeUtils.html": {
    "href": "Teronis.DotNet/Teronis.Utils.TypeUtils.html",
    "title": "Class TypeUtils | Documentations",
    "keywords": "Class TypeUtils Inheritance System.Object TypeUtils Namespace : Teronis.Utils Assembly : Teronis.NetStandard.Core.dll Syntax public static class TypeUtils : object Methods | Improve this Doc View Source GetBaseTypes(Type, Nullable<Type>) Declaration public static IEnumerable<Type> GetBaseTypes(Type type, Type? interruptingBaseType = null) Parameters Type Name Description Type type System.Nullable < Type > interruptingBaseType Returns Type Description IEnumerable < Type > | Improve this Doc View Source GetDefaultOfValueOrReferenceType(Type) Declaration public static object? GetDefaultOfValueOrReferenceType(Type type) Parameters Type Name Description Type type Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source HasDefaultConstructor(Type) Declaration public static bool HasDefaultConstructor(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source IsNullable(Type) Declaration public static bool IsNullable(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.ViewModels.html": {
    "href": "Teronis.DotNet/Teronis.ViewModels.html",
    "title": "Namespace Teronis.ViewModels | Documentations",
    "keywords": "Namespace Teronis.ViewModels Classes ViewModelBase ViewModelBase.DefaultDataErrorInfos"
  },
  "Teronis.DotNet/Teronis.ViewModels.ViewModelBase.DefaultDataErrorInfos.html": {
    "href": "Teronis.DotNet/Teronis.ViewModels.ViewModelBase.DefaultDataErrorInfos.html",
    "title": "Class ViewModelBase.DefaultDataErrorInfos | Documentations",
    "keywords": "Class ViewModelBase.DefaultDataErrorInfos Inheritance System.Object DataErrorInfosBase ViewModelBase.DefaultDataErrorInfos Inherited Members DataErrorInfosBase.ErrorsChanged DataErrorInfosBase.HasErrors DataErrorInfosBase.ErrorInfos DataErrorInfosBase.GetErrors(Nullable<String>) DataErrorInfosBase.OnErrorsChanged(String) DataErrorInfosBase.SetErrors(String, ICollection<String>) DataErrorInfosBase.RemoveErrors(String) Namespace : Teronis.ViewModels Assembly : Teronis.NetStandard.Core.dll Syntax public class DefaultDataErrorInfos : DataErrorInfosBase Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.ViewModels.ViewModelBase.html": {
    "href": "Teronis.DotNet/Teronis.ViewModels.ViewModelBase.html",
    "title": "Class ViewModelBase | Documentations",
    "keywords": "Class ViewModelBase Inheritance System.Object ViewModelBase Implements INotifyPropertyChanged IHaveRegisteredParents IHaveParents Namespace : Teronis.ViewModels Assembly : Teronis.NetStandard.Core.dll Syntax public abstract class ViewModelBase : INotifyPropertyChanging, INotifyPropertyChanged, IHaveRegisteredParents, IHaveParents Constructors | Improve this Doc View Source ViewModelBase() Declaration public ViewModelBase() Methods | Improve this Doc View Source ChangeProperty(Action, Expression<Func<Nullable<Object>>>) Declaration protected void ChangeProperty(Action action, Expression<Func<object?>> anonymousProperties) Parameters Type Name Description Action action Expression < Func < System.Nullable < System.Object >>> anonymousProperties | Improve this Doc View Source ChangeProperty(Action, String[]) Declaration protected virtual void ChangeProperty(Action action, params string[] properties) Parameters Type Name Description Action action System.String [] properties | Improve this Doc View Source CreateParentsCollector() Declaration public ParentsCollector CreateParentsCollector() Returns Type Description ParentsCollector | Improve this Doc View Source InvokePropertyChanged(Nullable<Object>, PropertyChangedEventArgs) Initiates a property changed event invocation. Declaration protected void InvokePropertyChanged(object? sender, PropertyChangedEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender The sender to be sent. PropertyChangedEventArgs args The argument to be sent. | Improve this Doc View Source InvokePropertyChanging(Nullable<Object>, PropertyChangingEventArgs) Initiates a property changing event invocation. Declaration protected void InvokePropertyChanging(object? sender, PropertyChangingEventArgs args) Parameters Type Name Description System.Nullable < System.Object > sender The sender to be sent. PropertyChangingEventArgs args The argument to be sent. | Improve this Doc View Source OnPropertyChanged(Nullable<String>) Declaration protected virtual void OnPropertyChanged(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName | Improve this Doc View Source OnPropertyChanging(Nullable<String>) Declaration protected virtual void OnPropertyChanging(string? propertyName = null) Parameters Type Name Description System.Nullable < System.String > propertyName | Improve this Doc View Source RegisterParent(Object, ParentsRequestedEventHandler) Declaration public void RegisterParent(object caller, ParentsRequestedEventHandler handler) Parameters Type Name Description System.Object caller ParentsRequestedEventHandler handler | Improve this Doc View Source UnregisterParent(Object) Declaration public void UnregisterParent(object caller) Parameters Type Name Description System.Object caller Events | Improve this Doc View Source ParentsRequested Declaration public event ParentsRequestedEventHandler ParentsRequested Event Type Type Description ParentsRequestedEventHandler | Improve this Doc View Source PropertyChanged Declaration public event PropertyChangedEventHandler? PropertyChanged Event Type Type Description System.Nullable < PropertyChangedEventHandler > | Improve this Doc View Source PropertyChanging Declaration public event PropertyChangingEventHandler? PropertyChanging Event Type Type Description System.Nullable < PropertyChangingEventHandler > Explicit Interface Implementations | Improve this Doc View Source IHaveRegisteredParents.RegisterParent(ParentsRequestedEventHandler) Declaration void IHaveRegisteredParents.RegisterParent(ParentsRequestedEventHandler handler) Parameters Type Name Description ParentsRequestedEventHandler handler | Improve this Doc View Source IHaveRegisteredParents.UnregisterParent(ParentsRequestedEventHandler) Declaration void IHaveRegisteredParents.UnregisterParent(ParentsRequestedEventHandler handler) Parameters Type Name Description ParentsRequestedEventHandler handler Implements INotifyPropertyChanged IHaveRegisteredParents IHaveParents Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.BitmapCompressionMode.html": {
    "href": "Teronis.DotNet/Teronis.Windows.BitmapCompressionMode.html",
    "title": "Enum BitmapCompressionMode | Documentations",
    "keywords": "Enum BitmapCompressionMode Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum BitmapCompressionMode : uint Fields Name Description BI_BITFIELDS BI_CMYK BI_CMYKRLE4 BI_CMYKRLE8 BI_JPEG BI_PNG BI_RGB BI_RLE4 BI_RLE8"
  },
  "Teronis.DotNet/Teronis.Windows.BITMAPINFO.html": {
    "href": "Teronis.DotNet/Teronis.Windows.BITMAPINFO.html",
    "title": "Struct BITMAPINFO | Documentations",
    "keywords": "Struct BITMAPINFO Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct BITMAPINFO Fields | Improve this Doc View Source bmiColors Declaration public RGBQUAD bmiColors Field Value Type Description RGBQUAD | Improve this Doc View Source bmiHeader Declaration public BITMAPINFOHEADER bmiHeader Field Value Type Description BITMAPINFOHEADER"
  },
  "Teronis.DotNet/Teronis.Windows.BITMAPINFOHEADER.html": {
    "href": "Teronis.DotNet/Teronis.Windows.BITMAPINFOHEADER.html",
    "title": "Struct BITMAPINFOHEADER | Documentations",
    "keywords": "Struct BITMAPINFOHEADER Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct BITMAPINFOHEADER Fields | Improve this Doc View Source biBitCount Declaration public ushort biBitCount Field Value Type Description System.UInt16 | Improve this Doc View Source biClrImportant Declaration public uint biClrImportant Field Value Type Description System.UInt32 | Improve this Doc View Source biClrUsed Declaration public uint biClrUsed Field Value Type Description System.UInt32 | Improve this Doc View Source biCompression Declaration public BitmapCompressionMode biCompression Field Value Type Description BitmapCompressionMode | Improve this Doc View Source biHeight Declaration public int biHeight Field Value Type Description System.Int32 | Improve this Doc View Source biPlanes Declaration public ushort biPlanes Field Value Type Description System.UInt16 | Improve this Doc View Source biSize Declaration public uint biSize Field Value Type Description System.UInt32 | Improve this Doc View Source biSizeImage Declaration public uint biSizeImage Field Value Type Description System.UInt32 | Improve this Doc View Source biWidth Declaration public int biWidth Field Value Type Description System.Int32 | Improve this Doc View Source biXPelsPerMeter Declaration public int biXPelsPerMeter Field Value Type Description System.Int32 | Improve this Doc View Source biYPelsPerMeter Declaration public int biYPelsPerMeter Field Value Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Windows.CompositionAction.html": {
    "href": "Teronis.DotNet/Teronis.Windows.CompositionAction.html",
    "title": "Enum CompositionAction | Documentations",
    "keywords": "Enum CompositionAction Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum CompositionAction : uint Fields Name Description DWM_EC_DISABLECOMPOSITION To enable DWM composition DWM_EC_ENABLECOMPOSITION To disable composition."
  },
  "Teronis.DotNet/Teronis.Windows.DeviceCap.html": {
    "href": "Teronis.DotNet/Teronis.Windows.DeviceCap.html",
    "title": "Enum DeviceCap | Documentations",
    "keywords": "Enum DeviceCap Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum DeviceCap : int Fields Name Description ASPECTX Length of the X leg ASPECTXY Length of the hypotenuse ASPECTY Length of the Y leg BITSPIXEL Number of bits per pixel BLTALIGNMENT Preferred blt alignment CLIPCAPS Clipping capabilities COLORRES Actual color resolution CURVECAPS Curve capabilities DESKTOPHORZRES Horizontal width of entire desktop in pixels DESKTOPVERTRES Vertical height of entire desktop in pixels DRIVERVERSION Device driver version HORZRES Horizontal width in pixels HORZSIZE Horizontal size in millimeters LINECAPS Line capabilities LOGPIXELSX Logical pixels inch in X LOGPIXELSY Logical pixels inch in Y NUMBRUSHES Number of brushes the device has NUMCOLORS Number of colors the device supports NUMFONTS Number of fonts the device has NUMMARKERS Number of markers the device has NUMPENS Number of pens the device has NUMRESERVED Number of reserved entries in palette PDEVICESIZE Size required for device descriptor PHYSICALHEIGHT Physical Height in device units PHYSICALOFFSETX Physical Printable Area x margin PHYSICALOFFSETY Physical Printable Area y margin PHYSICALWIDTH Physical Width in device units PLANES Number of planes POLYGONALCAPS Polygonal capabilities RASTERCAPS Bitblt capabilities SCALINGFACTORX Scaling factor x SCALINGFACTORY Scaling factor y SHADEBLENDCAPS Shading and Blending caps SIZEPALETTE Number of entries in physical palette TECHNOLOGY Device classification TEXTCAPS Text capabilities VERTRES Vertical height in pixels VERTSIZE Vertical size in millimeters VREFRESH Current vertical refresh rate of the display device (for displays only) in Hz"
  },
  "Teronis.DotNet/Teronis.Windows.DIB_Color_Mode.html": {
    "href": "Teronis.DotNet/Teronis.Windows.DIB_Color_Mode.html",
    "title": "Enum DIB_Color_Mode | Documentations",
    "keywords": "Enum DIB_Color_Mode The format of the bmiColors member of the BITMAPINFO structure. It must be one of the following values. Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum DIB_Color_Mode : uint Fields Name Description DIB_PAL_COLORS The color table should consist of literal red, green, blue (RGB) values. DIB_RGB_COLORS The color table should consist of an array of 16-bit indexes into the current logical palette."
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.Area.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.Area.html",
    "title": "Class Area | Documentations",
    "keywords": "Class Area Inheritance System.Object Area Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public class Area : object Fields | Improve this Doc View Source cancelScanIteration Declaration public ECancelScanIteration cancelScanIteration Field Value Type Description ECancelScanIteration | Improve this Doc View Source nEllipse Declaration public bool nEllipse Field Value Type Description System.Boolean | Improve this Doc View Source nHeight Declaration public int? nHeight Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source nPolygon Declaration public IList<Point>? nPolygon Field Value Type Description System.Nullable < IList < Point >> | Improve this Doc View Source nRect Declaration public Rectangle? nRect Field Value Type Description System.Nullable < Rectangle > | Improve this Doc View Source nWidth Declaration public int? nWidth Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source nX Declaration public int? nX Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source nXWidth Declaration public int? nXWidth Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source nY Declaration public int? nY Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source nYHeight Declaration public int? nYHeight Field Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source precalculated Declaration public bool precalculated Field Value Type Description System.Boolean Methods | Improve this Doc View Source CreateArea(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Rectangle>, Boolean, Nullable<IList<Point>>) Declaration public static Area CreateArea(int? nX, int? nY, int? nWidth, int? nHeight, int? nYHeight, int? nXWidth, Rectangle? nRect, bool nEllipse, IList<Point>? nPolygon) Parameters Type Name Description System.Nullable < System.Int32 > nX System.Nullable < System.Int32 > nY System.Nullable < System.Int32 > nWidth System.Nullable < System.Int32 > nHeight System.Nullable < System.Int32 > nYHeight System.Nullable < System.Int32 > nXWidth System.Nullable < Rectangle > nRect System.Boolean nEllipse System.Nullable < IList < Point >> nPolygon Returns Type Description Area | Improve this Doc View Source VerifyValues(ISnapshot) Declaration public void VerifyValues(ISnapshot snapshot) Parameters Type Name Description ISnapshot snapshot | Improve this Doc View Source VerifyValues(ISnapshot, ref Nullable<Int32>, ref Nullable<Int32>, ref Nullable<Int32>, ref Nullable<Int32>, Nullable<RectangleF>, Boolean, Nullable<IList<Point>>, ECancelScanIteration, ref Boolean, ref Nullable<Int32>, ref Nullable<Int32>) Declaration public static void VerifyValues(ISnapshot snapshot, ref int? nX, ref int? nY, ref int? nWidth, ref int? nHeight, RectangleF? nRect, bool nEllipse, IList<Point>? nPolygon, ECancelScanIteration cancelScanIteration, ref bool precalculated, ref int? nYHeight, ref int? nXWidth) Parameters Type Name Description ISnapshot snapshot System.Nullable < System.Int32 > nX System.Nullable < System.Int32 > nY System.Nullable < System.Int32 > nWidth System.Nullable < System.Int32 > nHeight System.Nullable < RectangleF > nRect System.Boolean nEllipse System.Nullable < IList < Point >> nPolygon ECancelScanIteration cancelScanIteration System.Boolean precalculated System.Nullable < System.Int32 > nYHeight System.Nullable < System.Int32 > nXWidth Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.BitmapData.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.BitmapData.html",
    "title": "Class BitmapData | Documentations",
    "keywords": "Class BitmapData Inheritance System.Object BitmapData Implements IBitmapData IDisposable Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public class BitmapData : object, IBitmapData, IDisposable Constructors | Improve this Doc View Source BitmapData(Bitmap) Declaration public BitmapData(Bitmap bmap) Parameters Type Name Description Bitmap bmap | Improve this Doc View Source BitmapData(Bitmap, out BitmapShot) Declaration public BitmapData(Bitmap bmap, out BitmapShot bmapShot) Parameters Type Name Description Bitmap bmap BitmapShot bmapShot Properties | Improve this Doc View Source Rectangle Declaration public Rectangle Rectangle { get; } Property Value Type Description Rectangle | Improve this Doc View Source ScreenData Declaration public byte *ScreenData { get; } Property Value Type Description System.Byte * | Improve this Doc View Source Stride Declaration public int Stride { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IBitmapData IDisposable Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.DelegateBuildBitmapAny.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.DelegateBuildBitmapAny.html",
    "title": "Delegate BitmapShot.DelegateBuildBitmapAny | Documentations",
    "keywords": "Delegate BitmapShot.DelegateBuildBitmapAny Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public delegate Bitmap DelegateBuildBitmapAny(int? nX, int? nY, int? nWidth, int? nHeight, int? nYHeight, int? nXWidth, Rectangle? nRect, bool nCircle, IList<Point> nPolygon, List<ITwoDimensionalPattern> twoDPatterns, int? maxPixelAmount, bool crop, IEnumerable<RGBColor> colors, bool negateColorResult, IEnumerable<ColorTranslation> translateColorList, IEnumerable<Area> excludedAreas, bool precalculated, bool debug, ECancelScanIteration cancelScanIteration); Parameters Type Name Description System.Nullable < System.Int32 > nX System.Nullable < System.Int32 > nY System.Nullable < System.Int32 > nWidth System.Nullable < System.Int32 > nHeight System.Nullable < System.Int32 > nYHeight System.Nullable < System.Int32 > nXWidth System.Nullable < Rectangle > nRect System.Boolean nCircle IList < Point > nPolygon List < ITwoDimensionalPattern > twoDPatterns System.Nullable < System.Int32 > maxPixelAmount System.Boolean crop IEnumerable < RGBColor > colors System.Boolean negateColorResult IEnumerable < ColorTranslation > translateColorList IEnumerable < Area > excludedAreas System.Boolean precalculated System.Boolean debug ECancelScanIteration cancelScanIteration Returns Type Description Bitmap Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.DelegateIteratePixelsAny.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.DelegateIteratePixelsAny.html",
    "title": "Delegate BitmapShot.DelegateIteratePixelsAny | Documentations",
    "keywords": "Delegate BitmapShot.DelegateIteratePixelsAny Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public delegate IEnumerable<Pixel> DelegateIteratePixelsAny(int? nX, int? nY, int? nWidth, int? nHeight, int? nYHeight, int? nXWidth, Rectangle? nRect, bool nCircle, IList<Point> nPolygon, List<ITwoDimensionalPattern> twoDPatterns, int? maxPixelAmount, bool crop, IEnumerable<RGBColor> colors, bool negateColorResult, IEnumerable<ColorTranslation> translateColor, IEnumerable<Area> excludedAreas, bool precalculated, bool debug, ECancelScanIteration cancelScanIteration); Parameters Type Name Description System.Nullable < System.Int32 > nX System.Nullable < System.Int32 > nY System.Nullable < System.Int32 > nWidth System.Nullable < System.Int32 > nHeight System.Nullable < System.Int32 > nYHeight System.Nullable < System.Int32 > nXWidth System.Nullable < Rectangle > nRect System.Boolean nCircle IList < Point > nPolygon List < ITwoDimensionalPattern > twoDPatterns System.Nullable < System.Int32 > maxPixelAmount System.Boolean crop IEnumerable < RGBColor > colors System.Boolean negateColorResult IEnumerable < ColorTranslation > translateColor IEnumerable < Area > excludedAreas System.Boolean precalculated System.Boolean debug ECancelScanIteration cancelScanIteration Returns Type Description IEnumerable < Pixel > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.BitmapShot.html",
    "title": "Class BitmapShot | Documentations",
    "keywords": "Class BitmapShot Inheritance System.Object BitmapShot Implements ISnapshot Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public class BitmapShot : object, ISnapshot Constructors | Improve this Doc View Source BitmapShot(IBitmapData) Declaration public BitmapShot(IBitmapData bitmapData) Parameters Type Name Description IBitmapData bitmapData Properties | Improve this Doc View Source BitmapData Declaration public IBitmapData BitmapData { get; } Property Value Type Description IBitmapData Methods | Improve this Doc View Source BuildBitmapAny(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Rectangle>, Boolean, IList<Point>, List<ITwoDimensionalPattern>, Nullable<Int32>, Boolean, IEnumerable<RGBColor>, Boolean, IEnumerable<ColorTranslation>, IEnumerable<Area>, Boolean, Boolean, ECancelScanIteration) Declaration public Bitmap BuildBitmapAny(int? nX, int? nY, int? nWidth, int? nHeight, int? nYHeight, int? nXWidth, Rectangle? nRect, bool nEllipse, IList<Point> nPolygon, List<ITwoDimensionalPattern> twoDPatterns, int? maxPixelAmount, bool crop, IEnumerable<RGBColor> colors, bool negateColorResult, IEnumerable<ColorTranslation> translateColorList, IEnumerable<Area> excludedAreas, bool precalculated, bool debug, ECancelScanIteration cancelScanIteration) Parameters Type Name Description System.Nullable < System.Int32 > nX System.Nullable < System.Int32 > nY System.Nullable < System.Int32 > nWidth System.Nullable < System.Int32 > nHeight System.Nullable < System.Int32 > nYHeight System.Nullable < System.Int32 > nXWidth System.Nullable < Rectangle > nRect System.Boolean nEllipse IList < Point > nPolygon List < ITwoDimensionalPattern > twoDPatterns System.Nullable < System.Int32 > maxPixelAmount System.Boolean crop IEnumerable < RGBColor > colors System.Boolean negateColorResult IEnumerable < ColorTranslation > translateColorList IEnumerable < Area > excludedAreas System.Boolean precalculated System.Boolean debug ECancelScanIteration cancelScanIteration Returns Type Description Bitmap | Improve this Doc View Source BuildBitmapOut(Func<BitmapShot.DelegateBuildBitmapAny, Bitmap>) Only for one liner like new TRefSnapshot().Scan().BuildBitmapOut(...) It DOES dispose the snapshot. Declaration public Bitmap BuildBitmapOut(Func<BitmapShot.DelegateBuildBitmapAny, Bitmap> buildBitmapOut) Parameters Type Name Description Func < BitmapShot.DelegateBuildBitmapAny , Bitmap > buildBitmapOut (callback, snapshot) => {} Returns Type Description Bitmap | Improve this Doc View Source BuildBitmapOut(Func<BitmapShot.DelegateBuildBitmapAny, BitmapShot, Bitmap>) Only for one liner like new TRefSnapshot().Scan().BuildBitmapOut(...) It DOES dispose the snapshot. Declaration public Bitmap BuildBitmapOut(Func<BitmapShot.DelegateBuildBitmapAny, BitmapShot, Bitmap> buildBitmapOut) Parameters Type Name Description Func < BitmapShot.DelegateBuildBitmapAny , BitmapShot , Bitmap > buildBitmapOut (callback, snapshot) => {} Returns Type Description Bitmap | Improve this Doc View Source IteratePixelsAny(Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Rectangle>, Boolean, IList<Point>, List<ITwoDimensionalPattern>, Nullable<Int32>, Boolean, IEnumerable<RGBColor>, Boolean, IEnumerable<ColorTranslation>, IEnumerable<Area>, Boolean, Boolean, ECancelScanIteration) Any passed points here ( nX , nY , ...) must be passed from the top left corner of the window that has been passed by handle ( ) previously. Declaration public IEnumerable<Pixel> IteratePixelsAny(int? nX, int? nY, int? nWidth, int? nHeight, int? nYHeight, int? nXWidth, Rectangle? nRect, bool nEllipse, IList<Point> nPolygon, List<ITwoDimensionalPattern> twoDPatterns, int? maxPixelAmount, bool crop, IEnumerable<RGBColor> colors, bool negateColorResult, IEnumerable<ColorTranslation> translateColorList, IEnumerable<Area> excludedAreas, bool precalculated, bool debug, ECancelScanIteration cancelScanIteration) Parameters Type Name Description System.Nullable < System.Int32 > nX Fill one or more of nX , nY , nWidth and nHeight OR ONLY nRect , nEllipse or nPolygon . System.Nullable < System.Int32 > nY Fill one or more of nX , nY , nWidth and nHeight OR ONLY nRect , nEllipse or nPolygon . System.Nullable < System.Int32 > nWidth Fill one or more of nX , nY , nWidth and nHeight OR ONLY nRect , nEllipse or nPolygon . System.Nullable < System.Int32 > nHeight Fill one or more of nX , nY , nWidth and nHeight OR ONLY nRect , nEllipse or nPolygon . System.Nullable < System.Int32 > nYHeight DO NOT SET THIS. It is set by sub call. It represents the vertical maximum (Y+Height). System.Nullable < System.Int32 > nXWidth Do NOT SET THIS. It is set by sub call. It represents the horizontal maximum (X+Width) System.Nullable < Rectangle > nRect Fill only nRect , nEllipse or nPolygon OR one or more of nX , nY , nWidth and nHeight System.Boolean nEllipse Fill only nRect , nEllipse or nPolygon OR one or more of nX , nY , nWidth and nHeight IList < Point > nPolygon Fill only nRect , nEllipse or nPolygon OR one or more of nX , nY , nWidth and nHeight List < ITwoDimensionalPattern > twoDPatterns You can search for pattern. Each pixel iterates this list. System.Nullable < System.Int32 > maxPixelAmount System.Boolean crop Positions are changed absolute to nX, nY. When found pixel is at x=20 and nX=20 then x becomes x=0 IEnumerable < RGBColor > colors You are able to search for colors as much as you want. System.Boolean negateColorResult Those pixel colors that has been found are not found and vice versa. IEnumerable < ColorTranslation > translateColorList This is kind of a post production. After a pixel color is same as one of the colors list, then it will be 'translated'. It won't get sorted out - post production. IEnumerable < Area > excludedAreas Within your defined area, you can exclude areas. System.Boolean precalculated DO NOT SET THIS. It is set by sub call. Passed values will be get proved and some values, such as nXWidth and nYHeight, get calculated. System.Boolean debug Not implemented right now. ECancelScanIteration cancelScanIteration When set true and you ususally would get an error because you passed to big area you are getting an IndexOutOfRange excpetion you can catch. Otherwise the error is getting ignored and you receive zero pixels. Returns Type Description IEnumerable < Pixel > Returns an IEnumerable you can loop. The items are returned by yield. | Improve this Doc View Source IteratePixelsOut(Func<BitmapShot.DelegateIteratePixelsAny, IEnumerable<Pixel>>) Only for one liner like new TRefSnapshot().Scan().IteratePixelsOut(...) It DOES dispose the snapshot. Declaration public List<Pixel> IteratePixelsOut(Func<BitmapShot.DelegateIteratePixelsAny, IEnumerable<Pixel>> iteratePixelsOut) Parameters Type Name Description Func < BitmapShot.DelegateIteratePixelsAny , IEnumerable < Pixel >> iteratePixelsOut Returns Type Description List < Pixel > | Improve this Doc View Source IteratePixelsOut(Func<BitmapShot.DelegateIteratePixelsAny, BitmapShot, IEnumerable<Pixel>>) Only for one liner like new TRefSnapshot().Scan().IteratePixelsOut(...) It DOES dispose the snapshot. Declaration public List<Pixel> IteratePixelsOut(Func<BitmapShot.DelegateIteratePixelsAny, BitmapShot, IEnumerable<Pixel>> iteratePixelsOut) Parameters Type Name Description Func < BitmapShot.DelegateIteratePixelsAny , BitmapShot , IEnumerable < Pixel >> iteratePixelsOut Returns Type Description List < Pixel > | Improve this Doc View Source SetPixel(Int32, Int32, Color) Declaration public void SetPixel(int x, int y, Color clr) Parameters Type Name Description System.Int32 x System.Int32 y Color clr Implements ISnapshot Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.ColorTranslation.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.ColorTranslation.html",
    "title": "Class ColorTranslation | Documentations",
    "keywords": "Class ColorTranslation Inheritance System.Object ColorTranslation Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public class ColorTranslation : object Constructors | Improve this Doc View Source ColorTranslation() Declaration public ColorTranslation() | Improve this Doc View Source ColorTranslation(RGBColor, RGBColor) Declaration public ColorTranslation(RGBColor fromColor, RGBColor toColor) Parameters Type Name Description RGBColor fromColor RGBColor toColor Fields | Improve this Doc View Source FromColor Declaration public RGBColor FromColor Field Value Type Description RGBColor | Improve this Doc View Source ToColor Declaration public RGBColor ToColor Field Value Type Description RGBColor Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.ECancelScanIteration.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.ECancelScanIteration.html",
    "title": "Enum ECancelScanIteration | Documentations",
    "keywords": "Enum ECancelScanIteration Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public enum ECancelScanIteration : int Fields Name Description None OutOfIndex"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.EPointType.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.EPointType.html",
    "title": "Enum EPointType | Documentations",
    "keywords": "Enum EPointType Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public enum EPointType : int Fields Name Description Client Relative Screen"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.html",
    "title": "Namespace Teronis.Windows.Drawing | Documentations",
    "keywords": "Namespace Teronis.Windows.Drawing Classes Area BitmapData BitmapShot ColorTranslation Pixel Utilities Structs Position RGBColor Interfaces IBitmapData ISnapshot ITwoDimensionalPattern Enums ECancelScanIteration EPointType Delegates BitmapShot.DelegateBuildBitmapAny BitmapShot.DelegateIteratePixelsAny"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.IBitmapData.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.IBitmapData.html",
    "title": "Interface IBitmapData | Documentations",
    "keywords": "Interface IBitmapData Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public interface IBitmapData : IDisposable Properties | Improve this Doc View Source Rectangle Declaration Rectangle Rectangle { get; } Property Value Type Description Rectangle | Improve this Doc View Source ScreenData Declaration byte *ScreenData { get; } Property Value Type Description System.Byte * | Improve this Doc View Source Stride Declaration int Stride { get; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.ISnapshot.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.ISnapshot.html",
    "title": "Interface ISnapshot | Documentations",
    "keywords": "Interface ISnapshot Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public interface ISnapshot Properties | Improve this Doc View Source BitmapData Declaration IBitmapData BitmapData { get; } Property Value Type Description IBitmapData Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.ITwoDimensionalPattern.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.ITwoDimensionalPattern.html",
    "title": "Interface ITwoDimensionalPattern | Documentations",
    "keywords": "Interface ITwoDimensionalPattern Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public interface ITwoDimensionalPattern Properties | Improve this Doc View Source ColorSupport Declaration bool ColorSupport { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetColor(out RGBColor) Declaration void GetColor(out RGBColor color) Parameters Type Name Description RGBColor color | Improve this Doc View Source GetPosition(out Position) Declaration void GetPosition(out Position position) Parameters Type Name Description Position position Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.Pixel.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.Pixel.html",
    "title": "Class Pixel | Documentations",
    "keywords": "Class Pixel Inheritance System.Object Pixel Implements ITwoDimensionalPattern Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public class Pixel : object, ITwoDimensionalPattern Constructors | Improve this Doc View Source Pixel(RGBColor, Position) Declaration public Pixel(RGBColor color, Position position) Parameters Type Name Description RGBColor color Position position Fields | Improve this Doc View Source Color Declaration public RGBColor Color Field Value Type Description RGBColor | Improve this Doc View Source Position Declaration public Position Position Field Value Type Description Position Operators | Improve this Doc View Source Implicit(Pixel to Position) Declaration public static implicit operator Position(Pixel clrPos) Parameters Type Name Description Pixel clrPos Returns Type Description Position | Improve this Doc View Source Implicit(Pixel to RGBColor) Declaration public static implicit operator RGBColor(Pixel clrPos) Parameters Type Name Description Pixel clrPos Returns Type Description RGBColor Explicit Interface Implementations | Improve this Doc View Source ITwoDimensionalPattern.ColorSupport Declaration bool ITwoDimensionalPattern.ColorSupport { get; } Returns Type Description System.Boolean | Improve this Doc View Source ITwoDimensionalPattern.GetColor(out RGBColor) Declaration void ITwoDimensionalPattern.GetColor(out RGBColor color) Parameters Type Name Description RGBColor color | Improve this Doc View Source ITwoDimensionalPattern.GetPosition(out Position) Declaration void ITwoDimensionalPattern.GetPosition(out Position position) Parameters Type Name Description Position position Implements ITwoDimensionalPattern Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.Position.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.Position.html",
    "title": "Struct Position | Documentations",
    "keywords": "Struct Position Implements ITwoDimensionalPattern Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public struct Position : ITwoDimensionalPattern Constructors | Improve this Doc View Source Position(IntPtr, EPointType, Nullable<Point>) Declaration public Position(IntPtr hWnd, EPointType pointType, Point? point = null) Parameters Type Name Description IntPtr hWnd EPointType pointType System.Nullable < Point > point | Improve this Doc View Source Position(Point) Declaration public Position(Point point) Parameters Type Name Description Point point | Improve this Doc View Source Position(Int32, Int32) Declaration public Position(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y Fields | Improve this Doc View Source Point Declaration public Point Point Field Value Type Description Point Properties | Improve this Doc View Source PointType Declaration public EPointType PointType { get; } Property Value Type Description EPointType | Improve this Doc View Source X Declaration public int X { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetClientPoint() Declaration public Point GetClientPoint() Returns Type Description Point | Improve this Doc View Source GetClientPosition() Declaration public Position GetClientPosition() Returns Type Description Position | Improve this Doc View Source GetScreenPoint() Declaration public Point GetScreenPoint() Returns Type Description Point | Improve this Doc View Source GetScreenPosition() Declaration public Position GetScreenPosition() Returns Type Description Position Operators | Improve this Doc View Source Implicit(Position to Point) Declaration public static implicit operator Point(Position position) Parameters Type Name Description Position position Returns Type Description Point Explicit Interface Implementations | Improve this Doc View Source ITwoDimensionalPattern.ColorSupport Declaration bool ITwoDimensionalPattern.ColorSupport { get; } Returns Type Description System.Boolean | Improve this Doc View Source ITwoDimensionalPattern.GetColor(out RGBColor) Declaration void ITwoDimensionalPattern.GetColor(out RGBColor color) Parameters Type Name Description RGBColor color | Improve this Doc View Source ITwoDimensionalPattern.GetPosition(out Position) Declaration void ITwoDimensionalPattern.GetPosition(out Position position) Parameters Type Name Description Position position Implements ITwoDimensionalPattern"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.RGBColor.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.RGBColor.html",
    "title": "Struct RGBColor | Documentations",
    "keywords": "Struct RGBColor Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public struct RGBColor Constructors | Improve this Doc View Source RGBColor(Byte) b=g=r Declaration public RGBColor(byte bgr) Parameters Type Name Description System.Byte bgr | Improve this Doc View Source RGBColor(Byte, Byte, Byte) Declaration public RGBColor(byte r, byte g, byte b) Parameters Type Name Description System.Byte r System.Byte g System.Byte b | Improve this Doc View Source RGBColor(Byte[]) bgr-order Declaration public RGBColor(byte[] pixelArray) Parameters Type Name Description System.Byte [] pixelArray | Improve this Doc View Source RGBColor(UInt32) Declaration public RGBColor(uint bgr) Parameters Type Name Description System.UInt32 bgr Fields | Improve this Doc View Source Empty Declaration public static readonly RGBColor Empty Field Value Type Description RGBColor Properties | Improve this Doc View Source B Declaration public byte B { get; } Property Value Type Description System.Byte | Improve this Doc View Source BGR 0x00bbggrr Declaration public uint BGR { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source G Declaration public byte G { get; } Property Value Type Description System.Byte | Improve this Doc View Source PixelArray bgr-order Declaration public byte[] PixelArray { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source R Declaration public byte R { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source AsEnumerable() Declaration public IEnumerable<RGBColor> AsEnumerable() Returns Type Description IEnumerable < RGBColor > | Improve this Doc View Source Compare(Byte, Byte, Byte) Declaration public bool Compare(byte r, byte g, byte b) Parameters Type Name Description System.Byte r System.Byte g System.Byte b Returns Type Description System.Boolean Operators | Improve this Doc View Source Implicit(RGBColor to Color) Declaration public static implicit operator Color(RGBColor color) Parameters Type Name Description RGBColor color Returns Type Description Color"
  },
  "Teronis.DotNet/Teronis.Windows.Drawing.Utilities.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Drawing.Utilities.html",
    "title": "Class Utilities | Documentations",
    "keywords": "Class Utilities Inheritance System.Object Utilities Namespace : Teronis.Windows.Drawing Assembly : Teronis.Windows.Core.dll Syntax public static class Utilities : object Methods | Improve this Doc View Source CaptureWindow(IntPtr) Declaration public static Bitmap CaptureWindow(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description Bitmap"
  },
  "Teronis.DotNet/Teronis.Windows.EMouseFlags.html": {
    "href": "Teronis.DotNet/Teronis.Windows.EMouseFlags.html",
    "title": "Enum EMouseFlags | Documentations",
    "keywords": "Enum EMouseFlags Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum EMouseFlags : int Fields Name Description LeftClick LeftDown LeftUp MoveAndAbsolute RightClick RightDown RightUp"
  },
  "Teronis.DotNet/Teronis.Windows.EProcessAccessFlags.html": {
    "href": "Teronis.DotNet/Teronis.Windows.EProcessAccessFlags.html",
    "title": "Enum EProcessAccessFlags | Documentations",
    "keywords": "Enum EProcessAccessFlags Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum EProcessAccessFlags : uint Fields Name Description All CreateThread DupHandle QueryInformation SetInformation Synchronize Terminate VMOperation VMRead VMWrite"
  },
  "Teronis.DotNet/Teronis.Windows.EVirtualMemoryProtection.html": {
    "href": "Teronis.DotNet/Teronis.Windows.EVirtualMemoryProtection.html",
    "title": "Enum EVirtualMemoryProtection | Documentations",
    "keywords": "Enum EVirtualMemoryProtection Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum EVirtualMemoryProtection : uint Fields Name Description PAGE_EXECUTE PAGE_EXECUTE_READ PAGE_EXECUTE_READWRITE PAGE_EXECUTE_WRITECOPY PAGE_GUARD PAGE_NOACCESS PAGE_NOCACHE PAGE_READONLY PAGE_READWRITE PAGE_WRITECOPY PROCESS_ALL_ACCESS"
  },
  "Teronis.DotNet/Teronis.Windows.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Extensions.html",
    "title": "Namespace Teronis.Windows.Extensions | Documentations",
    "keywords": "Namespace Teronis.Windows.Extensions Classes IListPointExtensions RectangleExtensions"
  },
  "Teronis.DotNet/Teronis.Windows.Extensions.IListPointExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Extensions.IListPointExtensions.html",
    "title": "Class IListPointExtensions | Documentations",
    "keywords": "Class IListPointExtensions Inheritance System.Object IListPointExtensions Namespace : Teronis.Windows.Extensions Assembly : Teronis.Windows.Core.dll Syntax public static class IListPointExtensions : object Methods | Improve this Doc View Source GetBounds(IList<Point>) Declaration public static Rectangle GetBounds(this IList<Point> points) Parameters Type Name Description IList < Point > points Returns Type Description Rectangle"
  },
  "Teronis.DotNet/Teronis.Windows.Extensions.RectangleExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Extensions.RectangleExtensions.html",
    "title": "Class RectangleExtensions | Documentations",
    "keywords": "Class RectangleExtensions Inheritance System.Object RectangleExtensions Namespace : Teronis.Windows.Extensions Assembly : Teronis.Windows.Core.dll Syntax public static class RectangleExtensions : object Methods | Improve this Doc View Source GetRectangle(Rectangle) Declaration public static RECT GetRectangle(this Rectangle rectangle) Parameters Type Name Description Rectangle rectangle Returns Type Description RECT"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Extensions.ControlCollectionExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Extensions.ControlCollectionExtensions.html",
    "title": "Class ControlCollectionExtensions | Documentations",
    "keywords": "Class ControlCollectionExtensions Inheritance System.Object ControlCollectionExtensions Namespace : Teronis.Windows.Forms.Extensions Assembly : Teronis.Windows.Forms.dll Syntax public static class ControlCollectionExtensions : object Methods | Improve this Doc View Source Shift<T>(Control.ControlCollection, T, T, Func<T, Boolean>, Nullable<Action<Int32, Int32>>, Nullable<Action<T, T>>) Declaration public static void Shift<T>(this Control.ControlCollection source, T from, T to, Func<T, bool> isItemMovable, Action<int, int>? fromIndexToIndexAction = null, Action<T, T>? fromToAction = null) where T : Control Parameters Type Name Description Control.ControlCollection source T from T to Func <T, System.Boolean > isItemMovable System.Nullable < Action < System.Int32 , System.Int32 >> fromIndexToIndexAction System.Nullable < Action <T, T>> fromToAction Type Parameters Name Description T | Improve this Doc View Source Shift<T>(Control.ControlCollection, Int32, Int32, Func<T, Boolean>, Nullable<Action<Int32, Int32>>, Nullable<Action<T, T>>) Declaration public static void Shift<T>(this Control.ControlCollection source, int fromIndex, int toIndex, Func<T, bool> isItemMovable, Action<int, int>? fromIndex_ToIndexCallback = null, Action<T, T>? from_ToCallback = null) where T : Control Parameters Type Name Description Control.ControlCollection source System.Int32 fromIndex System.Int32 toIndex Func <T, System.Boolean > isItemMovable System.Nullable < Action < System.Int32 , System.Int32 >> fromIndex_ToIndexCallback System.Nullable < Action <T, T>> from_ToCallback Type Parameters Name Description T | Improve this Doc View Source Swap(Control.ControlCollection, Int32, Int32) Declaration public static bool Swap(this Control.ControlCollection source, int fromIndex, int toIndex) Parameters Type Name Description Control.ControlCollection source System.Int32 fromIndex System.Int32 toIndex Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Extensions.ControlExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Extensions.ControlExtensions.html",
    "title": "Class ControlExtensions | Documentations",
    "keywords": "Class ControlExtensions Inheritance System.Object ControlExtensions Namespace : Teronis.Windows.Forms.Extensions Assembly : Teronis.Windows.Forms.dll Syntax public static class ControlExtensions : object Methods | Improve this Doc View Source InvokeIfNeeded(Control, Action) Declaration public static void InvokeIfNeeded(this Control control, Action action) Parameters Type Name Description Control control Action action | Improve this Doc View Source Resume(Control) Declaration public static void Resume(this Control control) Parameters Type Name Description Control control | Improve this Doc View Source Suspend(Control) Declaration public static void Suspend(this Control control) Parameters Type Name Description Control control"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Extensions.CursorExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Extensions.CursorExtensions.html",
    "title": "Class CursorExtensions | Documentations",
    "keywords": "Class CursorExtensions Inheritance System.Object CursorExtensions Namespace : Teronis.Windows.Forms.Extensions Assembly : Teronis.Windows.Forms.dll Syntax public static class CursorExtensions : object Methods | Improve this Doc View Source GetCursorRectangle(Cursor) Declaration public static Rectangle GetCursorRectangle(this Cursor cursor) Parameters Type Name Description Cursor cursor Returns Type Description Rectangle"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Extensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Extensions.html",
    "title": "Namespace Teronis.Windows.Forms.Extensions | Documentations",
    "keywords": "Namespace Teronis.Windows.Forms.Extensions Classes ControlCollectionExtensions ControlExtensions CursorExtensions PaddingExtensions"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Extensions.PaddingExtensions.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Extensions.PaddingExtensions.html",
    "title": "Class PaddingExtensions | Documentations",
    "keywords": "Class PaddingExtensions Inheritance System.Object PaddingExtensions Namespace : Teronis.Windows.Forms.Extensions Assembly : Teronis.Windows.Forms.dll Syntax public static class PaddingExtensions : object Methods | Improve this Doc View Source Add(Padding, Padding) Declaration public static Padding Add(this Padding padding, Padding paddingSubtraction) Parameters Type Name Description Padding padding Padding paddingSubtraction Returns Type Description Padding | Improve this Doc View Source Subtract(Padding, Padding) Declaration public static Padding Subtract(this Padding padding, Padding paddingSubtraction) Parameters Type Name Description Padding padding Padding paddingSubtraction Returns Type Description Padding"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.EHotkeyState.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.EHotkeyState.html",
    "title": "Enum EHotkeyState | Documentations",
    "keywords": "Enum EHotkeyState Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public enum EHotkeyState : int Fields Name Description Down Up"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.EKeyboardModifier.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.EKeyboardModifier.html",
    "title": "Enum EKeyboardModifier | Documentations",
    "keywords": "Enum EKeyboardModifier Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public enum EKeyboardModifier : int Fields Name Description Alt Control None Shift"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.html",
    "title": "Namespace Teronis.Windows.Forms.Hooks | Documentations",
    "keywords": "Namespace Teronis.Windows.Forms.Hooks Classes KeyboardHook Captures global keyboard events KeyboardHookManager MouseHook Captures global mouse events MouseHookManager TChildHotkey TKeyEventArgs TParentHotkey Enums EHotkeyState EKeyboardModifier"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.KeyboardHook.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.KeyboardHook.html",
    "title": "Class KeyboardHook | Documentations",
    "keywords": "Class KeyboardHook Captures global keyboard events Inheritance System.Object GlobalHook KeyboardHook Inherited Members GlobalHook.SetWindowsHookEx(Int32, GlobalHook.HookProc, IntPtr, Int32) GlobalHook.UnhookWindowsHookEx(Int32) GlobalHook.CallNextHookEx(Int32, Int32, Int32, IntPtr) GlobalHook.ToAscii(Int32, Int32, Byte[], Byte[], Int32) GlobalHook.GetKeyboardState(Byte[]) GlobalHook.GetKeyState(Int32) GlobalHook.WH_MOUSE_LL GlobalHook.WH_KEYBOARD_LL GlobalHook.WH_MOUSE GlobalHook.WH_KEYBOARD GlobalHook.WM_MOUSEMOVE GlobalHook.WM_LBUTTONDOWN GlobalHook.WM_RBUTTONDOWN GlobalHook.WM_MBUTTONDOWN GlobalHook.WM_LBUTTONUP GlobalHook.WM_RBUTTONUP GlobalHook.WM_MBUTTONUP GlobalHook.WM_LBUTTONDBLCLK GlobalHook.WM_RBUTTONDBLCLK GlobalHook.WM_MBUTTONDBLCLK GlobalHook.WM_MOUSEWHEEL GlobalHook.WM_KEYDOWN GlobalHook.WM_KEYUP GlobalHook.WM_SYSKEYDOWN GlobalHook.WM_SYSKEYUP GlobalHook.VK_SHIFT GlobalHook.VK_CAPITAL GlobalHook.VK_NUMLOCK GlobalHook.VK_LSHIFT GlobalHook.VK_RSHIFT GlobalHook.VK_LCONTROL GlobalHook.VK_RCONTROL GlobalHook.VK_LALT GlobalHook.VK_RALT GlobalHook.LLKHF_ALTDOWN GlobalHook.executingAssembly GlobalHook._hookType GlobalHook._handleToHook GlobalHook._isStarted GlobalHook._hookCallback GlobalHook.IsStarted GlobalHook.GetMainWindowHandle GlobalHook.Start() GlobalHook.Stop() GlobalHook.HookCallbackProcedure(Int32, Int32, IntPtr) GlobalHook.Application_ApplicationExit(Nullable<Object>, EventArgs) Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class KeyboardHook : GlobalHook Constructors | Improve this Doc View Source KeyboardHook(System.Reflection.Assembly) Declaration public KeyboardHook(System.Reflection.Assembly executingAssembly) Parameters Type Name Description System.Reflection.Assembly executingAssembly Methods | Improve this Doc View Source HookCallbackProcedure(Int32, Int32, IntPtr) Declaration protected override int HookCallbackProcedure(int nCode, int wParam, IntPtr lParam) Parameters Type Name Description System.Int32 nCode System.Int32 wParam IntPtr lParam Returns Type Description System.Int32 Events | Improve this Doc View Source KeyDown Declaration public event KeyEventHandler KeyDown Event Type Type Description KeyEventHandler | Improve this Doc View Source KeyPress Declaration public event KeyPressEventHandler KeyPress Event Type Type Description KeyPressEventHandler | Improve this Doc View Source KeyUp Declaration public event KeyEventHandler KeyUp Event Type Type Description KeyEventHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.KeyboardHookManager.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.KeyboardHookManager.html",
    "title": "Class KeyboardHookManager | Documentations",
    "keywords": "Class KeyboardHookManager Inheritance System.Object KeyboardHookManager Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class KeyboardHookManager : object Constructors | Improve this Doc View Source KeyboardHookManager(System.Reflection.Assembly) Declaration public KeyboardHookManager(System.Reflection.Assembly executingAssembly) Parameters Type Name Description System.Reflection.Assembly executingAssembly Methods | Improve this Doc View Source RegisterHotkey(TKeyEventArgs) Registers a hotkey. To register only a modifier: set it as KeyCode . Declaration public TChildHotkey RegisterHotkey(TKeyEventArgs args) Parameters Type Name Description TKeyEventArgs args Returns Type Description TChildHotkey Hotkey id. You have to unregister it. | Improve this Doc View Source UnregisterHotkey(Int32) Declaration public void UnregisterHotkey(int registeredHotkeyId) Parameters Type Name Description System.Int32 registeredHotkeyId Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.MouseHook.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.MouseHook.html",
    "title": "Class MouseHook | Documentations",
    "keywords": "Class MouseHook Captures global mouse events Inheritance System.Object GlobalHook MouseHook MouseHookManager Inherited Members GlobalHook.SetWindowsHookEx(Int32, GlobalHook.HookProc, IntPtr, Int32) GlobalHook.UnhookWindowsHookEx(Int32) GlobalHook.CallNextHookEx(Int32, Int32, Int32, IntPtr) GlobalHook.ToAscii(Int32, Int32, Byte[], Byte[], Int32) GlobalHook.GetKeyboardState(Byte[]) GlobalHook.GetKeyState(Int32) GlobalHook.WH_MOUSE_LL GlobalHook.WH_KEYBOARD_LL GlobalHook.WH_MOUSE GlobalHook.WH_KEYBOARD GlobalHook.WM_MOUSEMOVE GlobalHook.WM_LBUTTONDOWN GlobalHook.WM_RBUTTONDOWN GlobalHook.WM_MBUTTONDOWN GlobalHook.WM_LBUTTONUP GlobalHook.WM_RBUTTONUP GlobalHook.WM_MBUTTONUP GlobalHook.WM_LBUTTONDBLCLK GlobalHook.WM_RBUTTONDBLCLK GlobalHook.WM_MBUTTONDBLCLK GlobalHook.WM_MOUSEWHEEL GlobalHook.WM_KEYDOWN GlobalHook.WM_KEYUP GlobalHook.WM_SYSKEYDOWN GlobalHook.WM_SYSKEYUP GlobalHook.VK_SHIFT GlobalHook.VK_CAPITAL GlobalHook.VK_NUMLOCK GlobalHook.VK_LSHIFT GlobalHook.VK_RSHIFT GlobalHook.VK_LCONTROL GlobalHook.VK_RCONTROL GlobalHook.VK_LALT GlobalHook.VK_RALT GlobalHook.LLKHF_ALTDOWN GlobalHook.executingAssembly GlobalHook._hookType GlobalHook._handleToHook GlobalHook._isStarted GlobalHook._hookCallback GlobalHook.IsStarted GlobalHook.GetMainWindowHandle GlobalHook.Start() GlobalHook.Stop() GlobalHook.HookCallbackProcedure(Int32, Int32, IntPtr) GlobalHook.Application_ApplicationExit(Nullable<Object>, EventArgs) Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class MouseHook : GlobalHook Constructors | Improve this Doc View Source MouseHook(System.Reflection.Assembly) Declaration public MouseHook(System.Reflection.Assembly executingAssembly) Parameters Type Name Description System.Reflection.Assembly executingAssembly Methods | Improve this Doc View Source Break() Declaration public void Break() | Improve this Doc View Source Continue() Declaration public void Continue() | Improve this Doc View Source HookCallbackProcedure(Int32, Int32, IntPtr) Declaration protected override int HookCallbackProcedure(int nCode, int wParam, IntPtr lParam) Parameters Type Name Description System.Int32 nCode System.Int32 wParam IntPtr lParam Returns Type Description System.Int32 Events | Improve this Doc View Source Click Declaration public event EventHandler Click Event Type Type Description EventHandler | Improve this Doc View Source DoubleClick Declaration public event EventHandler DoubleClick Event Type Type Description EventHandler | Improve this Doc View Source MouseDown Declaration public event MouseEventHandler MouseDown Event Type Type Description MouseEventHandler | Improve this Doc View Source MouseMove Declaration public event MouseEventHandler MouseMove Event Type Type Description MouseEventHandler | Improve this Doc View Source MouseUp Declaration public event MouseEventHandler MouseUp Event Type Type Description MouseEventHandler | Improve this Doc View Source MouseWheel Declaration public event MouseEventHandler MouseWheel Event Type Type Description MouseEventHandler Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.MouseHookManager.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.MouseHookManager.html",
    "title": "Class MouseHookManager | Documentations",
    "keywords": "Class MouseHookManager Inheritance System.Object GlobalHook MouseHook MouseHookManager Inherited Members MouseHook.MouseDown MouseHook.MouseUp MouseHook.MouseMove MouseHook.MouseWheel MouseHook.Click MouseHook.DoubleClick MouseHook.HookCallbackProcedure(Int32, Int32, IntPtr) MouseHook.Break() MouseHook.Continue() GlobalHook.SetWindowsHookEx(Int32, GlobalHook.HookProc, IntPtr, Int32) GlobalHook.UnhookWindowsHookEx(Int32) GlobalHook.CallNextHookEx(Int32, Int32, Int32, IntPtr) GlobalHook.ToAscii(Int32, Int32, Byte[], Byte[], Int32) GlobalHook.GetKeyboardState(Byte[]) GlobalHook.GetKeyState(Int32) GlobalHook.WH_MOUSE_LL GlobalHook.WH_KEYBOARD_LL GlobalHook.WH_MOUSE GlobalHook.WH_KEYBOARD GlobalHook.WM_MOUSEMOVE GlobalHook.WM_LBUTTONDOWN GlobalHook.WM_RBUTTONDOWN GlobalHook.WM_MBUTTONDOWN GlobalHook.WM_LBUTTONUP GlobalHook.WM_RBUTTONUP GlobalHook.WM_MBUTTONUP GlobalHook.WM_LBUTTONDBLCLK GlobalHook.WM_RBUTTONDBLCLK GlobalHook.WM_MBUTTONDBLCLK GlobalHook.WM_MOUSEWHEEL GlobalHook.WM_KEYDOWN GlobalHook.WM_KEYUP GlobalHook.WM_SYSKEYDOWN GlobalHook.WM_SYSKEYUP GlobalHook.VK_SHIFT GlobalHook.VK_CAPITAL GlobalHook.VK_NUMLOCK GlobalHook.VK_LSHIFT GlobalHook.VK_RSHIFT GlobalHook.VK_LCONTROL GlobalHook.VK_RCONTROL GlobalHook.VK_LALT GlobalHook.VK_RALT GlobalHook.LLKHF_ALTDOWN GlobalHook.executingAssembly GlobalHook._hookType GlobalHook._handleToHook GlobalHook._isStarted GlobalHook._hookCallback GlobalHook.IsStarted GlobalHook.GetMainWindowHandle GlobalHook.HookCallbackProcedure(Int32, Int32, IntPtr) GlobalHook.Application_ApplicationExit(Nullable<Object>, EventArgs) Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class MouseHookManager : MouseHook Constructors | Improve this Doc View Source MouseHookManager(System.Reflection.Assembly) Declaration public MouseHookManager(System.Reflection.Assembly executingAssembly) Parameters Type Name Description System.Reflection.Assembly executingAssembly Methods | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TChildHotkey.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TChildHotkey.html",
    "title": "Class TChildHotkey | Documentations",
    "keywords": "Class TChildHotkey Inheritance System.Object TChildHotkey Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class TChildHotkey : object Constructors | Improve this Doc View Source TChildHotkey(Action<TChildHotkey>) Declaration public TChildHotkey(Action<TChildHotkey> unregister) Parameters Type Name Description Action < TChildHotkey > unregister Fields | Improve this Doc View Source ParentHotkey Declaration public TParentHotkey ParentHotkey Field Value Type Description TParentHotkey Methods | Improve this Doc View Source invokeHotkeyDownFired() Declaration protected void invokeHotkeyDownFired() | Improve this Doc View Source invokeHotkeyUpFired() Declaration protected void invokeHotkeyUpFired() | Improve this Doc View Source Unregister() Declaration public void Unregister() Events | Improve this Doc View Source HotkeyDownFired Declaration public event Action HotkeyDownFired Event Type Type Description Action | Improve this Doc View Source HotkeyUpFired Declaration public event Action HotkeyUpFired Event Type Type Description Action Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TKeyEventArgs.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TKeyEventArgs.html",
    "title": "Class TKeyEventArgs | Documentations",
    "keywords": "Class TKeyEventArgs Inheritance System.Object TKeyEventArgs Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class TKeyEventArgs : object Fields | Improve this Doc View Source KeyCode Declaration public Keys KeyCode Field Value Type Description Keys | Improve this Doc View Source Modifiers Declaration public EKeyboardModifier Modifiers Field Value Type Description EKeyboardModifier Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TParentHotkey.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Hooks.TParentHotkey.html",
    "title": "Class TParentHotkey | Documentations",
    "keywords": "Class TParentHotkey Inheritance System.Object TParentHotkey Namespace : Teronis.Windows.Forms.Hooks Assembly : Teronis.Windows.Forms.dll Syntax public class TParentHotkey : object Constructors | Improve this Doc View Source TParentHotkey(Int32, TKeyEventArgs, out Action<EHotkeyState>, Action<TChildHotkey>) Declaration public TParentHotkey(int id, TKeyEventArgs keyEventArgs, out Action<EHotkeyState> invokeHotkeyFired, Action<TChildHotkey> unregister) Parameters Type Name Description System.Int32 id TKeyEventArgs keyEventArgs Action < EHotkeyState > invokeHotkeyFired Action < TChildHotkey > unregister Properties | Improve this Doc View Source Id Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source KeyEventArgs Declaration public TKeyEventArgs KeyEventArgs { get; } Property Value Type Description TKeyEventArgs Methods | Improve this Doc View Source registerChildren(TParentHotkey) Declaration protected TChildHotkey registerChildren(TParentHotkey parentHotkey) Parameters Type Name Description TParentHotkey parentHotkey Returns Type Description TChildHotkey Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Localization.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Localization.html",
    "title": "Namespace Teronis.Windows.Forms.Localization | Documentations",
    "keywords": "Namespace Teronis.Windows.Forms.Localization Classes StringResources A strongly-typed resource class, for looking up localized strings, etc."
  },
  "Teronis.DotNet/Teronis.Windows.Forms.Localization.StringResources.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Forms.Localization.StringResources.html",
    "title": "Class StringResources | Documentations",
    "keywords": "Class StringResources A strongly-typed resource class, for looking up localized strings, etc. Inheritance System.Object StringResources Namespace : Teronis.Windows.Forms.Localization Assembly : Teronis.Windows.Forms.Localization.dll Syntax public class StringResources : object Properties | Improve this Doc View Source AnErrorOccuredExclamation Looks up a localized string similar to An error occured. Declaration public static string AnErrorOccuredExclamation { get; } Property Value Type Description System.String | Improve this Doc View Source Culture Overrides the current thread's CurrentUICulture property for all resource lookups using this strongly typed resource class. Declaration public static System.Globalization.CultureInfo Culture { get; set; } Property Value Type Description System.Globalization.CultureInfo | Improve this Doc View Source LoadingNonSentence Looks up a localized string similar to Loading.... Declaration public static string LoadingNonSentence { get; } Property Value Type Description System.String | Improve this Doc View Source NoHeader Looks up a localized string similar to No. Declaration public static string NoHeader { get; } Property Value Type Description System.String | Improve this Doc View Source OkHeader Looks up a localized string similar to Ok. Declaration public static string OkHeader { get; } Property Value Type Description System.String | Improve this Doc View Source ResourceManager Returns the cached ResourceManager instance used by this class. Declaration public static System.Resources.ResourceManager ResourceManager { get; } Property Value Type Description System.Resources.ResourceManager | Improve this Doc View Source SecurityQuestionHeader Looks up a localized string similar to Security Question. Declaration public static string SecurityQuestionHeader { get; } Property Value Type Description System.String | Improve this Doc View Source SureInterrogativeSentence Looks up a localized string similar to Are you really sure?. Declaration public static string SureInterrogativeSentence { get; } Property Value Type Description System.String | Improve this Doc View Source YesHeader Looks up a localized string similar to Yes. Declaration public static string YesHeader { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.HookProc.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.HookProc.html",
    "title": "Delegate GlobalHook.HookProc | Documentations",
    "keywords": "Delegate GlobalHook.HookProc Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax protected delegate int HookProc(int nCode, int wParam, IntPtr lParam); Parameters Type Name Description System.Int32 nCode System.Int32 wParam IntPtr lParam Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.html",
    "title": "Class GlobalHook | Documentations",
    "keywords": "Class GlobalHook Abstract base class for Mouse and Keyboard hooks Inheritance System.Object GlobalHook KeyboardHook MouseHook Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax public abstract class GlobalHook : object Constructors | Improve this Doc View Source GlobalHook(Assembly) Declaration public GlobalHook(Assembly executingAssembly) Parameters Type Name Description Assembly executingAssembly Fields | Improve this Doc View Source _handleToHook Declaration protected int _handleToHook Field Value Type Description System.Int32 | Improve this Doc View Source _hookCallback Declaration protected GlobalHook.HookProc _hookCallback Field Value Type Description GlobalHook.HookProc | Improve this Doc View Source _hookType Declaration protected int _hookType Field Value Type Description System.Int32 | Improve this Doc View Source _isStarted Declaration protected bool _isStarted Field Value Type Description System.Boolean | Improve this Doc View Source executingAssembly Declaration protected Assembly executingAssembly Field Value Type Description Assembly | Improve this Doc View Source LLKHF_ALTDOWN Declaration protected const byte LLKHF_ALTDOWN = null Field Value Type Description System.Byte | Improve this Doc View Source VK_CAPITAL Declaration protected const byte VK_CAPITAL = null Field Value Type Description System.Byte | Improve this Doc View Source VK_LALT Declaration protected const byte VK_LALT = null Field Value Type Description System.Byte | Improve this Doc View Source VK_LCONTROL Declaration protected const byte VK_LCONTROL = null Field Value Type Description System.Byte | Improve this Doc View Source VK_LSHIFT Declaration protected const byte VK_LSHIFT = null Field Value Type Description System.Byte | Improve this Doc View Source VK_NUMLOCK Declaration protected const byte VK_NUMLOCK = null Field Value Type Description System.Byte | Improve this Doc View Source VK_RALT Declaration protected const byte VK_RALT = null Field Value Type Description System.Byte | Improve this Doc View Source VK_RCONTROL Declaration protected const byte VK_RCONTROL = null Field Value Type Description System.Byte | Improve this Doc View Source VK_RSHIFT Declaration protected const byte VK_RSHIFT = null Field Value Type Description System.Byte | Improve this Doc View Source VK_SHIFT Declaration protected const byte VK_SHIFT = null Field Value Type Description System.Byte | Improve this Doc View Source WH_KEYBOARD Declaration protected const int WH_KEYBOARD = null Field Value Type Description System.Int32 | Improve this Doc View Source WH_KEYBOARD_LL Declaration protected const int WH_KEYBOARD_LL = null Field Value Type Description System.Int32 | Improve this Doc View Source WH_MOUSE Declaration protected const int WH_MOUSE = null Field Value Type Description System.Int32 | Improve this Doc View Source WH_MOUSE_LL Declaration protected const int WH_MOUSE_LL = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_KEYDOWN Declaration protected const int WM_KEYDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_KEYUP Declaration protected const int WM_KEYUP = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_LBUTTONDBLCLK Declaration protected const int WM_LBUTTONDBLCLK = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_LBUTTONDOWN Declaration protected const int WM_LBUTTONDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_LBUTTONUP Declaration protected const int WM_LBUTTONUP = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_MBUTTONDBLCLK Declaration protected const int WM_MBUTTONDBLCLK = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_MBUTTONDOWN Declaration protected const int WM_MBUTTONDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_MBUTTONUP Declaration protected const int WM_MBUTTONUP = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_MOUSEMOVE Declaration protected const int WM_MOUSEMOVE = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_MOUSEWHEEL Declaration protected const int WM_MOUSEWHEEL = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_RBUTTONDBLCLK Declaration protected const int WM_RBUTTONDBLCLK = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_RBUTTONDOWN Declaration protected const int WM_RBUTTONDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_RBUTTONUP Declaration protected const int WM_RBUTTONUP = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_SYSKEYDOWN Declaration protected const int WM_SYSKEYDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_SYSKEYUP Declaration protected const int WM_SYSKEYUP = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source GetMainWindowHandle Declaration public static Func<IntPtr> GetMainWindowHandle { get; } Property Value Type Description Func < IntPtr > | Improve this Doc View Source IsStarted Declaration public bool IsStarted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Application_ApplicationExit(Nullable<Object>, EventArgs) Declaration protected void Application_ApplicationExit(object? sender, EventArgs e) Parameters Type Name Description System.Nullable < System.Object > sender EventArgs e CallNextHookEx(Int32, Int32, Int32, IntPtr) Declaration protected static int CallNextHookEx(int idHook, int nCode, int wParam, IntPtr lParam) Parameters Type Name Description System.Int32 idHook System.Int32 nCode System.Int32 wParam IntPtr lParam Returns Type Description System.Int32 GetKeyboardState(Byte[]) Declaration protected static int GetKeyboardState(byte[] pbKeyState) Parameters Type Name Description System.Byte [] pbKeyState Returns Type Description System.Int32 GetKeyState(Int32) Declaration protected static short GetKeyState(int vKey) Parameters Type Name Description System.Int32 vKey Returns Type Description System.Int16 | Improve this Doc View Source HookCallbackProcedure(Int32, Int32, IntPtr) Declaration protected virtual int HookCallbackProcedure(int nCode, Int32 wParam, IntPtr lParam) Parameters Type Name Description System.Int32 nCode Int32 wParam IntPtr lParam Returns Type Description System.Int32 SetWindowsHookEx(Int32, GlobalHook.HookProc, IntPtr, Int32) Declaration protected static int SetWindowsHookEx(int idHook, GlobalHook.HookProc lpfn, IntPtr hMod, int dwThreadId) Parameters Type Name Description System.Int32 idHook GlobalHook.HookProc lpfn IntPtr hMod System.Int32 dwThreadId Returns Type Description System.Int32 | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() ToAscii(Int32, Int32, Byte[], Byte[], Int32) Declaration protected static int ToAscii(int uVirtKey, int uScanCode, byte[] lpbKeyState, byte[] lpwTransKey, int fuState) Parameters Type Name Description System.Int32 uVirtKey System.Int32 uScanCode System.Byte [] lpbKeyState System.Byte [] lpwTransKey System.Int32 fuState Returns Type Description System.Int32 UnhookWindowsHookEx(Int32) Declaration protected static int UnhookWindowsHookEx(int idHook) Parameters Type Name Description System.Int32 idHook Returns Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.KeyboardHookStruct.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.KeyboardHookStruct.html",
    "title": "Class GlobalHook.KeyboardHookStruct | Documentations",
    "keywords": "Class GlobalHook.KeyboardHookStruct Inheritance System.Object GlobalHook.KeyboardHookStruct Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax protected class KeyboardHookStruct : object Fields | Improve this Doc View Source dwExtraInfo Declaration public int dwExtraInfo Field Value Type Description System.Int32 | Improve this Doc View Source flags Declaration public int flags Field Value Type Description System.Int32 | Improve this Doc View Source scanCode Declaration public int scanCode Field Value Type Description System.Int32 | Improve this Doc View Source time Declaration public int time Field Value Type Description System.Int32 | Improve this Doc View Source vkCode Declaration public int vkCode Field Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.MouseHookStruct.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.MouseHookStruct.html",
    "title": "Class GlobalHook.MouseHookStruct | Documentations",
    "keywords": "Class GlobalHook.MouseHookStruct Inheritance System.Object GlobalHook.MouseHookStruct Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax protected class MouseHookStruct : object Fields | Improve this Doc View Source dwExtraInfo Declaration public int dwExtraInfo Field Value Type Description System.Int32 | Improve this Doc View Source hwnd Declaration public int hwnd Field Value Type Description System.Int32 | Improve this Doc View Source pt Declaration public GlobalHook.POINT pt Field Value Type Description GlobalHook.POINT | Improve this Doc View Source wHitTestCode Declaration public int wHitTestCode Field Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.MouseLLHookStruct.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.MouseLLHookStruct.html",
    "title": "Class GlobalHook.MouseLLHookStruct | Documentations",
    "keywords": "Class GlobalHook.MouseLLHookStruct Inheritance System.Object GlobalHook.MouseLLHookStruct Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax protected class MouseLLHookStruct : object Fields | Improve this Doc View Source dwExtraInfo Declaration public int dwExtraInfo Field Value Type Description System.Int32 | Improve this Doc View Source flags Declaration public int flags Field Value Type Description System.Int32 | Improve this Doc View Source mouseData Declaration public int mouseData Field Value Type Description System.Int32 | Improve this Doc View Source pt Declaration public GlobalHook.POINT pt Field Value Type Description GlobalHook.POINT | Improve this Doc View Source time Declaration public int time Field Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.POINT.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.GlobalHook.POINT.html",
    "title": "Class GlobalHook.POINT | Documentations",
    "keywords": "Class GlobalHook.POINT Inheritance System.Object GlobalHook.POINT Namespace : Teronis.Windows.Hooks Assembly : Teronis.Windows.Core.dll Syntax protected class POINT : object Fields | Improve this Doc View Source x Declaration public int x Field Value Type Description System.Int32 | Improve this Doc View Source y Declaration public int y Field Value Type Description System.Int32 Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Hooks.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Hooks.html",
    "title": "Namespace Teronis.Windows.Hooks | Documentations",
    "keywords": "Namespace Teronis.Windows.Hooks Classes GlobalHook Abstract base class for Mouse and Keyboard hooks GlobalHook.KeyboardHookStruct GlobalHook.MouseHookStruct GlobalHook.MouseLLHookStruct GlobalHook.POINT Delegates GlobalHook.HookProc"
  },
  "Teronis.DotNet/Teronis.Windows.html": {
    "href": "Teronis.DotNet/Teronis.Windows.html",
    "title": "Namespace Teronis.Windows | Documentations",
    "keywords": "Namespace Teronis.Windows Classes SWP SetWindowPos Flags VIRTUALKEY Win32 WindowEventListener WindowHandleInfo WindowInformations WindowsDefaults WINEVENT Structs BITMAPINFO BITMAPINFOHEADER RECT RGBQUAD Win32.SCROLLINFO Win32.WinPoint Struct representing a point. WINDOWPLACEMENT Contains information about the placement of a window on the screen. Enums BitmapCompressionMode CompositionAction DeviceCap DIB_Color_Mode The format of the bmiColors member of the BITMAPINFO structure. It must be one of the following values. EMouseFlags EProcessAccessFlags EVirtualMemoryProtection ShowWindowCommands TernaryRasterOperations Enumeration for the raster operations used in BitBlt. In C++ these are actually #define. But to use these constants with C#, a new enumeration type is defined. Win32.Bool Summary description for Win32Support. Win32Support is a wrapper class that imports all the necessary functions that are used in old double-buffering technique for smooth animation. Credits: http://www.codeguru.com/csharp/csharp/cs_graphics/drawing/article.php/c6137/Flicker-Free-Drawing-In-C.htm Win32.ScrollBarDirection Win32.ScrollInfoMask Delegates Win32.EnumWindowProc Win32.WinEventDelegate WindowEventListener.WinEventDelegate"
  },
  "Teronis.DotNet/Teronis.Windows.Input.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Input.html",
    "title": "Namespace Teronis.Windows.Input | Documentations",
    "keywords": "Namespace Teronis.Windows.Input Classes RelayCommand<T> Delegates RelayCommandExecutor<T> RelayCommandPredicate<T>"
  },
  "Teronis.DotNet/Teronis.Windows.Input.RelayCommand-1.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Input.RelayCommand-1.html",
    "title": "Class RelayCommand<T> | Documentations",
    "keywords": "Class RelayCommand<T> Inheritance System.Object RelayCommand<T> Namespace : Teronis.Windows.Input Assembly : Teronis.NetStandard.Core.dll Syntax public class RelayCommand<T> : ICommand Type Parameters Name Description T Constructors | Improve this Doc View Source RelayCommand(RelayCommandExecutor<T>) Initializes a new instance of . Declaration public RelayCommand(RelayCommandExecutor<T> executeAction) Parameters Type Name Description RelayCommandExecutor <T> executeAction Delegate to execute when Execute is called on the command. This can be null to just hook up a CanExecute delegate. Remarks CanExecute(Nullable<Object>) will always return true. | Improve this Doc View Source RelayCommand(RelayCommandExecutor<T>, RelayCommandPredicate<T>) Creates a new command. Declaration public RelayCommand(RelayCommandExecutor<T> executeAction, RelayCommandPredicate<T> canExecutePredicate) Parameters Type Name Description RelayCommandExecutor <T> executeAction The execution logic. RelayCommandPredicate <T> canExecutePredicate The execution status logic. Methods | Improve this Doc View Source CanExecute(Nullable<Object>) Defines the method that determines whether the command can execute in its current state. Declaration public bool CanExecute(object? parameter) Parameters Type Name Description System.Nullable < System.Object > parameter Data used by the command. If the command does not require data to be passed, this object can be set to null. Returns Type Description System.Boolean true if this command can be executed; otherwise, false. | Improve this Doc View Source Execute(Nullable<Object>) Defines the method to be called when the command is invoked. Declaration public void Execute(object? parameter) Parameters Type Name Description System.Nullable < System.Object > parameter Data used by the command. If the command does not require data to be passed, this object can be set to null . Events | Improve this Doc View Source CanExecuteChanged Occurs never and can be ignored if Teronis.Windows.Input.RelayCommand`1.canExecutePredicate is null. It could for example reexposes RequerySuggested of the class of CommandManager. Declaration public virtual event EventHandler? CanExecuteChanged Event Type Type Description System.Nullable < EventHandler > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Input.RelayCommandExecutor-1.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Input.RelayCommandExecutor-1.html",
    "title": "Delegate RelayCommandExecutor<T> | Documentations",
    "keywords": "Delegate RelayCommandExecutor<T> Namespace : Teronis.Windows.Input Assembly : Teronis.NetStandard.Core.dll Syntax public delegate void RelayCommandExecutor<in T>(T obj); Parameters Type Name Description T obj Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Input.RelayCommandPredicate-1.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Input.RelayCommandPredicate-1.html",
    "title": "Delegate RelayCommandPredicate<T> | Documentations",
    "keywords": "Delegate RelayCommandPredicate<T> Namespace : Teronis.Windows.Input Assembly : Teronis.NetStandard.Core.dll Syntax public delegate bool RelayCommandPredicate<in T>(T obj); Parameters Type Name Description T obj Returns Type Description System.Boolean Type Parameters Name Description T Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.RECT.html": {
    "href": "Teronis.DotNet/Teronis.Windows.RECT.html",
    "title": "Struct RECT | Documentations",
    "keywords": "Struct RECT Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct RECT Fields | Improve this Doc View Source bottom Declaration public int bottom Field Value Type Description System.Int32 | Improve this Doc View Source left Declaration public int left Field Value Type Description System.Int32 | Improve this Doc View Source right Declaration public int right Field Value Type Description System.Int32 | Improve this Doc View Source top Declaration public int top Field Value Type Description System.Int32 Methods | Improve this Doc View Source GetHeight() Declaration public int GetHeight() Returns Type Description System.Int32 | Improve this Doc View Source GetLocation() Declaration public Point GetLocation() Returns Type Description Point | Improve this Doc View Source GetRectangle() Declaration public Rectangle GetRectangle() Returns Type Description Rectangle | Improve this Doc View Source GetWidth() Declaration public int GetWidth() Returns Type Description System.Int32 | Improve this Doc View Source GetX() Declaration public int GetX() Returns Type Description System.Int32 | Improve this Doc View Source GetX(Int32) Declaration public void GetX(int x) Parameters Type Name Description System.Int32 x | Improve this Doc View Source GetY() Declaration public int GetY() Returns Type Description System.Int32 | Improve this Doc View Source GetY(Int32) Declaration public void GetY(int y) Parameters Type Name Description System.Int32 y | Improve this Doc View Source SetHeight(Int32) Declaration public int SetHeight(int height) Parameters Type Name Description System.Int32 height Returns Type Description System.Int32 | Improve this Doc View Source SetLocation(Point) Declaration public Point SetLocation(Point location) Parameters Type Name Description Point location Returns Type Description Point | Improve this Doc View Source SetLocation(Int32, Int32) Declaration public void SetLocation(int x, int y) Parameters Type Name Description System.Int32 x System.Int32 y | Improve this Doc View Source SetSize(Size) Declaration public void SetSize(Size size) Parameters Type Name Description Size size | Improve this Doc View Source SetSize(Int32, Int32) Declaration public void SetSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height | Improve this Doc View Source SetWidth(Int32) Declaration public int SetWidth(int width) Parameters Type Name Description System.Int32 width Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Windows.RGBQUAD.html": {
    "href": "Teronis.DotNet/Teronis.Windows.RGBQUAD.html",
    "title": "Struct RGBQUAD | Documentations",
    "keywords": "Struct RGBQUAD Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct RGBQUAD Fields | Improve this Doc View Source rgbBlue Declaration public byte rgbBlue Field Value Type Description System.Byte | Improve this Doc View Source rgbGreen Declaration public byte rgbGreen Field Value Type Description System.Byte | Improve this Doc View Source rgbRed Declaration public byte rgbRed Field Value Type Description System.Byte | Improve this Doc View Source rgbReserved Declaration public byte rgbReserved Field Value Type Description System.Byte"
  },
  "Teronis.DotNet/Teronis.Windows.ShowWindowCommands.html": {
    "href": "Teronis.DotNet/Teronis.Windows.ShowWindowCommands.html",
    "title": "Enum ShowWindowCommands | Documentations",
    "keywords": "Enum ShowWindowCommands Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum ShowWindowCommands : int Fields Name Description ForceMinimize Windows 2000/XP: Minimizes a window, even if the thread that owns the window is not responding. This flag should only be used when minimizing windows from a different thread. Hide Hides the window and activates another window. Maximize Maximizes the specified window. Minimize Minimizes the specified window and activates the next top-level window in the Z order. Normal Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time. Restore Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window. Show Activates the window and displays it in its current size and position. ShowDefault Sets the show state based on the SW_* value specified in the STARTUPINFO structure passed to the CreateProcess function by the program that started the application. ShowMaximized Activates the window and displays it as a maximized window. ShowMinimized Activates the window and displays it as a minimized window. ShowMinNoActive Displays the window as a minimized window. This value is similar to , except the window is not activated. ShowNA Displays the window in its current size and position. This value is similar to , except the window is not activated. ShowNoActivate Displays a window in its most recent size and position. This value is similar to , except the window is not activated."
  },
  "Teronis.DotNet/Teronis.Windows.SWP.html": {
    "href": "Teronis.DotNet/Teronis.Windows.SWP.html",
    "title": "Class SWP | Documentations",
    "keywords": "Class SWP SetWindowPos Flags Inheritance System.Object SWP Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public static class SWP : object Fields | Improve this Doc View Source ASYNCWINDOWPOS Declaration public static readonly uint ASYNCWINDOWPOS Field Value Type Description System.UInt32 | Improve this Doc View Source DEFERERASE Declaration public static readonly uint DEFERERASE Field Value Type Description System.UInt32 | Improve this Doc View Source DRAWFRAME Declaration public static readonly uint DRAWFRAME Field Value Type Description System.UInt32 | Improve this Doc View Source FRAMECHANGED Declaration public static readonly uint FRAMECHANGED Field Value Type Description System.UInt32 | Improve this Doc View Source HIDEWINDOW Declaration public static readonly uint HIDEWINDOW Field Value Type Description System.UInt32 | Improve this Doc View Source NOACTIVATE Declaration public static readonly uint NOACTIVATE Field Value Type Description System.UInt32 | Improve this Doc View Source NOCOPYBITS Declaration public static readonly uint NOCOPYBITS Field Value Type Description System.UInt32 | Improve this Doc View Source NOMOVE Declaration public static readonly uint NOMOVE Field Value Type Description System.UInt32 | Improve this Doc View Source NOOWNERZORDER Declaration public static readonly uint NOOWNERZORDER Field Value Type Description System.UInt32 | Improve this Doc View Source NOREDRAW Declaration public static readonly uint NOREDRAW Field Value Type Description System.UInt32 | Improve this Doc View Source NOREPOSITION Declaration public static readonly uint NOREPOSITION Field Value Type Description System.UInt32 | Improve this Doc View Source NOSENDCHANGING Declaration public static readonly uint NOSENDCHANGING Field Value Type Description System.UInt32 | Improve this Doc View Source NOSIZE Declaration public static readonly uint NOSIZE Field Value Type Description System.UInt32 | Improve this Doc View Source NOZORDER Declaration public static readonly uint NOZORDER Field Value Type Description System.UInt32 | Improve this Doc View Source SHOWWINDOW Declaration public static readonly uint SHOWWINDOW Field Value Type Description System.UInt32"
  },
  "Teronis.DotNet/Teronis.Windows.TernaryRasterOperations.html": {
    "href": "Teronis.DotNet/Teronis.Windows.TernaryRasterOperations.html",
    "title": "Enum TernaryRasterOperations | Documentations",
    "keywords": "Enum TernaryRasterOperations Enumeration for the raster operations used in BitBlt. In C++ these are actually #define. But to use these constants with C#, a new enumeration type is defined. Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum TernaryRasterOperations : uint Fields Name Description BLACKNESS DSTINVERT MERGECOPY MERGEPAINT NOTSRCCOPY NOTSRCERASE PATCOPY PATINVERT PATPAINT SRCAND SRCCOPY SRCERASE SRCINVERT SRCPAINT WHITENESS"
  },
  "Teronis.DotNet/Teronis.Windows.VIRTUALKEY.html": {
    "href": "Teronis.DotNet/Teronis.Windows.VIRTUALKEY.html",
    "title": "Class VIRTUALKEY | Documentations",
    "keywords": "Class VIRTUALKEY Inheritance System.Object VIRTUALKEY Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public static class VIRTUALKEY : object Fields | Improve this Doc View Source VK_0 Declaration public static ushort VK_0 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_1 Declaration public static ushort VK_1 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_2 Declaration public static ushort VK_2 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_3 Declaration public static ushort VK_3 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_4 Declaration public static ushort VK_4 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_5 Declaration public static ushort VK_5 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_6 Declaration public static ushort VK_6 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_7 Declaration public static ushort VK_7 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_8 Declaration public static ushort VK_8 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_9 Declaration public static ushort VK_9 Field Value Type Description System.UInt16 | Improve this Doc View Source VK_A Declaration public static ushort VK_A Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ACCEPT Declaration public const ushort VK_ACCEPT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ADD Declaration public const ushort VK_ADD = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_APPS Declaration public const ushort VK_APPS = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ATTN Declaration public const ushort VK_ATTN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_B Declaration public static ushort VK_B Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BACK Declaration public const ushort VK_BACK = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_BACK Declaration public const ushort VK_BROWSER_BACK = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_FAVORITES Declaration public const ushort VK_BROWSER_FAVORITES = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_FORWARD Declaration public const ushort VK_BROWSER_FORWARD = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_HOME Declaration public const ushort VK_BROWSER_HOME = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_REFRESH Declaration public const ushort VK_BROWSER_REFRESH = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_SEARCH Declaration public const ushort VK_BROWSER_SEARCH = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_BROWSER_STOP Declaration public const ushort VK_BROWSER_STOP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_C Declaration public static ushort VK_C Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CANCEL Declaration public const ushort VK_CANCEL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CAPITAL Declaration public const ushort VK_CAPITAL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CLEAR Declaration public const ushort VK_CLEAR = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CONTROL Declaration public const ushort VK_CONTROL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CONVERT Declaration public const ushort VK_CONVERT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_CRSEL Declaration public const ushort VK_CRSEL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_D Declaration public static ushort VK_D Field Value Type Description System.UInt16 | Improve this Doc View Source VK_DECIMAL Declaration public const ushort VK_DECIMAL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_DELETE Declaration public const ushort VK_DELETE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_DIVIDE Declaration public const ushort VK_DIVIDE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_DOWN Declaration public const ushort VK_DOWN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_E Declaration public static ushort VK_E Field Value Type Description System.UInt16 | Improve this Doc View Source VK_END Declaration public const ushort VK_END = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_EREOF Declaration public const ushort VK_EREOF = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ESCAPE Declaration public const ushort VK_ESCAPE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_EXECUTE Declaration public const ushort VK_EXECUTE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_EXSEL Declaration public const ushort VK_EXSEL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F Declaration public static ushort VK_F Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F1 Declaration public const ushort VK_F1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F10 Declaration public const ushort VK_F10 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F11 Declaration public const ushort VK_F11 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F12 Declaration public const ushort VK_F12 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F13 Declaration public const ushort VK_F13 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F14 Declaration public const ushort VK_F14 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F15 Declaration public const ushort VK_F15 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F16 Declaration public const ushort VK_F16 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F17 Declaration public const ushort VK_F17 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F18 Declaration public const ushort VK_F18 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F19 Declaration public const ushort VK_F19 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F2 Declaration public const ushort VK_F2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F20 Declaration public const ushort VK_F20 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F21 Declaration public const ushort VK_F21 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F22 Declaration public const ushort VK_F22 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F23 Declaration public const ushort VK_F23 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F24 Declaration public const ushort VK_F24 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F3 Declaration public const ushort VK_F3 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F4 Declaration public const ushort VK_F4 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F5 Declaration public const ushort VK_F5 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F6 Declaration public const ushort VK_F6 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F7 Declaration public const ushort VK_F7 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F8 Declaration public const ushort VK_F8 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_F9 Declaration public const ushort VK_F9 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_FINAL Declaration public const ushort VK_FINAL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_G Declaration public static ushort VK_G Field Value Type Description System.UInt16 | Improve this Doc View Source VK_H Declaration public static ushort VK_H Field Value Type Description System.UInt16 | Improve this Doc View Source VK_HANGEUL Declaration public const ushort VK_HANGEUL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_HANGUL Declaration public const ushort VK_HANGUL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_HANJA Declaration public const ushort VK_HANJA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_HELP Declaration public const ushort VK_HELP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_HOME Declaration public const ushort VK_HOME = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_I Declaration public static ushort VK_I Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ICO_00 Declaration public const ushort VK_ICO_00 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ICO_CLEAR Declaration public const ushort VK_ICO_CLEAR = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ICO_HELP Declaration public const ushort VK_ICO_HELP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_INSERT Declaration public const ushort VK_INSERT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_J Declaration public static ushort VK_J Field Value Type Description System.UInt16 | Improve this Doc View Source VK_JUNJA Declaration public const ushort VK_JUNJA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_K Declaration public static ushort VK_K Field Value Type Description System.UInt16 | Improve this Doc View Source VK_KANA Declaration public const ushort VK_KANA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_KANJI Declaration public const ushort VK_KANJI = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_L Declaration public static ushort VK_L Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LAUNCH_APP1 Declaration public const ushort VK_LAUNCH_APP1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LAUNCH_APP2 Declaration public const ushort VK_LAUNCH_APP2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LAUNCH_MAIL Declaration public const ushort VK_LAUNCH_MAIL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LAUNCH_MEDIA_SELECT Declaration public const ushort VK_LAUNCH_MEDIA_SELECT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LBUTTON Declaration public const ushort VK_LBUTTON = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LCONTROL Declaration public const ushort VK_LCONTROL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LEFT Declaration public const ushort VK_LEFT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LMENU Declaration public const ushort VK_LMENU = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LSHIFT Declaration public const ushort VK_LSHIFT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_LWIN Declaration public const ushort VK_LWIN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_M Declaration public static ushort VK_M Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MBUTTON Declaration public const ushort VK_MBUTTON = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MEDIA_NEXT_TRACK Declaration public const ushort VK_MEDIA_NEXT_TRACK = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MEDIA_PLAY_PAUSE Declaration public const ushort VK_MEDIA_PLAY_PAUSE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MEDIA_PREV_TRACK Declaration public const ushort VK_MEDIA_PREV_TRACK = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MEDIA_STOP Declaration public const ushort VK_MEDIA_STOP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MENU Declaration public const ushort VK_MENU = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MODECHANGE Declaration public const ushort VK_MODECHANGE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_MULTIPLY Declaration public const ushort VK_MULTIPLY = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_N Declaration public static ushort VK_N Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NEXT Declaration public const ushort VK_NEXT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NONAME Declaration public const ushort VK_NONAME = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NONCONVERT Declaration public const ushort VK_NONCONVERT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMLOCK Declaration public const ushort VK_NUMLOCK = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD0 Declaration public const ushort VK_NUMPAD0 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD1 Declaration public const ushort VK_NUMPAD1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD2 Declaration public const ushort VK_NUMPAD2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD3 Declaration public const ushort VK_NUMPAD3 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD4 Declaration public const ushort VK_NUMPAD4 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD5 Declaration public const ushort VK_NUMPAD5 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD6 Declaration public const ushort VK_NUMPAD6 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD7 Declaration public const ushort VK_NUMPAD7 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD8 Declaration public const ushort VK_NUMPAD8 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_NUMPAD9 Declaration public const ushort VK_NUMPAD9 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_O Declaration public static ushort VK_O Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_1 Declaration public const ushort VK_OEM_1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_102 Declaration public const ushort VK_OEM_102 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_2 Declaration public const ushort VK_OEM_2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_3 Declaration public const ushort VK_OEM_3 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_4 Declaration public const ushort VK_OEM_4 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_5 Declaration public const ushort VK_OEM_5 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_6 Declaration public const ushort VK_OEM_6 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_7 Declaration public const ushort VK_OEM_7 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_8 Declaration public const ushort VK_OEM_8 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_ATTN Declaration public const ushort VK_OEM_ATTN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_AUTO Declaration public const ushort VK_OEM_AUTO = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_AX Declaration public const ushort VK_OEM_AX = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_BACKTAB Declaration public const ushort VK_OEM_BACKTAB = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_CLEAR Declaration public const ushort VK_OEM_CLEAR = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_COMMA Declaration public const ushort VK_OEM_COMMA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_COPY Declaration public const ushort VK_OEM_COPY = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_CUSEL Declaration public const ushort VK_OEM_CUSEL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_ENLW Declaration public const ushort VK_OEM_ENLW = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FINISH Declaration public const ushort VK_OEM_FINISH = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FJ_JISHO Declaration public const ushort VK_OEM_FJ_JISHO = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FJ_LOYA Declaration public const ushort VK_OEM_FJ_LOYA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FJ_MASSHOU Declaration public const ushort VK_OEM_FJ_MASSHOU = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FJ_ROYA Declaration public const ushort VK_OEM_FJ_ROYA = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_FJ_TOUROKU Declaration public const ushort VK_OEM_FJ_TOUROKU = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_JUMP Declaration public const ushort VK_OEM_JUMP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_MINUS Declaration public const ushort VK_OEM_MINUS = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_NEC_EQUAL Declaration public const ushort VK_OEM_NEC_EQUAL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_PA1 Declaration public const ushort VK_OEM_PA1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_PA2 Declaration public const ushort VK_OEM_PA2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_PA3 Declaration public const ushort VK_OEM_PA3 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_PERIOD Declaration public const ushort VK_OEM_PERIOD = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_PLUS Declaration public const ushort VK_OEM_PLUS = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_RESET Declaration public const ushort VK_OEM_RESET = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_OEM_WSCTRL Declaration public const ushort VK_OEM_WSCTRL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_P Declaration public static ushort VK_P Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PA1 Declaration public const ushort VK_PA1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PACKET Declaration public const ushort VK_PACKET = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PAUSE Declaration public const ushort VK_PAUSE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PLAY Declaration public const ushort VK_PLAY = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PRIOR Declaration public const ushort VK_PRIOR = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PROCESSKEY Declaration public const ushort VK_PROCESSKEY = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_PRushort Declaration public const ushort VK_PRushort = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_Q Declaration public static ushort VK_Q Field Value Type Description System.UInt16 | Improve this Doc View Source VK_R Declaration public static ushort VK_R Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RBUTTON Declaration public const ushort VK_RBUTTON = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RCONTROL Declaration public const ushort VK_RCONTROL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RETURN Declaration public const ushort VK_RETURN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RIGHT Declaration public const ushort VK_RIGHT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RMENU Declaration public const ushort VK_RMENU = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RSHIFT Declaration public const ushort VK_RSHIFT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_RWIN Declaration public const ushort VK_RWIN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_S Declaration public static ushort VK_S Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SCROLL Declaration public const ushort VK_SCROLL = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SELECT Declaration public const ushort VK_SELECT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SEPARATOR Declaration public const ushort VK_SEPARATOR = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SHIFT Declaration public const ushort VK_SHIFT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SLEEP Declaration public const ushort VK_SLEEP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SNAPSHOT Declaration public const ushort VK_SNAPSHOT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SPACE Declaration public const ushort VK_SPACE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_SUBTRACT Declaration public const ushort VK_SUBTRACT = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_T Declaration public static ushort VK_T Field Value Type Description System.UInt16 | Improve this Doc View Source VK_TAB Declaration public const ushort VK_TAB = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_U Declaration public static ushort VK_U Field Value Type Description System.UInt16 | Improve this Doc View Source VK_UP Declaration public const ushort VK_UP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_V Declaration public static ushort VK_V Field Value Type Description System.UInt16 | Improve this Doc View Source VK_VOLUME_DOWN Declaration public const ushort VK_VOLUME_DOWN = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_VOLUME_MUTE Declaration public const ushort VK_VOLUME_MUTE = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_VOLUME_UP Declaration public const ushort VK_VOLUME_UP = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_W Declaration public static ushort VK_W Field Value Type Description System.UInt16 | Improve this Doc View Source VK_X Declaration public static ushort VK_X Field Value Type Description System.UInt16 | Improve this Doc View Source VK_XBUTTON1 Declaration public const ushort VK_XBUTTON1 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_XBUTTON2 Declaration public const ushort VK_XBUTTON2 = null Field Value Type Description System.UInt16 | Improve this Doc View Source VK_Y Declaration public static ushort VK_Y Field Value Type Description System.UInt16 | Improve this Doc View Source VK_Z Declaration public static ushort VK_Z Field Value Type Description System.UInt16 | Improve this Doc View Source VK_ZOOM Declaration public const ushort VK_ZOOM = null Field Value Type Description System.UInt16"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.Bool.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.Bool.html",
    "title": "Enum Win32.Bool | Documentations",
    "keywords": "Enum Win32.Bool Summary description for Win32Support. Win32Support is a wrapper class that imports all the necessary functions that are used in old double-buffering technique for smooth animation. Credits: http://www.codeguru.com/csharp/csharp/cs_graphics/drawing/article.php/c6137/Flicker-Free-Drawing-In-C.htm Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum Bool : int Fields Name Description False True"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.EnumWindowProc.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.EnumWindowProc.html",
    "title": "Delegate Win32.EnumWindowProc | Documentations",
    "keywords": "Delegate Win32.EnumWindowProc Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public delegate bool EnumWindowProc(IntPtr hwnd, IntPtr lParam); Parameters Type Name Description IntPtr hwnd IntPtr lParam Returns Type Description System.Boolean Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.html",
    "title": "Class Win32 | Documentations",
    "keywords": "Class Win32 Inheritance System.Object Win32 Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public static class Win32 : object Fields | Improve this Doc View Source ATTACH_PARENT_PROCESS Declaration public const int ATTACH_PARENT_PROCESS = null Field Value Type Description System.Int32 | Improve this Doc View Source GW_HWNDNEXT Declaration public static uint GW_HWNDNEXT Field Value Type Description System.UInt32 | Improve this Doc View Source GW_HWNDPREV Declaration public static uint GW_HWNDPREV Field Value Type Description System.UInt32 | Improve this Doc View Source GWL_EXSTYLE Declaration public const int GWL_EXSTYLE = null Field Value Type Description System.Int32 | Improve this Doc View Source GWL_STYLE Declaration public const int GWL_STYLE = null Field Value Type Description System.Int32 | Improve this Doc View Source HT_CAPTION Declaration public const int HT_CAPTION = null Field Value Type Description System.Int32 | Improve this Doc View Source HWND_BOTTOM Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows. Declaration public static readonly IntPtr HWND_BOTTOM Field Value Type Description IntPtr | Improve this Doc View Source HWND_NOTOPMOST Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window. Declaration public static readonly IntPtr HWND_NOTOPMOST Field Value Type Description IntPtr | Improve this Doc View Source HWND_TOP Places the window at the top of the Z order. Declaration public static readonly IntPtr HWND_TOP Field Value Type Description IntPtr | Improve this Doc View Source HWND_TOPMOST Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated. Declaration public static readonly IntPtr HWND_TOPMOST Field Value Type Description IntPtr | Improve this Doc View Source LWA_ALPHA Declaration public const int LWA_ALPHA = null Field Value Type Description System.Int32 | Improve this Doc View Source LWA_COLORKEY Declaration public const int LWA_COLORKEY = null Field Value Type Description System.Int32 | Improve this Doc View Source MF_BYPOSITION Declaration public static uint MF_BYPOSITION Field Value Type Description System.UInt32 | Improve this Doc View Source MF_REMOVE Declaration public static uint MF_REMOVE Field Value Type Description System.UInt32 | Improve this Doc View Source SWP_NOACTIVATE Declaration public const UInt32 SWP_NOACTIVATE = null Field Value Type Description UInt32 | Improve this Doc View Source SWP_NOMOVE Declaration public const UInt32 SWP_NOMOVE = null Field Value Type Description UInt32 | Improve this Doc View Source SWP_NOSIZE Declaration public const UInt32 SWP_NOSIZE = null Field Value Type Description UInt32 | Improve this Doc View Source WM_NCLBUTTONDOWN Declaration public const int WM_NCLBUTTONDOWN = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_NCPAINT Declaration public const int WM_NCPAINT = null Field Value Type Description System.Int32 | Improve this Doc View Source WM_PAINT Declaration public const int WM_PAINT = null Field Value Type Description System.Int32 | Improve this Doc View Source WS_BORDER Declaration public static int WS_BORDER Field Value Type Description System.Int32 | Improve this Doc View Source WS_CAPTION Declaration public static int WS_CAPTION Field Value Type Description System.Int32 | Improve this Doc View Source WS_CHILD Declaration public static uint WS_CHILD Field Value Type Description System.UInt32 | Improve this Doc View Source WS_DLGFRAME Declaration public static int WS_DLGFRAME Field Value Type Description System.Int32 | Improve this Doc View Source WS_EX_LAYERED Declaration public const int WS_EX_LAYERED = null Field Value Type Description System.Int32 | Improve this Doc View Source WS_EX_TRANSPARENT Declaration public const int WS_EX_TRANSPARENT = null Field Value Type Description System.Int32 | Improve this Doc View Source WS_MAXIMIZE Declaration public const long WS_MAXIMIZE = null Field Value Type Description System.Int64 | Improve this Doc View Source WS_POPUP Declaration public static uint WS_POPUP Field Value Type Description System.UInt32 | Improve this Doc View Source WS_SYSMENU Declaration public static uint WS_SYSMENU Field Value Type Description System.UInt32 | Improve this Doc View Source WS_THICKFRAME Declaration public static int WS_THICKFRAME Field Value Type Description System.Int32 | Improve this Doc View Source WS_VSCROLL Declaration public static uint WS_VSCROLL Field Value Type Description System.UInt32 Methods AttachConsole(Int32) Declaration public static bool AttachConsole(int dwProcessId) Parameters Type Name Description System.Int32 dwProcessId Returns Type Description System.Boolean BitBlt(IntPtr, Int32, Int32, Int32, Int32, IntPtr, Int32, Int32, TernaryRasterOperations) Performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context. Declaration public static bool BitBlt(IntPtr hdc, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, TernaryRasterOperations dwRop) Parameters Type Name Description IntPtr hdc Handle to the destination device context. System.Int32 nXDest The leftmost x-coordinate of the destination rectangle (in pixels). System.Int32 nYDest The topmost y-coordinate of the destination rectangle (in pixels). System.Int32 nWidth The width of the source and destination rectangles (in pixels). System.Int32 nHeight The height of the source and the destination rectangles (in pixels). IntPtr hdcSrc Handle to the source device context. System.Int32 nXSrc The leftmost x-coordinate of the source rectangle (in pixels). System.Int32 nYSrc The topmost y-coordinate of the source rectangle (in pixels). TernaryRasterOperations dwRop A raster-operation code. Returns Type Description System.Boolean true if the operation succeedes, false otherwise. To get extended error information, call . | Improve this Doc View Source ClientToScreen(IntPtr, Point) Declaration public static Point ClientToScreen(IntPtr hWnd, Point point) Parameters Type Name Description IntPtr hWnd Point point Returns Type Description Point CloseHandle(IntPtr) Declaration public static bool CloseHandle(IntPtr hObject) Parameters Type Name Description IntPtr hObject Returns Type Description System.Boolean CreateCompatibleBitmap(IntPtr, Int32, Int32) CreateCompatibleBitmap Declaration public static IntPtr CreateCompatibleBitmap(IntPtr hObject, int width, int height) Parameters Type Name Description IntPtr hObject System.Int32 width System.Int32 height Returns Type Description IntPtr CreateCompatibleDC(IntPtr) CreateCompatibleDC Declaration public static IntPtr CreateCompatibleDC(IntPtr hDC) Parameters Type Name Description IntPtr hDC Returns Type Description IntPtr DeleteDC(IntPtr) DeleteDC Declaration public static bool DeleteDC(IntPtr hdc) Parameters Type Name Description IntPtr hdc Returns Type Description System.Boolean DeleteMenu(IntPtr, Int32, Int32) Declaration public static int DeleteMenu(IntPtr hMenu, int nPosition, int wFlags) Parameters Type Name Description IntPtr hMenu System.Int32 nPosition System.Int32 wFlags Returns Type Description System.Int32 DeleteObject(IntPtr) DeleteObject Declaration public static bool DeleteObject(IntPtr hObject) Parameters Type Name Description IntPtr hObject Returns Type Description System.Boolean DrawMenuBar(IntPtr) Declaration public static bool DrawMenuBar(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description System.Boolean DwmEnableComposition(CompositionAction) Declaration public static void DwmEnableComposition(CompositionAction uCompositionAction) Parameters Type Name Description CompositionAction uCompositionAction EnumChildWindows(IntPtr, Win32.EnumWindowProc, IntPtr) Declaration public static bool EnumChildWindows(IntPtr window, Win32.EnumWindowProc callback, IntPtr lParam) Parameters Type Name Description IntPtr window Win32.EnumWindowProc callback IntPtr lParam Returns Type Description System.Boolean FreeConsole() Declaration public static int FreeConsole() Returns Type Description System.Int32 GetAsyncKeyState(UInt16) Declaration public static short GetAsyncKeyState(UInt16 virtualKeyCode) Parameters Type Name Description UInt16 virtualKeyCode Returns Type Description System.Int16 | Improve this Doc View Source GetChildWindow(IEnumerable<IntPtr>, Func<IntPtr, StringBuilder, Int32, Int32>, String) Declaration public static IntPtr GetChildWindow(IEnumerable<IntPtr> childs, Func<IntPtr, StringBuilder, int, int> callback, string caption) Parameters Type Name Description IEnumerable < IntPtr > childs Func < IntPtr , StringBuilder , System.Int32 , System.Int32 > callback System.String caption Returns Type Description IntPtr | Improve this Doc View Source GetChildWindow(IntPtr, Func<IntPtr, StringBuilder, Int32, Int32>, String) Declaration public static IntPtr GetChildWindow(IntPtr parent, Func<IntPtr, StringBuilder, int, int> callback, string caption) Parameters Type Name Description IntPtr parent Func < IntPtr , StringBuilder , System.Int32 , System.Int32 > callback System.String caption Returns Type Description IntPtr GetClassName(IntPtr, StringBuilder, Int32) Declaration public static int GetClassName(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount) Parameters Type Name Description IntPtr hWnd StringBuilder lpClassName System.Int32 nMaxCount Returns Type Description System.Int32 | Improve this Doc View Source GetCursorPoint() Declaration public static Point GetCursorPoint() Returns Type Description Point GetDC(IntPtr) Declaration public static IntPtr GetDC(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description IntPtr GetDesktopWindow() Retrieves a handle to the desktop window. The desktop window covers the entire screen. The desktop window is the area on top of which other windows are painted. Declaration public static IntPtr GetDesktopWindow() Returns Type Description IntPtr The return value is a handle to the desktop window. GetDeviceCaps(IntPtr, DeviceCap) The GetDeviceCaps function retrieves device-specific information for the specified device. Declaration public static int GetDeviceCaps(IntPtr hdc, DeviceCap nIndex) Parameters Type Name Description IntPtr hdc DeviceCap nIndex Returns Type Description System.Int32 GetDIBits(IntPtr, IntPtr, UInt32, UInt32, Byte*, BITMAPINFO*, DIB_Color_Mode) Declaration public static int GetDIBits(IntPtr hdc, IntPtr hbitmap, uint uStartScan, uint cScanLines, byte *lpvBits, BITMAPINFO*bmi, DIB_Color_Mode uUsage) Parameters Type Name Description IntPtr hdc IntPtr hbitmap System.UInt32 uStartScan System.UInt32 cScanLines System.Byte * lpvBits BITMAPINFO * bmi DIB_Color_Mode uUsage Returns Type Description System.Int32 GetForegroundWindow() Declaration public static IntPtr GetForegroundWindow() Returns Type Description IntPtr | Improve this Doc View Source GetInnerWindowRectangle(IntPtr) Declaration public static Rectangle GetInnerWindowRectangle(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description Rectangle GetMenu(IntPtr) Declaration public static IntPtr GetMenu(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description IntPtr GetMenuItemCount(IntPtr) Declaration public static int GetMenuItemCount(IntPtr hMenu) Parameters Type Name Description IntPtr hMenu Returns Type Description System.Int32 GetModuleHandle(String) Declaration public static IntPtr GetModuleHandle(string lpModuleName) Parameters Type Name Description System.String lpModuleName Returns Type Description IntPtr | Improve this Doc View Source GetOuterWindowRectangle(IntPtr) Declaration public static Rectangle GetOuterWindowRectangle(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description Rectangle GetScrollInfo(IntPtr, Int32, ref Win32.SCROLLINFO) Declaration public static bool GetScrollInfo(IntPtr hwnd, int fnBar, ref Win32.SCROLLINFO ScrollInfo) Parameters Type Name Description IntPtr hwnd System.Int32 fnBar Win32.SCROLLINFO ScrollInfo Returns Type Description System.Boolean GetSystemMenu(IntPtr, Boolean) Declaration public static IntPtr GetSystemMenu(IntPtr hWnd, bool bRevert) Parameters Type Name Description IntPtr hWnd System.Boolean bRevert Returns Type Description IntPtr GetSystemMetrics(Int32) Declaration public static int GetSystemMetrics(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.Int32 GetThreadId(IntPtr) Declaration public static int GetThreadId(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description System.Int32 GetTopWindow(IntPtr) Examines the Z order of the child windows associated with the specified parent window and retrieves a handle to the child window at the top of the Z order. Declaration public static IntPtr GetTopWindow(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description IntPtr GetWindow(IntPtr, UInt32) Retrieves a handle to the next or previous window in the Z-Order. The next window is below the specified window; the previous window is above. If the specified window is a topmost window, the function searches for a topmost window.If the specified window is a top-level window, the function searches for a top-level window.If the specified window is a child window, the function searches for a child window. Declaration public static IntPtr GetWindow(IntPtr hWnd, uint GW_wCmd) Parameters Type Name Description IntPtr hWnd A handle to a window. The window handle retrieved is relative to this window, based on the value of the wCmd parameter. System.UInt32 GW_wCmd Indicates whether the function returns a handle to the next window or the previous window. This parameter can be either of the following values. Returns Type Description IntPtr GetWindowDC(IntPtr) Declaration public static IntPtr GetWindowDC(IntPtr hdc) Parameters Type Name Description IntPtr hdc Returns Type Description IntPtr | Improve this Doc View Source GetWindowLong(IntPtr, Int32) Declaration public static int GetWindowLong(IntPtr hWnd, int nIndex) Parameters Type Name Description IntPtr hWnd System.Int32 nIndex Returns Type Description System.Int32 GetWindowPlacement(IntPtr, ref WINDOWPLACEMENT) Retrieves the show state and the restored, minimized, and maximized positions of the specified window. Declaration public static bool GetWindowPlacement(IntPtr hWnd, ref WINDOWPLACEMENT lpwndpl) Parameters Type Name Description IntPtr hWnd A handle to the window. WINDOWPLACEMENT lpwndpl A pointer to the WINDOWPLACEMENT structure that receives the show state and position information. Before calling GetWindowPlacement, set the length member to sizeof(WINDOWPLACEMENT). GetWindowPlacement fails if lpwndpl-> length is not set correctly. Returns Type Description System.Boolean If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError. GetWindowText(IntPtr, StringBuilder, Int32) Declaration public static int GetWindowText(IntPtr hWnd, StringBuilder text, int count) Parameters Type Name Description IntPtr hWnd StringBuilder text System.Int32 count Returns Type Description System.Int32 GetWindowThreadProcessId(IntPtr, IntPtr) Declaration public static uint GetWindowThreadProcessId(IntPtr hWnd, IntPtr ProcessId) Parameters Type Name Description IntPtr hWnd IntPtr ProcessId Returns Type Description System.UInt32 InvalidateRect(IntPtr, IntPtr, Boolean) Declaration public static bool InvalidateRect(IntPtr hWnd, IntPtr lpRect, bool bErase) Parameters Type Name Description IntPtr hWnd IntPtr lpRect System.Boolean bErase Returns Type Description System.Boolean | Improve this Doc View Source IsAeroEnabled() Declaration public static bool IsAeroEnabled() Returns Type Description System.Boolean IsIconic(IntPtr) Declaration public static bool IsIconic(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description System.Boolean Mouse_Event(EMouseFlags, Int32, Int32, Int32, Int32) WinAPI.Mouse_Event((int)flag, mPos.X, mPos.Y, 0, 0); Declaration public static void Mouse_Event(EMouseFlags dwFlags, int dx, int dy, int dwData, int dwExtraInfo) Parameters Type Name Description EMouseFlags dwFlags System.Int32 dx System.Int32 dy System.Int32 dwData System.Int32 dwExtraInfo OpenProcess(UInt32, Boolean, Int32) Declaration public static IntPtr OpenProcess(uint dwDesiredAccess, bool bInheritHandle, int dwProcessId) Parameters Type Name Description System.UInt32 dwDesiredAccess System.Boolean bInheritHandle System.Int32 dwProcessId Returns Type Description IntPtr | Improve this Doc View Source OpenProcess(EVirtualMemoryProtection, Boolean, Int32) Declaration public static IntPtr OpenProcess(EVirtualMemoryProtection dwDesiredAccess, bool bInheritHandle, int dwProcessId) Parameters Type Name Description EVirtualMemoryProtection dwDesiredAccess System.Boolean bInheritHandle System.Int32 dwProcessId Returns Type Description IntPtr PostMessage(IntPtr, UInt32, Int32, Int32) Declaration public static bool PostMessage(IntPtr hwnd, uint Msg, int wParam, int lParam) Parameters Type Name Description IntPtr hwnd System.UInt32 Msg System.Int32 wParam System.Int32 lParam Returns Type Description System.Boolean PrintWindow(IntPtr, IntPtr, UInt32) Declaration public static bool PrintWindow(IntPtr hWnd, IntPtr hdcBlt, uint nFlags) Parameters Type Name Description IntPtr hWnd IntPtr hdcBlt System.UInt32 nFlags Returns Type Description System.Boolean ReadProcessMemory(IntPtr, IntPtr, Byte[], UInt32, UInt32) Declaration public static bool ReadProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, uint dwSize, uint lpNumberOfBytesRead) Parameters Type Name Description IntPtr hProcess IntPtr lpBaseAddress System.Byte [] lpBuffer System.UInt32 dwSize System.UInt32 lpNumberOfBytesRead Returns Type Description System.Boolean ReleaseCapture() Declaration public static bool ReleaseCapture() Returns Type Description System.Boolean ReleaseDC(IntPtr, IntPtr) ReleaseDC Declaration public static bool ReleaseDC(IntPtr hWnd, IntPtr hdc) Parameters Type Name Description IntPtr hWnd IntPtr hdc Returns Type Description System.Boolean RemoveMenu(IntPtr, UInt32, UInt32) Declaration public static bool RemoveMenu(IntPtr hMenu, uint uPosition, uint uFlags) Parameters Type Name Description IntPtr hMenu System.UInt32 uPosition System.UInt32 uFlags Returns Type Description System.Boolean | Improve this Doc View Source ScreenToClient(IntPtr, Point) Declaration public static Point ScreenToClient(IntPtr hWnd, Point point) Parameters Type Name Description IntPtr hWnd Point point Returns Type Description Point SelectObject(IntPtr, IntPtr) SelectObject Declaration public static IntPtr SelectObject(IntPtr hDC, IntPtr hObject) Parameters Type Name Description IntPtr hDC IntPtr hObject Returns Type Description IntPtr SendMessage(IntPtr, Int32, Int32, Int32) Declaration public static int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam) Parameters Type Name Description IntPtr hWnd System.Int32 Msg System.Int32 wParam System.Int32 lParam Returns Type Description System.Int32 SendMessage(IntPtr, UInt32, IntPtr, IntPtr) Declaration public static Int64 SendMessage(IntPtr hWnd, uint msg, IntPtr wParam, IntPtr lParam) Parameters Type Name Description IntPtr hWnd System.UInt32 msg IntPtr wParam IntPtr lParam Returns Type Description Int64 | Improve this Doc View Source SetCursorPos(Point) Declaration public static bool SetCursorPos(Point location) Parameters Type Name Description Point location Returns Type Description System.Boolean SetCursorPos(Int32, Int32) Declaration public static bool SetCursorPos(int X, int Y) Parameters Type Name Description System.Int32 X System.Int32 Y Returns Type Description System.Boolean SetForegroundWindow(IntPtr) Declaration public static int SetForegroundWindow(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd Returns Type Description System.Int32 SetLayeredWindowAttributes(IntPtr, UInt32, Byte, UInt32) Declaration public static bool SetLayeredWindowAttributes(IntPtr hwnd, uint crKey, byte bAlpha, uint dwFlags) Parameters Type Name Description IntPtr hwnd System.UInt32 crKey System.Byte bAlpha System.UInt32 dwFlags Returns Type Description System.Boolean SetScrollInfo(IntPtr, Int32, ref Win32.SCROLLINFO, Boolean) Declaration public static int SetScrollInfo(IntPtr hwnd, int fnBar, ref Win32.SCROLLINFO lpsi, bool fRedraw) Parameters Type Name Description IntPtr hwnd System.Int32 fnBar Win32.SCROLLINFO lpsi System.Boolean fRedraw Returns Type Description System.Int32 | Improve this Doc View Source SetWindowLong(IntPtr, Int32, Int32) Declaration public static int SetWindowLong(IntPtr hWnd, int gwl_nIndex, int ws_dwNewLong) Parameters Type Name Description IntPtr hWnd System.Int32 gwl_nIndex System.Int32 ws_dwNewLong Returns Type Description System.Int32 SetWindowPlacement(IntPtr, ref WINDOWPLACEMENT) Sets the show state and the restored, minimized, and maximized positions of the specified window. Declaration public static bool SetWindowPlacement(IntPtr hWnd, ref WINDOWPLACEMENT lpwndpl) Parameters Type Name Description IntPtr hWnd A handle to the window. WINDOWPLACEMENT lpwndpl A pointer to a WINDOWPLACEMENT structure that specifies the new show state and window positions. Before calling SetWindowPlacement, set the length member of the WINDOWPLACEMENT structure to sizeof(WINDOWPLACEMENT). SetWindowPlacement fails if the length member is not set correctly. Returns Type Description System.Boolean If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError. SetWindowPos(IntPtr, IntPtr, Int32, Int32, Int32, Int32, UInt32) Changes the size, position, and Z order of a child, pop-up, or top-level window. These windows are ordered according to their appearance on the screen. The topmost window receives the highest rank and is the first window in the Z order. Declaration public static bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags) Parameters Type Name Description IntPtr hWnd A handle to the window. IntPtr hWndInsertAfter A handle to the window to precede the positioned window in the Z order. This parameter must be a window handle or one of the following values. (See HWND_...) System.Int32 X not used: 0 System.Int32 Y not used: 0 System.Int32 cx width; not used: 0 System.Int32 cy height; not used: 0 System.UInt32 uFlags The window sizing and positioning flags. This parameter can be a combination of the following values. (See SWP_...)) Returns Type Description System.Boolean SetWindowText(IntPtr, String) Changes the text of the specified window's title bar (if it has one). If the specified window is a control, the text of the control is changed. However, SetWindowText cannot change the text of a control in another application. Go to https://msdn.microsoft.com/en-us/library/windows/desktop/ms633546%28v=vs.85%29.aspx for more information Declaration public static bool SetWindowText(IntPtr hwnd, String lpString) Parameters Type Name Description IntPtr hwnd C++ ( hWnd [in]. Type: HWND ) A handle to the window or control whose text is to be changed. String lpString C++ ( lpString [in, optional]. Type: LPCTSTR ) The new title or control text. Returns Type Description System.Boolean If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError. Remarks If the target window is owned by the current process, SetWindowText(IntPtr, String) causes a WM_SETTEXT message to be sent to the specified window or control. If the control is a list box control created with the WS_CAPTION style, however, SetWindowText(IntPtr, String) sets the text for the control, not for the list box entries. To set the text of a control in another process, send the WM_SETTEXT message directly instead of calling SetWindowText(IntPtr, String) . The SetWindowText(IntPtr, String) function does not expand tab characters (ASCII code 0x09). Tab characters are displayed as vertical bar(|) characters. For an example go to Sending a Message. SetWinEventHook(UInt32, UInt32, IntPtr, Win32.WinEventDelegate, UInt32, UInt32, UInt32) Declaration public static IntPtr SetWinEventHook(uint eventMin, uint eventMax, IntPtr hModWinEventProc, Win32.WinEventDelegate lpfnWinEventProc, uint idProcess, uint idThread, uint dwFlags) Parameters Type Name Description System.UInt32 eventMin System.UInt32 eventMax IntPtr hModWinEventProc Win32.WinEventDelegate lpfnWinEventProc System.UInt32 idProcess System.UInt32 idThread System.UInt32 dwFlags Returns Type Description IntPtr ShowScrollBar(IntPtr, Int32, Boolean) Declaration public static bool ShowScrollBar(IntPtr hWnd, int wBar, bool bShow) Parameters Type Name Description IntPtr hWnd System.Int32 wBar System.Boolean bShow Returns Type Description System.Boolean ShowWindow(IntPtr, ShowWindowCommands) Sets the specified window's show state. Declaration public static IntPtr ShowWindow(IntPtr hWnd, ShowWindowCommands nCmdShow) Parameters Type Name Description IntPtr hWnd A handle to the window. ShowWindowCommands nCmdShow Controls how the window is to be shown. This parameter is ignored the first time an application calls ShowWindow, if the program that launched the application provides a STARTUPINFO structure. Otherwise, the first time ShowWindow is called, the value should be the value obtained by the WinMain function in its nCmdShow parameter. In subsequent calls, this parameter can be one of the following values. (See SW_...) Returns Type Description IntPtr ShowWindowAsync(IntPtr, ShowWindowCommands) Declaration public static bool ShowWindowAsync(IntPtr hWnd, ShowWindowCommands cmdShow) Parameters Type Name Description IntPtr hWnd ShowWindowCommands cmdShow Returns Type Description System.Boolean UnhookWinEvent(IntPtr) Declaration public static bool UnhookWinEvent(IntPtr hWinEventHook) Parameters Type Name Description IntPtr hWinEventHook Returns Type Description System.Boolean VirtualAllocEx(IntPtr, IntPtr, UInt32, UInt32, UInt32) Declaration public static IntPtr VirtualAllocEx(IntPtr hProcess, IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect) Parameters Type Name Description IntPtr hProcess IntPtr lpAddress System.UInt32 dwSize System.UInt32 flAllocationType System.UInt32 flProtect Returns Type Description IntPtr VirtualProtectEx(IntPtr, IntPtr, UIntPtr, UInt32, out UInt32) Declaration public static bool VirtualProtectEx(IntPtr hProcess, IntPtr lpAddress, UIntPtr dwSize, uint flNewProtect, out uint lpflOldProtect) Parameters Type Name Description IntPtr hProcess IntPtr lpAddress UIntPtr dwSize System.UInt32 flNewProtect System.UInt32 lpflOldProtect Returns Type Description System.Boolean WriteProcessMemory(IntPtr, IntPtr, Byte[], UInt32, UInt32) Declaration public static bool WriteProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, uint nSize, uint lpNumberOfBytesWritten) Parameters Type Name Description IntPtr hProcess IntPtr lpBaseAddress System.Byte [] lpBuffer System.UInt32 nSize System.UInt32 lpNumberOfBytesWritten Returns Type Description System.Boolean"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.ScrollBarDirection.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.ScrollBarDirection.html",
    "title": "Enum Win32.ScrollBarDirection | Documentations",
    "keywords": "Enum Win32.ScrollBarDirection Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum ScrollBarDirection : int Fields Name Description SB_BOTH SB_CTL SB_HORZ SB_VERT"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.SCROLLINFO.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.SCROLLINFO.html",
    "title": "Struct Win32.SCROLLINFO | Documentations",
    "keywords": "Struct Win32.SCROLLINFO Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct SCROLLINFO Fields | Improve this Doc View Source cbSize Declaration public int cbSize Field Value Type Description System.Int32 | Improve this Doc View Source fMask Declaration public int fMask Field Value Type Description System.Int32 | Improve this Doc View Source nMax Declaration public int nMax Field Value Type Description System.Int32 | Improve this Doc View Source nMin Declaration public int nMin Field Value Type Description System.Int32 | Improve this Doc View Source nPage Declaration public int nPage Field Value Type Description System.Int32 | Improve this Doc View Source nPos Declaration public int nPos Field Value Type Description System.Int32 | Improve this Doc View Source nTrackPos Declaration public int nTrackPos Field Value Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.ScrollInfoMask.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.ScrollInfoMask.html",
    "title": "Enum Win32.ScrollInfoMask | Documentations",
    "keywords": "Enum Win32.ScrollInfoMask Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public enum ScrollInfoMask : uint Fields Name Description SIF_ALL SIF_DISABLENOSCROLL SIF_PAGE SIF_POS SIF_RANGE SIF_TRACKPOS"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.WinEventDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.WinEventDelegate.html",
    "title": "Delegate Win32.WinEventDelegate | Documentations",
    "keywords": "Delegate Win32.WinEventDelegate Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public delegate void WinEventDelegate(IntPtr hWinEventHook, uint eventType, IntPtr hWnd, int idObject, int idChild, uint dwEventThread, uint dwmsEventTime); Parameters Type Name Description IntPtr hWinEventHook System.UInt32 eventType IntPtr hWnd System.Int32 idObject System.Int32 idChild System.UInt32 dwEventThread System.UInt32 dwmsEventTime Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.Win32.WinPoint.html": {
    "href": "Teronis.DotNet/Teronis.Windows.Win32.WinPoint.html",
    "title": "Struct Win32.WinPoint | Documentations",
    "keywords": "Struct Win32.WinPoint Struct representing a point. Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct WinPoint Fields | Improve this Doc View Source X Declaration public int X Field Value Type Description System.Int32 | Improve this Doc View Source Y Declaration public int Y Field Value Type Description System.Int32 Operators | Improve this Doc View Source Implicit(Win32.WinPoint to Point) Declaration public static implicit operator Point(Win32.WinPoint point) Parameters Type Name Description Win32.WinPoint point Returns Type Description Point"
  },
  "Teronis.DotNet/Teronis.Windows.WindowEventListener.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WindowEventListener.html",
    "title": "Class WindowEventListener | Documentations",
    "keywords": "Class WindowEventListener Inheritance System.Object WindowEventListener Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public class WindowEventListener : IDisposable Constructors | Improve this Doc View Source WindowEventListener(UInt32, UInt32) With this class you are able to listen to global window event(s). Declaration public WindowEventListener(uint winEvent, uint dwFlags) Parameters Type Name Description System.UInt32 winEvent WINEVENT System.UInt32 dwFlags WINEVENT_OUTOFCONTEXT | WINEVENT_SKIPOWNPROCESS Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Events | Improve this Doc View Source WinEventRaised Declaration public event WindowEventListener.WinEventDelegate WinEventRaised Event Type Type Description WindowEventListener.WinEventDelegate Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.WindowEventListener.WinEventDelegate.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WindowEventListener.WinEventDelegate.html",
    "title": "Delegate WindowEventListener.WinEventDelegate | Documentations",
    "keywords": "Delegate WindowEventListener.WinEventDelegate Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public delegate void WinEventDelegate(WindowEventListener listener, IntPtr hWnd); Parameters Type Name Description WindowEventListener listener IntPtr hWnd Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.WindowHandleInfo.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WindowHandleInfo.html",
    "title": "Class WindowHandleInfo | Documentations",
    "keywords": "Class WindowHandleInfo Inheritance System.Object WindowHandleInfo Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public class WindowHandleInfo : object Constructors | Improve this Doc View Source WindowHandleInfo(IntPtr) Declaration public WindowHandleInfo(IntPtr handle) Parameters Type Name Description IntPtr handle Methods | Improve this Doc View Source GetAllChildHandles() Declaration public List<IntPtr> GetAllChildHandles() Returns Type Description List < IntPtr > Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.WindowInformations.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WindowInformations.html",
    "title": "Class WindowInformations | Documentations",
    "keywords": "Class WindowInformations Inheritance System.Object WindowInformations Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public class WindowInformations : object Constructors | Improve this Doc View Source WindowInformations(IntPtr) Declaration public WindowInformations(IntPtr hWnd) Parameters Type Name Description IntPtr hWnd | Improve this Doc View Source WindowInformations(IntPtr, WINDOWPLACEMENT, Rectangle, Int32) Declaration public WindowInformations(IntPtr hWnd, WINDOWPLACEMENT placement, Rectangle innerWinRect, int style) Parameters Type Name Description IntPtr hWnd WINDOWPLACEMENT placement Rectangle innerWinRect System.Int32 style Fields | Improve this Doc View Source MF_BYCOMMAND Declaration public const int MF_BYCOMMAND = null Field Value Type Description System.Int32 | Improve this Doc View Source Placement Declaration public WINDOWPLACEMENT Placement Field Value Type Description WINDOWPLACEMENT | Improve this Doc View Source SC_CLOSE Declaration public const int SC_CLOSE = null Field Value Type Description System.Int32 | Improve this Doc View Source SC_MAXIMIZE Declaration public const int SC_MAXIMIZE = null Field Value Type Description System.Int32 | Improve this Doc View Source SC_MINIMIZE Declaration public const int SC_MINIMIZE = null Field Value Type Description System.Int32 | Improve this Doc View Source SC_SIZE Declaration public const int SC_SIZE = null Field Value Type Description System.Int32 Properties | Improve this Doc View Source InnerWinRect Declaration public Rectangle InnerWinRect { get; } Property Value Type Description Rectangle | Improve this Doc View Source Style Declaration public int Style { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Apply() Declaration public void Apply() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Extension Methods ObjectExtensions.SerializeObject(Object) ObjectExtensions.SerializeObject(Object, JsonSerializerSettings)"
  },
  "Teronis.DotNet/Teronis.Windows.WINDOWPLACEMENT.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WINDOWPLACEMENT.html",
    "title": "Struct WINDOWPLACEMENT | Documentations",
    "keywords": "Struct WINDOWPLACEMENT Contains information about the placement of a window on the screen. Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public struct WINDOWPLACEMENT Constructors | Improve this Doc View Source WINDOWPLACEMENT(WINDOWPLACEMENT) Declaration public WINDOWPLACEMENT(WINDOWPLACEMENT placement) Parameters Type Name Description WINDOWPLACEMENT placement Fields | Improve this Doc View Source Empty Declaration public static WINDOWPLACEMENT Empty Field Value Type Description WINDOWPLACEMENT | Improve this Doc View Source Flags Specifies flags that control the position of the minimized window and the method by which the window is restored. Declaration public int Flags Field Value Type Description System.Int32 | Improve this Doc View Source Length The length of the structure, in bytes. Before calling the GetWindowPlacement or SetWindowPlacement functions, set this member to sizeof(WINDOWPLACEMENT). GetWindowPlacement and SetWindowPlacement fail if this member is not set correctly. Declaration public int Length Field Value Type Description System.Int32 | Improve this Doc View Source MaxPosition The coordinates of the window's upper-left corner when the window is maximized. Declaration public Point MaxPosition Field Value Type Description Point | Improve this Doc View Source MinPosition The coordinates of the window's upper-left corner when the window is minimized. Declaration public Point MinPosition Field Value Type Description Point | Improve this Doc View Source NormalPosition The window's coordinates when the window is in the restored position. Declaration public RECT NormalPosition Field Value Type Description RECT | Improve this Doc View Source ShowCmd The current show state of the window. Declaration public ShowWindowCommands ShowCmd Field Value Type Description ShowWindowCommands Properties | Improve this Doc View Source Default Gets the default (empty) value. Declaration public static WINDOWPLACEMENT Default { get; } Property Value Type Description WINDOWPLACEMENT Methods | Improve this Doc View Source SetShowCmd(ShowWindowCommands) Declaration public ShowWindowCommands SetShowCmd(ShowWindowCommands windowState) Parameters Type Name Description ShowWindowCommands windowState Returns Type Description ShowWindowCommands | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "Teronis.DotNet/Teronis.Windows.WindowsDefaults.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WindowsDefaults.html",
    "title": "Class WindowsDefaults | Documentations",
    "keywords": "Class WindowsDefaults Inheritance System.Object WindowsDefaults Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public static class WindowsDefaults : object Fields | Improve this Doc View Source ErrorMessageWhileImportingDll Declaration public const string ErrorMessageWhileImportingDll = null Field Value Type Description System.String | Improve this Doc View Source WM_SETREDRAW Declaration public const int WM_SETREDRAW = null Field Value Type Description System.Int32"
  },
  "Teronis.DotNet/Teronis.Windows.WINEVENT.html": {
    "href": "Teronis.DotNet/Teronis.Windows.WINEVENT.html",
    "title": "Class WINEVENT | Documentations",
    "keywords": "Class WINEVENT Inheritance System.Object WINEVENT Namespace : Teronis.Windows Assembly : Teronis.Windows.Core.dll Syntax public static class WINEVENT : object Fields | Improve this Doc View Source EVENT_AIA_END Declaration public const uint EVENT_AIA_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_AIA_START Declaration public const uint EVENT_AIA_START = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_CARET Declaration public const uint EVENT_CONSOLE_CARET = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_END Declaration public const uint EVENT_CONSOLE_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_END_APPLICATION Declaration public const uint EVENT_CONSOLE_END_APPLICATION = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_LAYOUT Declaration public const uint EVENT_CONSOLE_LAYOUT = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_START_APPLICATION Declaration public const uint EVENT_CONSOLE_START_APPLICATION = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_UPDATE_REGION Declaration public const uint EVENT_CONSOLE_UPDATE_REGION = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_UPDATE_SCROLL Declaration public const uint EVENT_CONSOLE_UPDATE_SCROLL = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_CONSOLE_UPDATE_SIMPLE Declaration public const uint EVENT_CONSOLE_UPDATE_SIMPLE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_MAX Declaration public const uint EVENT_MAX = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_MIN Declaration public const uint EVENT_MIN = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_ACCELERATORCHANGE Declaration public const uint EVENT_OBJECT_ACCELERATORCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_CONTENTSCROLLED Declaration public const uint EVENT_OBJECT_CONTENTSCROLLED = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_CREATE Declaration public const uint EVENT_OBJECT_CREATE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_DEFACTIONCHANGE Declaration public const uint EVENT_OBJECT_DEFACTIONCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_DESCRIPTIONCHANGE Declaration public const uint EVENT_OBJECT_DESCRIPTIONCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_DESTROY Declaration public const uint EVENT_OBJECT_DESTROY = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_END Declaration public const uint EVENT_OBJECT_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_FOCUS Declaration public const uint EVENT_OBJECT_FOCUS = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_HELPCHANGE Declaration public const uint EVENT_OBJECT_HELPCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_HIDE Declaration public const uint EVENT_OBJECT_HIDE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_INVOKED Declaration public const uint EVENT_OBJECT_INVOKED = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_LOCATIONCHANGE Declaration public const uint EVENT_OBJECT_LOCATIONCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_NAMECHANGE Declaration public const uint EVENT_OBJECT_NAMECHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_PARENTCHANGE Declaration public const uint EVENT_OBJECT_PARENTCHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_REORDER Declaration public const uint EVENT_OBJECT_REORDER = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_SELECTION Declaration public const uint EVENT_OBJECT_SELECTION = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_SELECTIONADD Declaration public const uint EVENT_OBJECT_SELECTIONADD = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_SELECTIONREMOVE Declaration public const uint EVENT_OBJECT_SELECTIONREMOVE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_SELECTIONWITHIN Declaration public const uint EVENT_OBJECT_SELECTIONWITHIN = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_SHOW Declaration public const uint EVENT_OBJECT_SHOW = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_STATECHANGE Declaration public const uint EVENT_OBJECT_STATECHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_TEXTSELECTIONCHANGED Declaration public const uint EVENT_OBJECT_TEXTSELECTIONCHANGED = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OBJECT_VALUECHANGE Declaration public const uint EVENT_OBJECT_VALUECHANGE = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OEM_DEFINED_END Declaration public const uint EVENT_OEM_DEFINED_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_OEM_DEFINED_START Declaration public const uint EVENT_OEM_DEFINED_START = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_ALERT Declaration public const uint EVENT_SYSTEM_ALERT = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_ARRANGMENTPREVIEW Declaration public const uint EVENT_SYSTEM_ARRANGMENTPREVIEW = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_CAPTUREEND Declaration public const uint EVENT_SYSTEM_CAPTUREEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_CAPTURESTART Declaration public const uint EVENT_SYSTEM_CAPTURESTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_CONTEXTHELPEND Declaration public const uint EVENT_SYSTEM_CONTEXTHELPEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_CONTEXTHELPSTART Declaration public const uint EVENT_SYSTEM_CONTEXTHELPSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_DESKTOPSWITCH Declaration public const uint EVENT_SYSTEM_DESKTOPSWITCH = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_DIALOGEND Declaration public const uint EVENT_SYSTEM_DIALOGEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_DIALOGSTART Declaration public const uint EVENT_SYSTEM_DIALOGSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_DRAGDROPEND Declaration public const uint EVENT_SYSTEM_DRAGDROPEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_DRAGDROPSTART Declaration public const uint EVENT_SYSTEM_DRAGDROPSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_END Declaration public const uint EVENT_SYSTEM_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_FOREGROUND Declaration public const uint EVENT_SYSTEM_FOREGROUND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MENUEND Declaration public const uint EVENT_SYSTEM_MENUEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MENUPOPUPEND Declaration public const uint EVENT_SYSTEM_MENUPOPUPEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MENUPOPUPSTART Declaration public const uint EVENT_SYSTEM_MENUPOPUPSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MENUSTART Declaration public const uint EVENT_SYSTEM_MENUSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MINIMIZEEND Declaration public const uint EVENT_SYSTEM_MINIMIZEEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MINIMIZESTART Declaration public const uint EVENT_SYSTEM_MINIMIZESTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MOVESIZEEND Declaration public const uint EVENT_SYSTEM_MOVESIZEEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_MOVESIZESTART Declaration public const uint EVENT_SYSTEM_MOVESIZESTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_SCROLLINGEND Declaration public const uint EVENT_SYSTEM_SCROLLINGEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_SCROLLINGSTART Declaration public const uint EVENT_SYSTEM_SCROLLINGSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_SOUND Declaration public const uint EVENT_SYSTEM_SOUND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_SWITCHEND Declaration public const uint EVENT_SYSTEM_SWITCHEND = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_SYSTEM_SWITCHSTART Declaration public const uint EVENT_SYSTEM_SWITCHSTART = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_UIA_EVENTID_END Declaration public const uint EVENT_UIA_EVENTID_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_UIA_EVENTID_START Declaration public const uint EVENT_UIA_EVENTID_START = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_UIA_PROPID_END Declaration public const uint EVENT_UIA_PROPID_END = null Field Value Type Description System.UInt32 | Improve this Doc View Source EVENT_UIA_PROPID_START Declaration public const uint EVENT_UIA_PROPID_START = null Field Value Type Description System.UInt32 | Improve this Doc View Source WINEVENT_INCONTEXT Declaration public const uint WINEVENT_INCONTEXT = null Field Value Type Description System.UInt32 | Improve this Doc View Source WINEVENT_OUTOFCONTEXT Declaration public const uint WINEVENT_OUTOFCONTEXT = null Field Value Type Description System.UInt32 | Improve this Doc View Source WINEVENT_SKIPOWNPROCESS Declaration public const uint WINEVENT_SKIPOWNPROCESS = null Field Value Type Description System.UInt32 | Improve this Doc View Source WINEVENT_SKIPOWNTHREAD Declaration public const uint WINEVENT_SKIPOWNTHREAD = null Field Value Type Description System.UInt32"
  },
  "Teronis.DotNet/Teronis.YetNullable.html": {
    "href": "Teronis.DotNet/Teronis.YetNullable.html",
    "title": "Class YetNullable | Documentations",
    "keywords": "Class YetNullable Inheritance System.Object YetNullable Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public static class YetNullable : object Methods | Improve this Doc View Source Compare<T>(YetNullable<T>, YetNullable<T>) Declaration public static int Compare<T>(YetNullable<T> left, YetNullable<T> right) Parameters Type Name Description YetNullable <T> left YetNullable <T> right Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source Equals<T>(YetNullable<T>, YetNullable<T>) Declaration public static bool Equals<T>(YetNullable<T> left, YetNullable<T> right) Parameters Type Name Description YetNullable <T> left YetNullable <T> right Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetUnderlyingType(Type) Returns the underlying type of YetNullable<T> . If stillNullableType is not of type YetNullable<T> will be returned. Declaration public static Type? GetUnderlyingType(Type stillNullableType) Parameters Type Name Description Type stillNullableType Returns Type Description System.Nullable < Type > The underlying type of YetNullable<T> . | Improve this Doc View Source IsNullable(Type) Declaration public static bool IsNullable(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source Null<T>() Declaration public static YetNullable<T> Null<T>() Returns Type Description YetNullable <T> Type Parameters Name Description T | Improve this Doc View Source Null<T>(Nullable<T>) Declaration public static YetNullable<T> Null<T>(T? nullableValue) where T : struct Parameters Type Name Description System.Nullable <T> nullableValue Returns Type Description YetNullable <T> Type Parameters Name Description T"
  },
  "Teronis.DotNet/Teronis.YetNullable-1.html": {
    "href": "Teronis.DotNet/Teronis.YetNullable-1.html",
    "title": "Struct YetNullable<T> | Documentations",
    "keywords": "Struct YetNullable<T> Implements IEquatable < YetNullable <T>> IYetNullable <T> Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public struct YetNullable<T> : IEquatable<YetNullable<T>>, IYetNullable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source YetNullable(T) Declaration public YetNullable(T key) Parameters Type Name Description T key Fields | Improve this Doc View Source Null Declaration public static YetNullable<T> Null Field Value Type Description YetNullable <T> Properties | Improve this Doc View Source IsNotNull Declaration public bool IsNotNull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNull Declaration public bool IsNull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? other) Parameters Type Name Description System.Nullable < System.Object > other Returns Type Description System.Boolean | Improve this Doc View Source Equals(YetNullable<T>) Declaration public bool Equals(YetNullable<T> other) Parameters Type Name Description YetNullable <T> other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string? ToString() Returns Type Description System.Nullable < System.String > Operators | Improve this Doc View Source Implicit(T to YetNullable<T>) Declaration public static implicit operator YetNullable<T>(T key) Parameters Type Name Description T key Returns Type Description YetNullable <T> | Improve this Doc View Source Implicit(YetNullable<T> to T) Declaration public static implicit operator T(YetNullable<T> key) Parameters Type Name Description YetNullable <T> key Returns Type Description T Implements IEquatable<> IYetNullable<T>"
  },
  "Teronis.DotNet/Teronis.YetNullableExtensions.html": {
    "href": "Teronis.DotNet/Teronis.YetNullableExtensions.html",
    "title": "Class YetNullableExtensions | Documentations",
    "keywords": "Class YetNullableExtensions Inheritance System.Object YetNullableExtensions Namespace : Teronis Assembly : Teronis.NetStandard.Core.dll Syntax public static class YetNullableExtensions : object Methods | Improve this Doc View Source ToNullable<KeyType>(YetNullable<KeyType>) Declaration public static KeyType? ToNullable<KeyType>(this YetNullable<KeyType> nullableKey) where KeyType : struct Parameters Type Name Description YetNullable <KeyType> nullableKey Returns Type Description System.Nullable <KeyType> Type Parameters Name Description KeyType"
  }
}